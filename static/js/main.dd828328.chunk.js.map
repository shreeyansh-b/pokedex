{"version":3,"sources":["assests/svgs/attack.svg","assests/svgs/special-attack.svg","assests/svgs/defense.svg","assests/svgs/special-defense.svg","assests/svgs/speed.svg","assests/svgs/normal.svg","assests/svgs/fire.svg","assests/svgs/water.svg","assests/svgs/electric.svg","assests/svgs/grass.svg","assests/svgs/ice.svg","assests/svgs/fighting.svg","assests/svgs/poison.svg","assests/svgs/ground.svg","assests/svgs/flying.svg","assests/svgs/psychic.svg","assests/svgs/bug.svg","assests/svgs/rock.svg","assests/svgs/ghost.svg","assests/svgs/dragon.svg","assests/svgs/dark.svg","assests/svgs/steel.svg","assests/svgs/fairy.svg","assests/images/loading.gif","assests/images/loading4.gif","assests/images/loading2.gif","components/Navbar/Navbar.js","components/LandingPage/LandingPoke.js","components/LandingPage/LandingCTA.js","store/actions/actionCreators.js","store/actions/actionTypes.js","components/hooks/useWindowDimensions.js","components/LandingPage/LandingPage.js","components/PokemonPage/PokeDetailed.js","components/PokemonPage/PokeStats.js","components/PokemonPage/PokeEvolution.js","components/PokemonPage/PokeEvolutionExceptionType1.js","components/PokemonPage/PokeEvolutionExceptionType2.js","components/PokemonPage/PokeEvolutionExceptionType3.js","components/PokemonPage/PokeEvolutionExceptionType4.js","components/PokemonPage/PokeEvolutionExceptionType5.js","components/PokemonPage/PokemonPage.js","components/AllPokemons/AllPokemons.js","components/page404/page404.js","App.js","serviceWorker.js","theme.js","store/reducers/reducer.js","index.js","assests/images/logo.png","assests/images/landing.gif","assests/images/landing2.gif","assests/images/landing3.gif","assests/images/landing4.gif","assests/images/landing5.gif","assests/images/landing6.gif","assests/images/landing7.gif","assests/images/loading3.gif","assests/svgs/hp.svg"],"names":["module","exports","HideOnScroll","props","children","window","trigger","useScrollTrigger","target","undefined","Slide","appear","direction","in","useStyles","makeStyles","theme","menuButton","width","borderRadius","Navbar","classes","AppBar","elevation","color","className","navBar","Toolbar","hasBack","IconButton","style","marginRight","onClick","history","goBack","noLogo","edge","aria-label","push","pathname","src","logo","homeBtn","pokeImg","height","marginBottom","breakpoints","down","desc","LandingPoke","pokejpName","from","opacity","transform","to","config","duration","delay","Grid","container","item","xs","cursor","search","pokeName","justify","Typography","variant","textTransform","name","img","align","pokeDesc","landings","landing","landing2","landing3","landing4","landing5","landing6","landing7","randomNumber","Math","floor","random","mainHeading","subHeading","shape","paddingLeft","paddingTop","backgroundColor","fade","palette","common","black","LandingCTA","useState","searchHandler","pokeSearchHandler","toLowerCase","overflow","textAlign","display","InputBase","placeholder","root","inputRoot","input","inputInput","inputProps","onChange","e","value","onKeyPress","key","Button","getSpecies","speciesURL","dispatch","axios","get","then","res","type","currentPokemon","jpName","jpNameHandler","data","names","flavourText","flavourTextHandler","flavor_text_entries","getEvolutionChain","evolution_chain","url","evoURL","evolutionChain","pokeEvolHandler","jsondata","evoChain","evoData","chain","numberOfEvolutions","length","species","split","evolution_details","i","evolves_to","hasOwnProperty","filter","flavourtext","language","getSpeciesLanding","landingPokemon","getWindowDimensions","innerWidth","innerHeight","getRandomPokeDesc","size","flavor_text","parentContainer","minHeight","flexDirection","landingPoke","alignSelf","landingCTA","mainDiv","zIndex","background","margin","position","top","marginTop","connect","state","id","loaded","onDataLoad","weight","stats","types","actionCreators","onDataUnload","onBGLoaded","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","imageURL","console","log","downloadedImg","Image","crossOrigin","FastAverageColor","getColorAsync","rgb","colorprop","Color","saturate","document","querySelector","GetColor","Fragment","sm","md","loading3","enName","marginLeft","pokeWeightHeight","pokeHeight","pokeWeight","svgs","hp","attack","specialAttack","defense","specialDefense","speed","typesSVG","normal","fire","water","electric","grass","ice","fighting","poison","ground","flying","psychic","bug","rock","ghost","dragon","dark","steel","fairy","chip","padding","fontSize","rows","alignItems","mainGrid","PokeStats","newStats","pokeStats","newTypes","pokeTypes","Hidden","smDown","Divider","orientation","map","stat","label","base_stat","Chip","avatar","Avatar","parseInt","typeName","slot","card","text","pokemonImg","objectFit","pokemonButton","pokemonEvoGrid","maxWidth","pokeGrid","flexBasis","arrow","PokeEvolution","pokeEvolutionChain","evolutionsNumber","lg","evolution","index","species_name","Card","CardActionArea","CardMedia","component","alt","image","title","CardContent","held_item","known_move","known_move_type","location","min_affection","min_beauty","min_happiness","min_level","needs_overworld_rain","party_species","party_type","time_of_day","trade_species","gender","pokeEvoCard","arrowRotate","pokeException","pokeEvoExceptionCard","pokeEvoExceptionInsideCard","PokeEvolutionExceptionType1","pokeSelectorHandler","relative_physical_stats","turn_upside_down","mdUp","arrowGrid","pokemon","isDark","error","catch","err","bgIsDark","bgColorLoaded","bgColorHandler","match","params","lighten","setTimeout","textColor","PokeEvolutionExceptionType2","PokeEvolutionExceptionType3","PokeEvolutionExceptionType4","PokeEvolutionExceptionType5","loading","allPokemonGrid","pokemonCard","up","pokemonText","paginationBtn","minWidth","allPokemon","allPokemons","pageno","offset","results","minTime","setMinTime","Pagination","count","page","_","siblingCount","loading4","Page404","loading2","App","basename","path","exact","LandingPage","PokemonPage","AllPokemons","page404","Boolean","hostname","createMuiTheme","typography","htmlFontSize","h1","fontWeight","h3","h5","initialState","reducer","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","ThemeProvider","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.dd828328.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/attack.22260ad4.svg\";","module.exports = __webpack_public_path__ + \"static/media/special-attack.31edfa91.svg\";","module.exports = __webpack_public_path__ + \"static/media/defense.91140dd7.svg\";","module.exports = __webpack_public_path__ + \"static/media/special-defense.19f025b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/speed.cc3bcc6b.svg\";","module.exports = __webpack_public_path__ + \"static/media/normal.0c17a4c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/fire.dd044703.svg\";","module.exports = __webpack_public_path__ + \"static/media/water.5de56f82.svg\";","module.exports = __webpack_public_path__ + \"static/media/electric.33f62224.svg\";","module.exports = __webpack_public_path__ + \"static/media/grass.5fcf7ce8.svg\";","module.exports = __webpack_public_path__ + \"static/media/ice.792f0fda.svg\";","module.exports = __webpack_public_path__ + \"static/media/fighting.af4b1e2a.svg\";","module.exports = __webpack_public_path__ + \"static/media/poison.85db7962.svg\";","module.exports = __webpack_public_path__ + \"static/media/ground.3fae0197.svg\";","module.exports = __webpack_public_path__ + \"static/media/flying.568c0529.svg\";","module.exports = __webpack_public_path__ + \"static/media/psychic.18ce2303.svg\";","module.exports = __webpack_public_path__ + \"static/media/bug.dada0b61.svg\";","module.exports = __webpack_public_path__ + \"static/media/rock.c79149f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/ghost.9297e75e.svg\";","module.exports = __webpack_public_path__ + \"static/media/dragon.0490a514.svg\";","module.exports = __webpack_public_path__ + \"static/media/dark.8ee397f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/steel.c369557f.svg\";","module.exports = __webpack_public_path__ + \"static/media/fairy.768bc87f.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.0e6ec2f0.gif\";","module.exports = __webpack_public_path__ + \"static/media/loading4.4ec0a4c0.gif\";","module.exports = __webpack_public_path__ + \"static/media/loading2.90d2bcd4.gif\";","import React from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport logo from '../../assests/images/logo.png';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\r\n\r\n\r\nfunction HideOnScroll(props) {\r\n  const { children, window } = props;\r\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n  return (\r\n    <Slide appear={false} direction=\"down\" in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme,props) => ({\r\n  menuButton:{\r\n    width: '17rem',\r\n    borderRadius: 0\r\n  },\r\n}));\r\n\r\nconst Navbar =  (props) => {\r\n  const homeBtnHandler = () => {\r\n    props.history.push({pathname: '/'});\r\n  }\r\n  \r\n    const classes = useStyles(props);\r\n    return(\r\n      <HideOnScroll {...props}>\r\n        <AppBar elevation={props.elevation ? props.elevation : 0} color={props.color ? props.color : \"transparent\"}  className={classes.navBar}>\r\n          <Toolbar >\r\n            {props.hasBack ? \r\n            <IconButton style={{marginRight: '2rem'}} onClick={props.history.goBack}>\r\n            <ArrowBackIcon /> \r\n            </IconButton>\r\n            : null}\r\n            {props.noLogo ? null :\r\n                        <IconButton\r\n                        edge=\"start\"\r\n                        className={classes.menuButton}\r\n                        color=\"inherit\"\r\n                        aria-label=\"home button\"\r\n                        onClick={() => props.history.push({pathname: '/'})}\r\n                      >\r\n                        <img src={logo} style={{width: '100%'}}></img>\r\n                      </IconButton>}\r\n            {props.homeBtn ? \r\n            <IconButton style={{marginRight: '2rem'}} onClick={homeBtnHandler}>\r\n            <HomeOutlinedIcon  /> \r\n            </IconButton>\r\n            : null\r\n          }\r\n          </Toolbar>\r\n        </AppBar>\r\n        </HideOnScroll>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Spring } from 'react-spring/renderprops'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    pokeImg:{\r\n        height: '400px',\r\n        width: '400px',\r\n        marginBottom: '1rem',\r\n        [theme.breakpoints.down('md')]: {\r\n            height: '300px',\r\n            width: '300px',\r\n        },\r\n    },\r\n    desc:{\r\n        width: '45%',\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: '100%',\r\n        }\r\n    }\r\n}));\r\n\r\n\r\n\r\nconst LandingPoke = (props) => {\r\n    const classes = useStyles();\r\n    let pokejpName = [];\r\n    if(props.pokejpName){\r\n        pokejpName = props.pokejpName;\r\n    }\r\n    const pokeSelectorHandler = (search) => {\r\n        props.history.push({pathname: '/pokemon/' + search});\r\n    }  \r\n    \r\n\r\n    return(\r\n        <Spring from={ {opacity: 0, transform: 'translate3d(-1%, -1%, 0)'} } to={{opacity: 1, transform: 'translate3d(0, 0, 0)'}} config={{duration: 400, delay: 100}}>\r\n            {({opacity, transform}) => \r\n            <Grid container item xs={12} style={{opacity, transform, cursor: 'pointer'}} onClick={() => pokeSelectorHandler(props.pokeName)} >\r\n                <Grid container item xs={12} justify=\"center\">\r\n                    <Typography variant=\"h1\" style={{textTransform: 'capitalize'}}>\r\n                        {props.pokeName}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid container item xs={12} justify=\"center\">\r\n                    <Typography variant=\"h1\">\r\n                        {pokejpName[0] ? pokejpName[0].name : ''}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid container item xs={12} justify=\"center\">\r\n                    <img src={props.img} className={classes.pokeImg}></img>\r\n                </Grid>\r\n                <Grid container item xs={12} justify=\"center\">\r\n                    <Typography align=\"center\" className={classes.desc}>\r\n                        {props.pokeDesc}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            }\r\n        </Spring>\r\n    );\r\n}\r\nexport default LandingPoke;","import React, {useState} from 'react';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useSpring, animated } from 'react-spring';\r\nimport { Spring } from 'react-spring/renderprops'\r\n\r\n\r\nimport landing from '../../assests/images/landing.gif';\r\nimport landing2 from '../../assests/images/landing2.gif';\r\nimport landing3 from '../../assests/images/landing3.gif';\r\nimport landing4 from '../../assests/images/landing4.gif';\r\nimport landing5 from '../../assests/images/landing5.gif';\r\nimport landing6 from '../../assests/images/landing6.gif';\r\nimport landing7 from '../../assests/images/landing7.gif';\r\n\r\nconst landings = [landing, landing2, landing3, landing4, landing5, landing6, landing7];\r\n\r\nconst randomLanding = () => {\r\n    return(Math.floor(Math.random() * (7 - 0)) + 0);\r\n}\r\n\r\nconst randomNumber = randomLanding();   //else there will be a random number everytime the search state changes and component gets rerendered\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    pokeImg:{\r\n        height: '250px',\r\n        marginBottom: '2rem'\r\n    },\r\n    mainHeading:{\r\n        color: '#1b65c1',\r\n    },\r\n    subHeading:{\r\n        color: '#ff346c',\r\n        marginBottom: '2rem'\r\n    },\r\n    search:{\r\n        borderRadius: theme.shape.borderRadius,\r\n        paddingLeft: '1rem',\r\n        paddingTop: '0.3rem',\r\n        marginBottom: '2rem',\r\n        backgroundColor: fade(theme.palette.common.black, 0.15),\r\n        '&:hover': {\r\n          backgroundColor: fade(theme.palette.common.black, 0.25),\r\n        },\r\n    }\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst LandingCTA = (props) => {\r\n    const classes = useStyles();\r\n    const [search, searchHandler] = useState('');\r\n    const pokeSearchHandler = (search) => {\r\n        if(search){\r\n            props.history.push({pathname: '/pokemon/' + search.toLowerCase()});\r\n        }\r\n    }  \r\n    const enterKeyHandler = (e) => {\r\n        if(e.key === 'Enter'){\r\n            pokeSearchHandler(search);\r\n        }\r\n    }\r\n    const allPokemonHandler = () => {\r\n        props.history.push({pathname: '/allPokemons/1'});\r\n    }\r\n\r\n    return(\r\n        <Grid container item xs={12} style={{overflow: 'hidden'}}>\r\n            <Grid container item xs={12} justify=\"center\" style={{textAlign: 'center'}}>\r\n                <Spring from={{ opacity: 0, transform: 'translate3d(0, -25%, 0)'} } to={{opacity: 1, transform: 'translate3d(0, 0, 0)'}} config={{duration: 300}}>\r\n                    {({opacity, transform}) => \r\n                <Typography display=\"block\" style={{opacity, transform}} variant=\"h1\" className={classes.mainHeading} >\r\n                    Welcome To PokeDex \r\n                </Typography> }\r\n                </Spring>\r\n            </Grid>\r\n            <Grid container item xs={12} justify=\"center\" style={{textAlign: 'center'}}>\r\n                <Spring from={{ opacity: 0, transform: 'translate3d(0, 25%, 0)'} } to={{opacity: 1, transform: 'translate3d(0, 0, 0)'}} config={{duration: 300, delay: 100}}>\r\n                    {({opacity, transform}) => \r\n                    <Typography display=\"block\" style={{opacity, transform}} variant=\"h3\" className={classes.subHeading}>\r\n                        Find Your Favourite Pokemon\r\n                    </Typography>\r\n                    }\r\n                </Spring>\r\n            </Grid>\r\n            <Grid container item xs={12} justify=\"center\">\r\n                <img src={landings[randomNumber]} className={classes.pokeImg}></img>\r\n            </Grid>\r\n            <Grid container item xs={12} justify=\"center\">\r\n                <div className={classes.search}>\r\n                <InputBase\r\n                    placeholder=\"Search Pokemon\"\r\n                    classes={{\r\n                    root: classes.inputRoot,\r\n                    input: classes.inputInput,\r\n                    }}\r\n                    inputProps={{ 'aria-label': 'search' }}\r\n                    onChange={(e) => searchHandler(e.target.value)}\r\n                    onKeyPress={enterKeyHandler}\r\n                />\r\n                    <IconButton onClick={() => pokeSearchHandler(search)} >\r\n                    <SearchIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </Grid>\r\n            <Grid container item xs={12} justify=\"center\" >\r\n                <Button variant=\"contained\" color=\"primary\" onClick={allPokemonHandler}>\r\n                    See All Pokemons\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default LandingCTA;","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const getPokemon = (search) => {\r\n    return (dispatch) => {\r\n        axios.get(`https://pokeapi.co/api/v2/pokemon/${search}`)\r\n            .then((res) => {\r\n                dispatch({\r\n                    type: actionTypes.LOADPOKEMON,\r\n                    search: search,\r\n                    loaded: true,\r\n                    currentPokemon: {\r\n                        id: res.data.id,\r\n                        name: res.data.name,\r\n                        height: res.data.height,\r\n                        weight: res.data.weight,\r\n                        species: res.data.species,\r\n                        stats: res.data.stats,\r\n                        types: res.data.types\r\n                    },\r\n                    error: false\r\n                });\r\n                dispatch(getSpecies(res.data.species.url));\r\n            })\r\n            .catch((err) => {\r\n                    dispatch({\r\n                        type: actionTypes.ERROR,\r\n                        error: true\r\n                    })\r\n            })\r\n    }\r\n}\r\n\r\nexport const getSpecies = (speciesURL) => {\r\n    return((dispatch) => {\r\n        axios.get(speciesURL)\r\n            .then((res) => {\r\n                dispatch({\r\n                    type: actionTypes.LOADJPNAMEANDTEXT,\r\n                    currentPokemon:{\r\n                        jpName: jpNameHandler(res.data.names),\r\n                        flavourText: flavourTextHandler(res.data.flavor_text_entries)\r\n                    }\r\n                });\r\n                dispatch(getEvolutionChain(res.data.evolution_chain.url));\r\n            })\r\n    });\r\n}\r\n\r\nexport const getEvolutionChain = (evoURL) => {\r\n    return((dispatch) => {\r\n        axios.get(evoURL)\r\n            .then((res) => {\r\n                dispatch({\r\n                    type: actionTypes.LOADEVOLUTIONCHAIN,\r\n                    evolutionChain: pokeEvolHandler(res.data)\r\n                })\r\n            })\r\n    })\r\n}\r\n\r\n\r\nconst pokeEvolHandler = (jsondata) => {\r\n    let evoChain = [];\r\n    let evoData = jsondata.chain;\r\n    do {\r\n      let numberOfEvolutions = evoData['evolves_to'].length;  \r\n      evoChain.push({\r\n        \"species_name\": evoData.species.name,\r\n        \"id\": evoData.species.url.split('/')[6],\r\n        \"evolution_details\": (evoData.evolution_details.length === 0) ? 1 : evoData.evolution_details[0],\r\n      });\r\n    \r\n      if(numberOfEvolutions > 1) {\r\n        for (let i = 1;i < numberOfEvolutions; i++) { \r\n          evoChain.push({\r\n            \"species_name\": evoData.evolves_to[i].species.name,\r\n            \"id\": evoData.evolves_to[i].species.url.split('/')[6],\r\n            \"evolution_details\": (evoData.evolves_to[i].length === 0)? 1 : evoData.evolves_to[i].evolution_details[0],\r\n         });\r\n        }\r\n      }        \r\n    \r\n      evoData = evoData['evolves_to'][0];\r\n    \r\n    } while (!!evoData && evoData.hasOwnProperty('evolves_to'));\r\n    \r\n    return evoChain;\r\n}\r\n\r\nconst flavourTextHandler = (jsondata) => {\r\n    const flavourText = jsondata.filter((flavourtext) => {\r\n        if(flavourtext.language.name === \"en\"){\r\n            return(flavourtext);\r\n        }\r\n    });\r\n    return flavourText;\r\n}\r\n\r\nconst jpNameHandler = (jsondata) => {\r\n    const jpName = jsondata.filter((name) => {\r\n        if(name.language.name === 'ja'){\r\n            return(name);\r\n        }\r\n    })\r\n    return jpName;\r\n}\r\n\r\n\r\nexport const getAllPokemon = (pageno) => {\r\n    if(pageno >= 1 && pageno <= 23){\r\n        return((dispatch) => {\r\n            const offset = (pageno - 1) * 35;\r\n            axios.get(`https://pokeapi.co/api/v2/pokemon/?offset=${offset}&limit=35`)\r\n                .then((res) => {\r\n                    console.log(`https://pokeapi.co/api/v2/pokemon/?offset=${offset}&limit=35`);\r\n                    dispatch({\r\n                        type: actionTypes.VIEWALLPOKEMONS,\r\n                        allPokemons: res.data.results,\r\n                        offset: offset,\r\n                        error: false\r\n                    })\r\n                })\r\n        })\r\n    }else{\r\n        return (dispatch) => {\r\n            dispatch({\r\n                type: actionTypes.ERROR,\r\n                error: true\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const getLandingPokemon = (search) => {\r\n    return((dispatch) => {\r\n        axios.get(`https://pokeapi.co/api/v2/pokemon/${search}`)\r\n        .then((res) => {\r\n            dispatch({\r\n                type: actionTypes.LANDINGPOKEMON,\r\n                landingPokemon: {\r\n                    id: res.data.id,\r\n                    name: res.data.name,\r\n                    height: res.data.height,\r\n                    weight: res.data.weight,\r\n                    species: res.data.species,\r\n                    stats: res.data.stats,\r\n                    types: res.data.types\r\n                }\r\n            });\r\n            dispatch(getSpeciesLanding(res.data.species.url));\r\n        })\r\n    })\r\n}\r\n\r\nconst getSpeciesLanding = (speciesURL) => {\r\n    return((dispatch) => {\r\n        axios.get(speciesURL)\r\n            .then((res) => {\r\n                dispatch({\r\n                    type: actionTypes.LOADJPNAMEANDTEXTLANDINGPOKEMON,\r\n                    landingPokemon:{\r\n                        jpName: jpNameHandler(res.data.names),\r\n                        flavourText: flavourTextHandler(res.data.flavor_text_entries)\r\n                    }\r\n                });\r\n            })\r\n    });\r\n}","export const SEARCH = 'SEARCH';\r\nexport const VIEWALLPOKEMONS = 'VIEWALLPOKEMONS';\r\nexport const LOADPOKEMON = 'LOADPOKEMON';\r\nexport const LOADEVOLUTIONCHAIN = 'LOADEVOLUTIONCHAIN';\r\nexport const LOADJPNAMEANDTEXT = 'LOADJPNAMEANDTEXT';\r\nexport const CLEANALLPOKEMONS = 'CLEANALLPOKEMONS';\r\nexport const CLEANCURRENTPOKEMON = 'CLEANCURRENTPOKEMON';\r\nexport const LANDINGPOKEMON = 'LANDINGPOKEMON';\r\nexport const LOADJPNAMEANDTEXTLANDINGPOKEMON = 'LOADJPNAMEANDTEXTLANDINGPOKEMON';\r\nexport const CLEANLANDINGPOKEMON = 'CLEANLANDINGPOKEMON';\r\nexport const BGISDARK = 'BGISDARK';\r\nexport const DATALOADED = 'DATALOADED';\r\nexport const ERROR = 'ERROR';","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}","import React, {useEffect} from 'react';\r\nimport FastAverageColor from 'fast-average-color';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LandingPoke from './LandingPoke';\r\nimport LandingCTA from './LandingCTA';\r\nimport {connect} from 'react-redux';\r\nimport Color from 'color';\r\nimport * as actionCreators from '../../store/actions/actionCreators';\r\nimport * as actionTypes from '../../store/actions/actionTypes';\r\nimport loading3 from '../../assests/images/loading3.gif';\r\nimport useWindowDimensions from '../hooks/useWindowDimensions';\r\n\r\n\r\nconst randomPokemon = () => {\r\n    const pokeNames = ['bulbasaur', 'charmander', 'togepi', 'eevee', 'pikachu', 'squirtle', 'onix', 'jigglypuff', 'snorlax' , 'chikorita', 'totodile', 'piplup'];\r\n    const randomNumber = Math.floor(Math.random() * (12 - 0)) + 0;\r\n    return pokeNames[randomNumber];\r\n}\r\n\r\nconst getRandomPokeDesc = (flavourText) => {\r\n    if(flavourText){    //else wont work for first case when it's undefined\r\n        const size = flavourText.length;\r\n        const randomNumber = Math.floor(Math.random() * (size - 0)) + 0;\r\n        return flavourText[randomNumber].flavor_text;\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    parentContainer:{\r\n        minHeight: '100vh',\r\n        paddingTop: '5rem',\r\n        [theme.breakpoints.down('sm')]: {\r\n            flexDirection: 'column-reverse',\r\n            minHeight: 'auto',\r\n            paddingTop: '15rem'\r\n        }\r\n    },\r\n    landingPoke:{\r\n        alignSelf: 'center',\r\n    },\r\n    landingCTA:{\r\n        alignSelf: 'center',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginBottom: '8rem'\r\n        }\r\n    },\r\n    mainDiv:{\r\n    zIndex: '10000',\r\n    background: '#eafee9', \r\n    margin: '0 auto',\r\n    width: '100vw',\r\n    height: '100vh',\r\n    textAlign: 'center',\r\n    position: 'fixed',\r\n    top: 0,\r\n    overflow: 'auto'\r\n    },\r\n    img:{\r\n      marginTop: '10vh',\r\n      height: 'auto',\r\n      [theme.breakpoints.down('md')]: {\r\n          marginTop: '5vh',\r\n      },\r\n      [theme.breakpoints.down('sm')]: {\r\n        marginTop: '30vh',\r\n        height: '300px'\r\n      },\r\n      [theme.breakpoints.down('xs')]: {\r\n          marginTop: '25vh',\r\n          height: '200px'\r\n      },\r\n    },\r\n}));\r\n\r\n\r\nconst LandingPage = (props) => {\r\n    const { height, width } = useWindowDimensions();\r\n    const GetColor = () => {\r\n        if(props.id !== null ){\r\n            let imageURL = `https://pokeres.bastionbot.org/images/pokemon/${props.id}.png`;\r\n            console.log(imageURL,'imgurl');\r\n            const downloadedImg = new Image;\r\n            downloadedImg.crossOrigin = \"Anonymous\";\r\n            downloadedImg.src = imageURL;\r\n            const fac = new FastAverageColor();\r\n            fac.getColorAsync(downloadedImg)\r\n                .then((color) => {\r\n                    color = color;\r\n                    const rgb = color.rgb;\r\n                    const colorrgb = Color(rgb);\r\n                    let colorprop = colorrgb.saturate(1.5);\r\n                    if(width > 960){\r\n                        document.querySelector('#container').style.background = `linear-gradient(100deg, ${colorprop} 39.92%, #ffffff 39.99%)`;\r\n                    }else if( width < 960 && width > 460){\r\n                        document.querySelector('#container').style.background = `linear-gradient(0deg, ${colorprop} 43.92%, #ffffff 43.99%)`;\r\n                    }\r\n                    else if( width <= 460){\r\n                        document.querySelector('#container').style.background = `linear-gradient(0deg, ${colorprop} 42.92%, #ffffff 42.99%)`;\r\n                    }\r\n                    props.onBGLoaded();\r\n                    console.log(width, height);\r\n                });\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        props.onDataLoad(randomPokemon());\r\n    },[])\r\n    useEffect(() =>{\r\n        GetColor();\r\n    },[props.id, width]);\r\n    const classes = useStyles();\r\n    return(\r\n        <Grid container className={classes.parentContainer} id=\"container\">\r\n            {props.loaded  ?\r\n            <React.Fragment>\r\n            <Grid container item xs={10} sm={5}  className={classes.landingPoke}>\r\n                <LandingPoke img={`https://pokeres.bastionbot.org/images/pokemon/${props.id}.png`}\r\n                pokeName={props.pokeName}\r\n                pokejpName={props.pokejpName} \r\n                pokeDesc={getRandomPokeDesc(props.pokeDesc)}\r\n                history={props.history}\r\n                    />\r\n            </Grid>\r\n            <Grid container item xs={12} md={7} className={classes.landingCTA}>\r\n                <LandingCTA history={props.history}/>\r\n            </Grid>\r\n            </React.Fragment>\r\n            : <div className={classes.mainDiv}><img src={loading3} className={classes.img}></img></div>\r\n            }\r\n        </Grid>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => { \r\n    return({\r\n        id: state.landingPokemon? state.landingPokemon.id: null,\r\n        pokeName: state.landingPokemon? state.landingPokemon.name : '',\r\n        pokejpName: state.landingPokemon? state.landingPokemon.jpName : '',\r\n        pokeDesc: state.landingPokemon? state.landingPokemon.flavourText: '',\r\n        loaded: state.loaded\r\n    });\r\n}\r\nconst mapDispatchToProps = (dispatch) => {  \r\n    return{\r\n        onDataLoad: (search) => dispatch(actionCreators.getLandingPokemon(search)),\r\n        onDataUnload: () => dispatch({type: actionTypes.CLEANLANDINGPOKEMON}),\r\n        onBGLoaded: () => dispatch({type: actionTypes.DATALOADED})\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LandingPage);","import React from 'react';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {connect} from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    pokeImg:{\r\n        height: '400px',\r\n        width: '400px',\r\n        marginBottom: '1rem',\r\n        marginTop: '-5rem',\r\n        [theme.breakpoints.down('md')]: {\r\n            height: '300px',\r\n            width: '300px',\r\n            marginTop: '0',\r\n        },\r\n        [theme.breakpoints.down('xs')]: {\r\n            height: '250px',\r\n            width: '250px',\r\n            marginTop: '0',\r\n        },\r\n    },\r\n    desc:{\r\n        width: '45%',\r\n        [theme.breakpoints.down('sm')]: {\r\n            width: '85%',\r\n        },\r\n    },\r\n    enName:{\r\n        marginLeft: '10rem',\r\n        textTransform: 'capitalize'\r\n    },\r\n    jpName:{\r\n        marginRight: '10rem',\r\n        [theme.breakpoints.down('xs')]: {\r\n            marginRight: '2rem',\r\n        },\r\n    },\r\n    pokeWeightHeight:{\r\n        marginLeft: '15rem',\r\n        marginBottom: '1rem',\r\n        [theme.breakpoints.down('xs')]: {\r\n            marginLeft: '2rem',\r\n        },\r\n    }\r\n}));\r\n\r\n\r\nconst PokeDetailed = (props) => {\r\n    const classes = useStyles();\r\n    let pokejpName = [];\r\n    if(props.pokejpName){\r\n        pokejpName = props.pokejpName;\r\n    }\r\n    \r\n    return(\r\n        <Grid container item xs={12}>\r\n            <Grid container item xs={12} justify=\"flex-start\" className={classes.enName}>\r\n                <Typography variant=\"h1\">\r\n                    {props.pokeName}\r\n                </Typography>\r\n            </Grid>\r\n            <Grid container item xs={12} justify=\"flex-end\" className={classes.jpName}>\r\n                <Typography variant=\"h1\">\r\n                    {pokejpName[0] ? pokejpName[0].name : ''}\r\n                </Typography>\r\n            </Grid>\r\n            <Grid container item xs={12} justify=\"flex-start\" className={classes.pokeWeightHeight}>\r\n                <Typography >\r\n                    Height: {props.pokeHeight / 10} meters\r\n                </Typography>\r\n            </Grid>\r\n            <Grid container item xs={12} justify=\"flex-start\" className={classes.pokeWeightHeight}>\r\n                <Typography >\r\n                    Weight: {props.pokeWeight / 10} Kilograms\r\n                </Typography>\r\n            </Grid>\r\n            <Grid container item xs={12} justify=\"center\">\r\n                <img src={props.pokeImg} className={classes.pokeImg}></img>\r\n            </Grid>\r\n            <Grid container item xs={12} justify=\"center\">\r\n                <Typography align=\"center\" className={classes.desc}>\r\n                    {props.pokeDesc}\r\n                </Typography>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return(null);\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(PokeDetailed);","import React from 'react';\r\nimport { Grid, Typography, Chip, Divider, Avatar, Hidden } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport hp from '../../assests/svgs/hp.svg';\r\nimport attack from '../../assests/svgs/attack.svg';\r\nimport specialAttack from '../../assests/svgs/special-attack.svg';\r\nimport defense from '../../assests/svgs/defense.svg';\r\nimport specialDefense from '../../assests/svgs/special-defense.svg';\r\nimport speed from '../../assests/svgs/speed.svg';\r\n\r\nimport normal from '../../assests/svgs/normal.svg';\r\nimport fire from '../../assests/svgs/fire.svg';\r\nimport water from '../../assests/svgs/water.svg';\r\nimport electric from '../../assests/svgs/electric.svg';\r\nimport grass from '../../assests/svgs/grass.svg';\r\nimport ice from '../../assests/svgs/ice.svg';\r\nimport fighting from '../../assests/svgs/fighting.svg';\r\nimport poison from '../../assests/svgs/poison.svg';\r\nimport ground from '../../assests/svgs/ground.svg';\r\nimport flying from '../../assests/svgs/flying.svg';\r\nimport psychic from '../../assests/svgs/psychic.svg';\r\nimport bug from '../../assests/svgs/bug.svg';\r\nimport rock from '../../assests/svgs/rock.svg';\r\nimport ghost from '../../assests/svgs/ghost.svg';\r\nimport dragon from '../../assests/svgs/dragon.svg';\r\nimport dark from '../../assests/svgs/dark.svg';\r\nimport steel from '../../assests/svgs/steel.svg';\r\nimport fairy from '../../assests/svgs/fairy.svg';\r\n\r\n\r\n\r\nconst svgs = [  //should've used an object but for this trivial case used an array\r\n    hp,\r\n    attack,\r\n    specialAttack,\r\n    defense,\r\n    specialDefense,\r\n    speed\r\n];\r\n\r\nconst typesSVG = {\r\n    normal,\r\n    fire,\r\n    water,\r\n    electric,\r\n    grass,\r\n    ice,\r\n    fighting,\r\n    poison,\r\n    ground,\r\n    flying,\r\n    psychic,\r\n    bug,\r\n    rock,\r\n    ghost,\r\n    dragon,\r\n    dark,\r\n    steel,\r\n    fairy\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    chip:{\r\n        marginRight: '2rem',\r\n        marginBottom: '.8rem',\r\n        padding: '1rem',\r\n        fontSize: '2rem',\r\n        height: '4rem',\r\n        textTransform: 'uppercase',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginRight: '0',\r\n          },\r\n    },\r\n    rows:{\r\n        [theme.breakpoints.down('sm')]: {\r\n            alignItems: 'center'\r\n        },\r\n    },\r\n    mainGrid:{\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginTop: '5rem'\r\n        },\r\n    }\r\n}));\r\n\r\n\r\nconst PokeStats = (props) => {\r\n    const classes = useStyles();\r\n    const newStats = [...props.pokeStats];  //cause initially props.pokeStats is undefined and map wont work therefore, assigning an array so for initial state and that array is empty and map works\r\n    const newTypes = [...props.pokeTypes];\r\n    return(\r\n        <Grid container item xs={12} className={classes.mainGrid}>\r\n            <Hidden smDown>\r\n            <Grid container item xs={1}>\r\n                <Divider orientation='vertical' />\r\n            </Grid>\r\n            </Hidden>\r\n            <Grid container item xs={12} md={11} direction=\"column\" className={classes.rows} alignItems='baseline'>\r\n                <Typography variant=\"h3\">Stats</Typography>\r\n                {\r\n                    newStats.map((stat) => {\r\n                        const label = stat.stat.name + ':' + stat.base_stat;\r\n                        return(<Chip label={label} avatar={<Avatar src={svgs[parseInt(stat.stat.url[31]) - 1]} ></Avatar>} className={classes.chip} key={parseInt(stat.stat.url[31]) - 1} size='small'></Chip>)\r\n                    })\r\n                }\r\n            </Grid>\r\n            <Hidden smDown>\r\n            <Grid container item xs={1}>\r\n                <Divider orientation='vertical' />\r\n            </Grid>\r\n            </Hidden>\r\n            <Grid container item xs={12} md={11} direction=\"column\" className={classes.rows} alignItems='baseline'>\r\n                <Typography variant=\"h3\">Type</Typography>\r\n                {\r\n                    newTypes.map((type) => {\r\n                        const typeName = type.type.name\r\n                        return(<Chip label={typeName} avatar={<Avatar src={typesSVG[typeName]} ></Avatar>} className={classes.chip} key={type.slot}></Chip>)\r\n                    })\r\n                }\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\nexport default PokeStats;","import React from 'react';\r\nimport { Grid, Typography, Chip, Divider, Avatar } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Arrow from '@material-ui/icons/ArrowRightAlt';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card:{\r\n    textAlign: 'center',\r\n    margin: '1rem'\r\n  },\r\n  text:{\r\n    textTransform: 'capitalize'\r\n  },\r\n  pokemonImg:{\r\n    objectFit: 'contain'\r\n  },\r\n  pokemonButton:{\r\n    padding: '2rem'\r\n  },\r\n  pokemonEvoGrid:{\r\n    alignItems: 'center',\r\n    '@media  (min-width: 2500px)': {\r\n      maxWidth: '1400px'\r\n  },\r\n  '@media  (max-width: 750px)': {\r\n    flexDirection: 'column'\r\n  },\r\n  },\r\n  pokeGrid:{\r\n    [theme.breakpoints.down('sm')]: {\r\n      flexBasis: '19.666667%',\r\n      maxWidth: '19.666667%'\r\n  },\r\n  '@media  (max-width: 750px)': {\r\n    flexBasis: '27%',\r\n    maxWidth: '45%'\r\n  },\r\n  '@media  (max-width: 600px)': {\r\n    flexBasis: '27%',\r\n    maxWidth: '50%'\r\n  },\r\n  '@media  (max-width: 400px)': {\r\n    flexBasis: '27%',\r\n    maxWidth: '65%'\r\n  },\r\n  },\r\n  arrow:{\r\n    '@media  (max-width: 750px)': {\r\n      transform: 'rotateZ(90deg)'\r\n    },\r\n  }\r\n}));\r\n\r\n\r\n// evolutionChainExceptions_112 = [\r\n//   'oddish',\r\n//   'poliwag',\r\n//   'ralts',\r\n//   'cosmog'];\r\n// evolutionChainExceptions_12 = [\r\n//   'slowpoke',\r\n//   'nincada',\r\n//   'snorunt',\r\n//   'clamperl',\r\n//   'burmy'];\r\n// evolutionChainExceptions_122 = [\r\n//   'wurmple',\r\n// ];\r\n// evolutionChainExceptions_13 = [\r\n//   'tyrogue'\r\n// ];\r\n// evolutionChainExceptions_18 = [\r\n//   'eevee'];\r\n\r\n\r\n\r\n\r\nconst PokeEvolution = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const pokeSelectorHandler = (search) => {\r\n    props.history.push({pathname: '/pokemon/' + search});\r\n  }  \r\n\r\n  const pokeEvolutionChain = [...props.pokeEvolutionChain]; //cause initially props.pokeEvolutionChain is undefined and map wont work therefore assigning an array so for initial state array is empty and map works\r\n  const evolutionsNumber = pokeEvolutionChain.length;\r\n  return(\r\n    <Grid container item xs={12} lg={9} justify=\"center\"  className={classes.pokemonEvoGrid}>\r\n      {\r\n        pokeEvolutionChain.map((evolution, index) => {\r\n          return(\r\n              <React.Fragment>\r\n              <Grid container item xs={2} justify=\"center\" className={classes.pokeGrid} key={evolution.id} onClick={() => pokeSelectorHandler(evolution.species_name)}>\r\n                <Card className={classes.card}>\r\n                  <CardActionArea className={classes.pokemonButton}>\r\n                    <CardMedia\r\n                      component=\"img\"\r\n                      alt={evolution.species_name}\r\n                      height=\"140\"\r\n                      image={`https://pokeres.bastionbot.org/images/pokemon/${evolution.id}.png`}\r\n                      title={evolution.species_name}\r\n                      className={classes.pokemonImg}\r\n                    />\r\n                    <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                      <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                        {evolution.species_name}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                </Card>\r\n              </Grid>\r\n              {\r\n                (evolutionsNumber - 1 ) ? (index < evolutionsNumber - 1) ? \r\n                (<div style={{ textAlign: 'center'}}><Arrow className={classes.arrow} /> <Typography>{pokeEvolutionChain[index + 1].evolution_details.trigger.name} \r\n                {pokeEvolutionChain[index + 1].evolution_details.item ? `  ${pokeEvolutionChain[index + 1].evolution_details.item.name}` : null}\r\n                {pokeEvolutionChain[index + 1].evolution_details.held_item ? ` while holding ${pokeEvolutionChain[index + 1].evolution_details.held_item.name}` : null}\r\n                {(pokeEvolutionChain[index + 1].evolution_details.known_move) ? ` while knowing ${pokeEvolutionChain[index + 1].evolution_details.known_move.name}` : null}\r\n                {(pokeEvolutionChain[index + 1].evolution_details.known_move_type) ? ` while knowing a ${pokeEvolutionChain[index + 1].evolution_details.known_move_type.name} type move` : null}\r\n                {pokeEvolutionChain[index + 1].evolution_details.location ? ` at ${pokeEvolutionChain[index + 1].evolution_details.location.name}` : null}\r\n                {pokeEvolutionChain[index + 1].evolution_details.min_affection ? ` when affection is atleast ${pokeEvolutionChain[index + 1].evolution_details.min_affection}` : null}\r\n                {pokeEvolutionChain[index + 1].evolution_details.min_beauty ? ` when beauty is atleast ${pokeEvolutionChain[index + 1].evolution_details.min_beauty}` : null}\r\n                {pokeEvolutionChain[index + 1].evolution_details.min_happiness ? ` when happiness is atleast ${pokeEvolutionChain[index + 1].evolution_details.min_happiness}` : null}\r\n                {pokeEvolutionChain[index + 1].evolution_details.min_level ? ` at level ${pokeEvolutionChain[index + 1].evolution_details.min_level}` : null}\r\n                {pokeEvolutionChain[index + 1].evolution_details.needs_overworld_rain ? ` when raining` : null}\r\n                {pokeEvolutionChain[index + 1].evolution_details.party_species ? ` with ${pokeEvolutionChain[index + 1].evolution_details.party_species.name} in party` : null}\r\n                {pokeEvolutionChain[index + 1].evolution_details.party_type ? ` with ${pokeEvolutionChain[index + 1].evolution_details.party_type.name} type pokemon in party` : null}\r\n                {pokeEvolutionChain[index + 1].evolution_details.time_of_day ? ` at ${pokeEvolutionChain[index + 1].evolution_details.time_of_day} ` : null}\r\n                {pokeEvolutionChain[index + 1].evolution_details.trade_species ? ` with ${pokeEvolutionChain[index + 1].evolution_details.trade_species.name} ` : null}\r\n                {(pokeEvolutionChain[1].evolution_details.gender === 1) ? ` if female` : (pokeEvolutionChain[1].evolution_details.gender === 1) ? ` if male` : null}\r\n                </Typography></div>)\r\n                : null : null \r\n              }\r\n              </React.Fragment>\r\n          );\r\n        })\r\n      }\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default PokeEvolution;\r\n","import React from 'react';\r\nimport { Grid, Typography, Chip, Divider, Avatar } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Arrow from '@material-ui/icons/ArrowRightAlt';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card:{\r\n    textAlign: 'center',\r\n    margin: '1rem',\r\n    \r\n  },\r\n  text:{\r\n    textTransform: 'capitalize'\r\n  },\r\n  pokemonImg:{\r\n    objectFit: 'contain'\r\n  },\r\n  pokemonButton:{\r\n    padding: '2rem'\r\n  },\r\n  pokeGrid:{\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('sm')]: {\r\n      flexDirection: 'column',\r\n      alignItems: 'normal'\r\n  },\r\n  },\r\n  pokeEvoCard:{\r\n    [theme.breakpoints.down('sm')]: {\r\n      maxWidth: '24%',\r\n      alignSelf: 'center'\r\n  },\r\n  '@media  (max-width: 750px)': {\r\n    maxWidth: '30%'\r\n  },\r\n  '@media  (max-width: 600px)': {\r\n    maxWidth: '50%'\r\n  },\r\n  },\r\n  arrow:{\r\n    marginTop: '13rem',\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginTop: '5rem',\r\n      transform: 'rotateZ(90deg)'\r\n    },\r\n  },\r\n  arrowRotate:{\r\n    [theme.breakpoints.down('sm')]: {\r\n      transform: 'rotateZ(90deg)'\r\n    },\r\n  },\r\n  pokeException:{\r\n    [theme.breakpoints.down('sm')]: {\r\n      flexDirection: 'column',\r\n      maxWidth: '50%',\r\n      alignSelf: 'center'\r\n  },\r\n  '@media  (max-width: 750px)': {\r\n    maxWidth: '73%'\r\n  },\r\n  '@media  (max-width: 450px)': {\r\n    maxWidth: '75%'\r\n  },\r\n  },\r\n  pokeEvoExceptionCard:{\r\n    [theme.breakpoints.down('sm')]: {\r\n      flexBasis: 'auto',\r\n      marginTop: '-8rem'\r\n  },\r\n  },\r\n  pokeEvoExceptionInsideCard:{\r\n    '@media  (max-width: 450px)': {\r\n      maxWidth: '100%'\r\n    },\r\n  }\r\n}));\r\n\r\n\r\n// evolutionChainExceptions_112 = [\r\n//   'oddish',\r\n//   'poliwag',\r\n//   'ralts',\r\n//   'cosmog'];\r\n// evolutionChainExceptions_12 = [\r\n//   'slowpoke',\r\n//   'nincada',\r\n//   'snorunt',\r\n//   'clamperl',\r\n//   'burmy'];\r\n// evolutionChainExceptions_122 = [\r\n//   'wurmple',\r\n// ];\r\n// evolutionChainExceptions_13 = [\r\n//   'tyrogue'\r\n// ];\r\n// evolutionChainExceptions_18 = [\r\n//   'eevee'];\r\n\r\n\r\n\r\n\r\nconst PokeEvolutionExceptionType1 = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const pokeSelectorHandler = (search) => {\r\n    props.history.push({pathname: '/pokemon/' + search});\r\n  }  \r\n\r\n  // let evos = pokeEvolHandler(json);\r\n  // console.log(evos);\r\n  const pokeEvolutionChain = [...props.pokeEvolutionChain]; //cause initially props.pokeEvolutionChain is undefined and map wont work therefore assigning an array so for initial state array is empty and map works\r\n  const evolutionsNumber = pokeEvolutionChain.length;\r\n  return(\r\n    <Grid container item xs={12} lg={9} justify=\"center\" className={classes.pokeGrid}>\r\n      {\r\n        pokeEvolutionChain.map((evolution, index) => {\r\n          return(\r\n              <React.Fragment>\r\n                  {\r\n                      index === 3 ? (\r\n                          <Grid container xs={5} className={classes.pokeException}>\r\n                              <Grid container item xs={5} md={3} justify=\"center\">\r\n                              {\r\n                                (<div style={{ textAlign: 'center'}} key={11}><Arrow className={classes.arrow} /> <Typography>{pokeEvolutionChain[2].evolution_details.trigger.name} \r\n                                {(pokeEvolutionChain[2].evolution_details.gender === 1) ? ` female` : (pokeEvolutionChain[2].evolution_details.gender === 2) ? ` male` : null}\r\n                                {pokeEvolutionChain[2].evolution_details.item ? `  ${pokeEvolutionChain[2].evolution_details.item.name}` : null}\r\n                                {pokeEvolutionChain[2].evolution_details.held_item ? ` while holding ${pokeEvolutionChain[2].evolution_details.held_item.name}` : null}\r\n                                {(pokeEvolutionChain[2].evolution_details.known_move) ? ` while knowing ${pokeEvolutionChain[2].evolution_details.known_move.name}` : null}\r\n                                {(pokeEvolutionChain[2].evolution_details.known_move_type) ? ` while knowing a ${pokeEvolutionChain[2].evolution_details.known_move_type.name} type move` : null}\r\n                                {pokeEvolutionChain[2].evolution_details.location ? ` at ${pokeEvolutionChain[2].evolution_details.location.name}` : null}\r\n                                {pokeEvolutionChain[2].evolution_details.min_affection ? ` when affection is atleast ${pokeEvolutionChain[2].evolution_details.min_affection}` : null}\r\n                                {pokeEvolutionChain[2].evolution_details.min_beauty ? ` when beauty is atleast ${pokeEvolutionChain[2].evolution_details.min_beauty}` : null}\r\n                                {pokeEvolutionChain[2].evolution_details.min_happiness ? ` when happiness is atleast ${pokeEvolutionChain[2].evolution_details.min_happiness}` : null}\r\n                                {pokeEvolutionChain[2].evolution_details.min_level ? ` at level ${pokeEvolutionChain[2].evolution_details.min_level}` : null}\r\n                                {pokeEvolutionChain[2].evolution_details.needs_overworld_rain ? ` when raining` : null}\r\n                                {pokeEvolutionChain[2].evolution_details.party_species ? ` with ${pokeEvolutionChain[2].evolution_details.party_species.name} in party` : null}\r\n                                {pokeEvolutionChain[2].evolution_details.party_type ? ` with ${pokeEvolutionChain[2].evolution_details.party_type.name} type pokemon in party` : null}\r\n                                {pokeEvolutionChain[2].evolution_details.time_of_day ? ` at ${pokeEvolutionChain[2].evolution_details.time_of_day} ` : null}\r\n                                {pokeEvolutionChain[2].evolution_details.trade_species ? ` with ${pokeEvolutionChain[2].evolution_details.trade_species.name} ` : null}\r\n                                </Typography></div>)\r\n                            }\r\n                              </Grid>\r\n                              <Grid container item xs={7} className={classes.pokeEvoExceptionCard}>\r\n                                <Grid container item xs={9} justify=\"center\" key={12} className={classes.pokeEvoExceptionInsideCard} onClick={() => pokeSelectorHandler(pokeEvolutionChain[2].species_name)}>\r\n                                    <Card className={classes.card}>\r\n                                        <CardActionArea className={classes.pokemonButton}>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            alt={pokeEvolutionChain[2].species_name}\r\n                                            height=\"140\"\r\n                                            image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[2].id}.png`}\r\n                                            title={pokeEvolutionChain[2].species_name}\r\n                                            className={classes.pokemonImg}\r\n                                        />\r\n                                        <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                                            <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                            {pokeEvolutionChain[2].species_name}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                        </CardActionArea>\r\n                                    </Card>\r\n                                </Grid>\r\n                              </Grid>\r\n                              <Grid container item  xs={5} md={3} justify=\"center\">\r\n                              {\r\n                                (<div style={{ textAlign: 'center'}} key={21}><Arrow style={{marginTop: '5rem'}} className={classes.arrowRotate} /> <Typography>{pokeEvolutionChain[3].evolution_details.trigger.name} \r\n                                {(pokeEvolutionChain[3].evolution_details.gender === 1) ? ` female` : (pokeEvolutionChain[3].evolution_details.gender === 3) ? ` male` : null}\r\n                                {pokeEvolutionChain[3].evolution_details.item ? ` ${pokeEvolutionChain[3].evolution_details.item.name}` : null}\r\n                                {pokeEvolutionChain[3].evolution_details.held_item ? ` while holding ${pokeEvolutionChain[3].evolution_details.held_item.name}` : null}\r\n                                {(pokeEvolutionChain[3].evolution_details.known_move) ? ` while knowing ${pokeEvolutionChain[3].evolution_details.known_move.name}` : null}\r\n                                {(pokeEvolutionChain[3].evolution_details.known_move_type) ? ` while knowing a ${pokeEvolutionChain[3].evolution_details.known_move_type.name} type move` : null}\r\n                                {pokeEvolutionChain[3].evolution_details.location ? ` at ${pokeEvolutionChain[3].evolution_details.location.name}` : null}\r\n                                {pokeEvolutionChain[3].evolution_details.min_affection ? ` when affection is atleast ${pokeEvolutionChain[3].evolution_details.min_affection}` : null}\r\n                                {pokeEvolutionChain[3].evolution_details.min_beauty ? ` when beauty is atleast ${pokeEvolutionChain[3].evolution_details.min_beauty}` : null}\r\n                                {pokeEvolutionChain[3].evolution_details.min_happiness ? ` when happiness is atleast ${pokeEvolutionChain[3].evolution_details.min_happiness}` : null}\r\n                                {pokeEvolutionChain[3].evolution_details.min_level ? ` at level ${pokeEvolutionChain[3].evolution_details.min_level}` : null}\r\n                                {pokeEvolutionChain[3].evolution_details.needs_overworld_rain ? ` when raining` : null}\r\n                                {pokeEvolutionChain[3].evolution_details.party_species ? ` with ${pokeEvolutionChain[3].evolution_details.party_species.name} in party` : null}\r\n                                {pokeEvolutionChain[3].evolution_details.party_type ? ` with ${pokeEvolutionChain[3].evolution_details.party_type.name} type pokemon in party` : null}\r\n                                {pokeEvolutionChain[3].evolution_details.time_of_day ? ` at ${pokeEvolutionChain[3].evolution_details.time_of_day} ` : null}\r\n                                {pokeEvolutionChain[3].evolution_details.trade_species ? ` with ${pokeEvolutionChain[3].evolution_details.trade_species.name} ` : null}\r\n                                </Typography></div>)\r\n                            }\r\n                              </Grid>\r\n                              <Grid container item xs={7} className={classes.pokeEvoExceptionCard}>\r\n                                <Grid container item xs={9} justify=\"center\" key={22} className={classes.pokeEvoExceptionInsideCard} onClick={() => pokeSelectorHandler(pokeEvolutionChain[3].species_name)}>\r\n                                    <Card className={classes.card}>\r\n                                        <CardActionArea className={classes.pokemonButton}>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            alt={pokeEvolutionChain[3].species_name}\r\n                                            height=\"140\"\r\n                                            image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[3].id}.png`}\r\n                                            title={pokeEvolutionChain[3].species_name}\r\n                                            className={classes.pokemonImg}\r\n                                        />\r\n                                        <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                                            <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                            {pokeEvolutionChain[3].species_name}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                        </CardActionArea>\r\n                                    </Card>\r\n                                </Grid>\r\n                              </Grid>\r\n                          </Grid>\r\n                      ) :\r\n                      (\r\n                          index !== 2 ? (\r\n                        <React.Fragment>\r\n                        <Grid container item xs={2} justify=\"center\" key={evolution.id} className={classes.pokeEvoCard} onClick={() => pokeSelectorHandler(evolution.species_name)}>\r\n                          <Card className={classes.card}>\r\n                            <CardActionArea className={classes.pokemonButton}>\r\n                              <CardMedia\r\n                                component=\"img\"\r\n                                alt={evolution.species_name}\r\n                                height=\"140\"\r\n                                image={`https://pokeres.bastionbot.org/images/pokemon/${evolution.id}.png`}\r\n                                title={evolution.species_name}\r\n                                className={classes.pokemonImg}\r\n                              />\r\n                              <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                                <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                  {evolution.species_name}\r\n                                </Typography>\r\n                              </CardContent>\r\n                            </CardActionArea>\r\n                          </Card>\r\n                        </Grid>\r\n                        {\r\n                          (evolutionsNumber - 1 ) ? (index < 1) ? \r\n                          (<div style={{ textAlign: 'center'}}><Arrow style={{marginTop: '5rem'}} className={classes.arrowRotate} /> <Typography>{pokeEvolutionChain[index + 1].evolution_details.trigger.name} \r\n                          {(pokeEvolutionChain[index + 1].evolution_details.gender === 1) ? ` female` : (pokeEvolutionChain[index + 1].evolution_details.gender === 2) ? ` male` : null}\r\n                          {pokeEvolutionChain[index + 1].evolution_details.item ? `  ${pokeEvolutionChain[index + 1].evolution_details.item.name}` : null}\r\n                          {pokeEvolutionChain[index + 1].evolution_details.held_item ? ` while holding ${pokeEvolutionChain[index + 1].evolution_details.held_item.name}` : null}\r\n                          {(pokeEvolutionChain[index + 1].evolution_details.known_move) ? ` while knowing ${pokeEvolutionChain[index + 1].evolution_details.known_move.name}` : null}\r\n                          {(pokeEvolutionChain[index + 1].evolution_details.known_move_type) ? ` while knowing a ${pokeEvolutionChain[index + 1].evolution_details.known_move_type.name} type move` : null}\r\n                          {pokeEvolutionChain[index + 1].evolution_details.location ? ` at ${pokeEvolutionChain[index + 1].evolution_details.location.name}` : null}\r\n                          {pokeEvolutionChain[index + 1].evolution_details.min_affection ? ` when affection is atleast ${pokeEvolutionChain[index + 1].evolution_details.min_affection}` : null}\r\n                          {pokeEvolutionChain[index + 1].evolution_details.min_beauty ? ` when beauty is atleast ${pokeEvolutionChain[index + 1].evolution_details.min_beauty}` : null}\r\n                          {pokeEvolutionChain[index + 1].evolution_details.min_happiness ? ` when happiness is atleast ${pokeEvolutionChain[index + 1].evolution_details.min_happiness}` : null}\r\n                          {pokeEvolutionChain[index + 1].evolution_details.min_level ? ` at level ${pokeEvolutionChain[index + 1].evolution_details.min_level}` : null}\r\n                          {pokeEvolutionChain[index + 1].evolution_details.needs_overworld_rain ? ` when raining` : null}\r\n                          {pokeEvolutionChain[index + 1].evolution_details.party_species ? ` with ${pokeEvolutionChain[index + 1].evolution_details.party_species.name} in party` : null}\r\n                          {pokeEvolutionChain[index + 1].evolution_details.party_type ? ` with ${pokeEvolutionChain[index + 1].evolution_details.party_type.name} type pokemon in party` : null}\r\n                          {pokeEvolutionChain[index + 1].evolution_details.time_of_day ? ` at ${pokeEvolutionChain[index + 1].evolution_details.time_of_day} ` : null}\r\n                          {pokeEvolutionChain[index + 1].evolution_details.trade_species ? ` with ${pokeEvolutionChain[index + 1].evolution_details.trade_species.name} ` : null}\r\n                          </Typography></div>)\r\n                          : null : null \r\n                        }\r\n                        </React.Fragment>) : null\r\n                      )\r\n                  }\r\n              </React.Fragment>\r\n          );\r\n        })\r\n      }\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default PokeEvolutionExceptionType1;\r\n","import React from 'react';\r\nimport { Grid, Typography, Chip, Divider, Avatar } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Arrow from '@material-ui/icons/ArrowRightAlt';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card:{\r\n    textAlign: 'center',\r\n    margin: '1rem'\r\n  },\r\n  text:{\r\n    textTransform: 'capitalize'\r\n  },\r\n  pokemonImg:{\r\n    objectFit: 'contain'\r\n  },\r\n  pokemonButton:{\r\n    padding: '2rem'\r\n  },\r\n  pokeGrid:{\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('sm')]: {\r\n      flexDirection: 'column',\r\n      alignItems: 'normal'\r\n  },\r\n  },\r\n  pokeEvoCard:{\r\n    [theme.breakpoints.down('sm')]: {\r\n      maxWidth: '24%',\r\n      alignSelf: 'center'\r\n  },\r\n  '@media  (max-width: 750px)': {\r\n    maxWidth: '30%'\r\n  },\r\n  '@media  (max-width: 600px)': {\r\n    maxWidth: '50%'\r\n  },\r\n  },\r\n  arrow:{\r\n    marginTop: '13rem',\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginTop: '5rem',\r\n      transform: 'rotateZ(90deg)'\r\n    },\r\n  },\r\n  arrowRotate:{\r\n    [theme.breakpoints.down('sm')]: {\r\n      transform: 'rotateZ(90deg)'\r\n    },\r\n  },\r\n  pokeException:{\r\n    [theme.breakpoints.down('sm')]: {\r\n      flexDirection: 'column',\r\n      maxWidth: '50%',\r\n      alignSelf: 'center'\r\n  },\r\n  '@media  (max-width: 750px)': {\r\n    maxWidth: '73%'\r\n  },\r\n  '@media  (max-width: 450px)': {\r\n    maxWidth: '75%'\r\n  },\r\n  },\r\n  pokeEvoExceptionCard:{\r\n    [theme.breakpoints.down('sm')]: {\r\n      flexBasis: 'auto',\r\n      marginTop: '-8rem'\r\n  },\r\n  },\r\n  pokeEvoExceptionInsideCard:{\r\n    '@media  (max-width: 450px)': {\r\n      maxWidth: '100%'\r\n    },\r\n  }\r\n}));\r\n\r\n\r\n\r\n// evolutionChainExceptions2 = [\r\n//   'slowpoke',\r\n//   'nincada',\r\n//   'snorunt',\r\n//   'clamperl',\r\n//   'burmy'];\r\n\r\n\r\n\r\n\r\nconst PokeEvolutionExceptionType1 = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const pokeSelectorHandler = (search) => {\r\n    props.history.push({pathname: '/pokemon/' + search});\r\n  }  \r\n\r\n  // let evos = pokeEvolHandler(json);\r\n  // console.log(evos);\r\n  const pokeEvolutionChain = [...props.pokeEvolutionChain]; //cause initially props.pokeEvolutionChain is undefined and map wont work therefore assigning an array so for initial state array is empty and map works\r\n  const evolutionsNumber = pokeEvolutionChain.length;\r\n  return(\r\n    <Grid container item xs={12} lg={9} justify=\"center\"  className={classes.pokeGrid}>\r\n      {\r\n        pokeEvolutionChain.map((evolution, index) => {\r\n          return(\r\n              <React.Fragment>\r\n                  {\r\n                      index === 2 ? (\r\n                          <Grid container xs={5} className={classes.pokeException} >\r\n                              <Grid container item xs={5} md={3} justify=\"center\">\r\n                            {\r\n                            (<div style={{ textAlign: 'center'}} key={11}><Arrow className={classes.arrow} /> <Typography>{pokeEvolutionChain[1].evolution_details.trigger.name} \r\n                            {pokeEvolutionChain[1].evolution_details.item ? `  ${pokeEvolutionChain[1].evolution_details.item.name}` : null}\r\n                            {pokeEvolutionChain[1].evolution_details.held_item ? ` while holding ${pokeEvolutionChain[1].evolution_details.held_item.name}` : null}\r\n                            {(pokeEvolutionChain[1].evolution_details.known_move) ? ` while knowing ${pokeEvolutionChain[1].evolution_details.known_move.name}` : null}\r\n                            {(pokeEvolutionChain[1].evolution_details.known_move_type) ? ` while knowing a ${pokeEvolutionChain[1].evolution_details.known_move_type.name} type move` : null}\r\n                            {pokeEvolutionChain[1].evolution_details.location ? ` at ${pokeEvolutionChain[1].evolution_details.location.name}` : null}\r\n                            {pokeEvolutionChain[1].evolution_details.min_affection ? ` when affection is atleast ${pokeEvolutionChain[1].evolution_details.min_affection}` : null}\r\n                            {pokeEvolutionChain[1].evolution_details.min_beauty ? ` when beauty is atleast ${pokeEvolutionChain[1].evolution_details.min_beauty}` : null}\r\n                            {pokeEvolutionChain[1].evolution_details.min_happiness ? ` when happiness is atleast ${pokeEvolutionChain[1].evolution_details.min_happiness}` : null}\r\n                            {pokeEvolutionChain[1].evolution_details.min_level ? ` at level ${pokeEvolutionChain[1].evolution_details.min_level}` : null}\r\n                            {pokeEvolutionChain[1].evolution_details.needs_overworld_rain ? ` when raining` : null}\r\n                            {pokeEvolutionChain[1].evolution_details.party_species ? ` with ${pokeEvolutionChain[1].evolution_details.party_species.name} in party` : null}\r\n                            {pokeEvolutionChain[1].evolution_details.party_type ? ` with ${pokeEvolutionChain[1].evolution_details.party_type.name} type pokemon in party` : null}\r\n                            {pokeEvolutionChain[1].evolution_details.time_of_day ? ` at ${pokeEvolutionChain[1].evolution_details.time_of_day} ` : null}\r\n                            {pokeEvolutionChain[1].evolution_details.trade_species ? ` with ${pokeEvolutionChain[1].evolution_details.trade_species.name} ` : null}\r\n                            {(pokeEvolutionChain[1].evolution_details.gender === 1) ? ` if female` : (pokeEvolutionChain[1].evolution_details.gender === 1) ? ` if male` : null}\r\n                                </Typography></div>)\r\n                            }\r\n                              </Grid>\r\n                              <Grid container item xs={7} className={classes.pokeEvoExceptionCard}>\r\n                                <Grid container item xs={9} justify=\"center\" key={12} className={classes.pokeEvoExceptionInsideCard} onClick={() => pokeSelectorHandler(pokeEvolutionChain[1].species_name)}>\r\n                                    <Card className={classes.card}>\r\n                                        <CardActionArea className={classes.pokemonButton}>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            alt={pokeEvolutionChain[1].species_name}\r\n                                            height=\"140\"\r\n                                            image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[1].id}.png`}\r\n                                            title={pokeEvolutionChain[1].species_name}\r\n                                            className={classes.pokemonImg}\r\n                                        />\r\n                                        <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                                            <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                            {pokeEvolutionChain[1].species_name}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                        </CardActionArea>\r\n                                    </Card>\r\n                                </Grid>\r\n                              </Grid>\r\n                              <Grid container item xs={5} md={3} justify=\"center\">\r\n                              {\r\n                                (<div style={{ textAlign: 'center'}} key={21}><Arrow style={{marginTop: '5rem'}} className={classes.arrowRotate} /> <Typography>{pokeEvolutionChain[2].evolution_details.trigger.name} \r\n                                {(pokeEvolutionChain[2].evolution_details.gender === 1) ? ` female` : (pokeEvolutionChain[2].evolution_details.gender === 2) ? ` male` : null}\r\n                                {pokeEvolutionChain[2].evolution_details.item ? `  ${pokeEvolutionChain[2].evolution_details.item.name}` : null}\r\n                                {pokeEvolutionChain[2].evolution_details.held_item ? ` while holding ${pokeEvolutionChain[2].evolution_details.held_item.name}` : null}\r\n                                {(pokeEvolutionChain[2].evolution_details.known_move) ? ` while knowing ${pokeEvolutionChain[2].evolution_details.known_move.name}` : null}\r\n                                {(pokeEvolutionChain[2].evolution_details.known_move_type) ? ` while knowing a ${pokeEvolutionChain[2].evolution_details.known_move_type.name} type move` : null}\r\n                                {pokeEvolutionChain[2].evolution_details.location ? ` at ${pokeEvolutionChain[2].evolution_details.location.name}` : null}\r\n                                {pokeEvolutionChain[2].evolution_details.min_affection ? ` when affection is atleast ${pokeEvolutionChain[2].evolution_details.min_affection}` : null}\r\n                                {pokeEvolutionChain[2].evolution_details.min_beauty ? ` when beauty is atleast ${pokeEvolutionChain[2].evolution_details.min_beauty}` : null}\r\n                                {pokeEvolutionChain[2].evolution_details.min_happiness ? ` when happiness is atleast ${pokeEvolutionChain[2].evolution_details.min_happiness}` : null}\r\n                                {pokeEvolutionChain[2].evolution_details.min_level ? ` at level ${pokeEvolutionChain[2].evolution_details.min_level}` : null}\r\n                                {pokeEvolutionChain[2].evolution_details.needs_overworld_rain ? ` when raining` : null}\r\n                                {pokeEvolutionChain[2].evolution_details.party_species ? ` with ${pokeEvolutionChain[2].evolution_details.party_species.name} in party` : null}\r\n                                {pokeEvolutionChain[2].evolution_details.party_type ? ` with ${pokeEvolutionChain[2].evolution_details.party_type.name} type pokemon in party` : null}\r\n                                {pokeEvolutionChain[2].evolution_details.time_of_day ? ` at ${pokeEvolutionChain[2].evolution_details.time_of_day} ` : null}\r\n                                {pokeEvolutionChain[2].evolution_details.trade_species ? ` with ${pokeEvolutionChain[2].evolution_details.trade_species.name} ` : null}\r\n                                </Typography></div>)\r\n                            }\r\n                              </Grid>\r\n                              <Grid container item xs={7} className={classes.pokeEvoExceptionCard}>\r\n                                <Grid container item xs={9} justify=\"center\" key={22} className={classes.pokeEvoExceptionInsideCard} onClick={() => pokeSelectorHandler(pokeEvolutionChain[2].species_name)}>\r\n                                    <Card className={classes.card}>\r\n                                        <CardActionArea className={classes.pokemonButton}>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            alt={pokeEvolutionChain[2].species_name}\r\n                                            height=\"140\"\r\n                                            image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[2].id}.png`}\r\n                                            title={pokeEvolutionChain[2].species_name}\r\n                                            className={classes.pokemonImg}\r\n                                        />\r\n                                        <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                                            <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                            {pokeEvolutionChain[2].species_name}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                        </CardActionArea>\r\n                                    </Card>\r\n                                </Grid>\r\n                              </Grid>\r\n                          </Grid>\r\n                      ) :\r\n                      (\r\n                          index !== 1 ? (\r\n                        <React.Fragment>\r\n                        <Grid container item xs={2} justify=\"center\" key={evolution.id} className={classes.pokeEvoCard} onClick={() => pokeSelectorHandler(evolution.species_name)}>\r\n                          <Card className={classes.card}>\r\n                            <CardActionArea className={classes.pokemonButton}>\r\n                              <CardMedia\r\n                                component=\"img\"\r\n                                alt={evolution.species_name}\r\n                                height=\"140\"\r\n                                image={`https://pokeres.bastionbot.org/images/pokemon/${evolution.id}.png`}\r\n                                title={evolution.species_name}\r\n                                className={classes.pokemonImg}\r\n                              />\r\n                              <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                                <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                  {evolution.species_name}\r\n                                </Typography>\r\n                              </CardContent>\r\n                            </CardActionArea>\r\n                          </Card>\r\n                        </Grid>\r\n                        </React.Fragment>) : null\r\n                      )\r\n                  }\r\n              </React.Fragment>\r\n          );\r\n        })\r\n      }\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default PokeEvolutionExceptionType1;\r\n","import React from 'react';\r\nimport { Grid, Typography, Chip, Divider, Avatar, Hidden } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Arrow from '@material-ui/icons/ArrowRightAlt';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card:{\r\n    textAlign: 'center',\r\n    margin: '1rem'\r\n  },\r\n  text:{\r\n    textTransform: 'capitalize'\r\n  },\r\n  pokemonImg:{\r\n    objectFit: 'contain'\r\n  },\r\n  pokemonButton:{\r\n    padding: '2rem'\r\n  },\r\n  pokeGrid:{\r\n    alignItems: 'center',\r\n  },\r\n  pokeEvoCard:{\r\n    [theme.breakpoints.down('sm')]: {\r\n      maxWidth: '24%',\r\n      alignSelf: 'center'\r\n  },\r\n  '@media  (max-width: 750px)': {\r\n    maxWidth: '30%'\r\n  },\r\n  '@media  (max-width: 600px)': {\r\n    maxWidth: '50%'\r\n  },\r\n  },\r\n  arrow:{\r\n    marginTop: '13rem',\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginTop: '5rem',\r\n      transform: 'rotateZ(90deg)'\r\n    },\r\n  },\r\n  arrowRotate:{\r\n    [theme.breakpoints.down('sm')]: {\r\n      transform: 'rotateZ(90deg)'\r\n    },\r\n  },\r\n  pokeException:{\r\n    [theme.breakpoints.down('sm')]: {\r\n      flexDirection: 'column',\r\n      maxWidth: '50%',\r\n      alignSelf: 'center'\r\n  },\r\n  '@media  (max-width: 750px)': {\r\n    maxWidth: '73%'\r\n  },\r\n  '@media  (max-width: 450px)': {\r\n    maxWidth: '75%'\r\n  },\r\n  },\r\n  pokeEvoExceptionCard:{\r\n    [theme.breakpoints.down('sm')]: {\r\n      flexBasis: 'auto',\r\n      marginTop: '-8rem'\r\n  },\r\n  },\r\n  pokeEvoExceptionInsideCard:{\r\n    '@media  (max-width: 450px)': {\r\n      maxWidth: '100%'\r\n    },\r\n  }\r\n}));\r\n\r\n\r\n\r\n// evolutionChainExceptions3 = [\r\n//   'wurmple',\r\n// ];\r\n\r\n\r\n\r\n\r\n\r\nconst PokeEvolutionExceptionType1 = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const pokeSelectorHandler = (search) => {\r\n    props.history.push({pathname: '/pokemon/' + search});\r\n  }\r\n  const dustox = {\r\n    species_name: 'dustox',\r\n    id: '269',\r\n    evolution_details:\r\n        {\r\n          gender: null,\r\n          held_item: null,\r\n          item: null,\r\n          known_move: null,\r\n          known_move_type: null,\r\n          location: null,\r\n          min_affection: null,\r\n          min_beauty: null,\r\n          min_happiness: null,\r\n          min_level: 10,\r\n          needs_overworld_rain: false,\r\n          party_species: null,\r\n          party_type: null,\r\n          relative_physical_stats: null,\r\n          time_of_day: '',\r\n          trade_species: null,\r\n          trigger: {\r\n            name: 'level-up',\r\n            url: 'https://pokeapi.co/api/v2/evolution-trigger/1/'\r\n          },\r\n          turn_upside_down: false\r\n        }\r\n    }\r\n\r\n  let pokeEvolutionChain = [...props.pokeEvolutionChain]; //cause initially props.pokeEvolutionChain is undefined and map wont work therefore assigning an array so for initial state array is empty and map works\r\n  if(pokeEvolutionChain.length !== 0 ){\r\n      pokeEvolutionChain.push(dustox);\r\n  }\r\n  const evolutionsNumber = pokeEvolutionChain.length;\r\n  return(\r\n    <React.Fragment>\r\n    <Hidden smDown>\r\n    <Grid container item  xs={12} lg={9} justify=\"center\" className={classes.pokeGrid}>\r\n      {\r\n        pokeEvolutionChain.map((evolution, index) => {\r\n          return(\r\n              <React.Fragment>\r\n                  {\r\n                      index === 4 ? (\r\n                        <React.Fragment>\r\n                          <Grid container xs={3}>\r\n                              <Grid container item xs={3} justify=\"center\">\r\n                              {\r\n                              (<div style={{ textAlign: 'center'}} key={11}><Arrow style={{marginTop: '13rem'}} /> <Typography>{pokeEvolutionChain[1].evolution_details.trigger.name} \r\n                              {(pokeEvolutionChain[1].evolution_details.gender === 1) ? ` female` : (pokeEvolutionChain[1].evolution_details.gender === 2) ? ` male` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.item ? `  ${pokeEvolutionChain[1].evolution_details.item.name}` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.held_item ? ` while holding ${pokeEvolutionChain[1].evolution_details.held_item.name}` : null}\r\n                              {(pokeEvolutionChain[1].evolution_details.known_move) ? ` while knowing ${pokeEvolutionChain[1].evolution_details.known_move.name}` : null}\r\n                              {(pokeEvolutionChain[1].evolution_details.known_move_type) ? ` while knowing a ${pokeEvolutionChain[1].evolution_details.known_move_type.name} type move` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.location ? ` at ${pokeEvolutionChain[1].evolution_details.location.name}` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.min_affection ? ` when affection is atleast ${pokeEvolutionChain[1].evolution_details.min_affection}` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.min_beauty ? ` when beauty is atleast ${pokeEvolutionChain[1].evolution_details.min_beauty}` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.min_happiness ? ` when happiness is atleast ${pokeEvolutionChain[1].evolution_details.min_happiness}` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.min_level ? ` at level ${pokeEvolutionChain[1].evolution_details.min_level}` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.needs_overworld_rain ? ` when raining` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.party_species ? ` with ${pokeEvolutionChain[1].evolution_details.party_species.name} in party` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.party_type ? ` with ${pokeEvolutionChain[1].evolution_details.party_type.name} type pokemon in party` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.time_of_day ? ` at ${pokeEvolutionChain[1].evolution_details.time_of_day} ` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.trade_species ? ` with ${pokeEvolutionChain[1].evolution_details.trade_species.name} ` : null}\r\n                                </Typography></div>)\r\n                            }\r\n                              </Grid>\r\n                              <Grid container item xs={9} justify=\"center\">\r\n                                <Grid container item xs={9} justify=\"center\" key={12} onClick={() => pokeSelectorHandler(pokeEvolutionChain[1].species_name)}>\r\n                                    <Card className={classes.card}>\r\n                                        <CardActionArea className={classes.pokemonButton}>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            alt={pokeEvolutionChain[1].species_name}\r\n                                            height=\"140\"\r\n                                            image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[1].id}.png`}\r\n                                            title={pokeEvolutionChain[1].species_name}\r\n                                            className={classes.pokemonImg}\r\n                                        />\r\n                                        <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                                            <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                            {pokeEvolutionChain[1].species_name}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                        </CardActionArea>\r\n                                    </Card>\r\n                                </Grid>\r\n                              </Grid>\r\n                              <Grid container item xs={3} justify=\"center\">\r\n                              {\r\n                              (<div style={{ textAlign: 'center'}} key={21}><Arrow style={{marginTop: '5rem'}} /> <Typography>{pokeEvolutionChain[2].evolution_details.trigger.name} \r\n                              {(pokeEvolutionChain[2].evolution_details.gender === 1) ? ` female` : (pokeEvolutionChain[2].evolution_details.gender === 3) ? ` male` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.item ? ` ${pokeEvolutionChain[2].evolution_details.item.name}` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.held_item ? ` while holding ${pokeEvolutionChain[2].evolution_details.held_item.name}` : null}\r\n                              {(pokeEvolutionChain[2].evolution_details.known_move) ? ` while knowing ${pokeEvolutionChain[2].evolution_details.known_move.name}` : null}\r\n                              {(pokeEvolutionChain[2].evolution_details.known_move_type) ? ` while knowing a ${pokeEvolutionChain[2].evolution_details.known_move_type.name} type move` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.location ? ` at ${pokeEvolutionChain[2].evolution_details.location.name}` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.min_affection ? ` when affection is atleast ${pokeEvolutionChain[2].evolution_details.min_affection}` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.min_beauty ? ` when beauty is atleast ${pokeEvolutionChain[2].evolution_details.min_beauty}` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.min_happiness ? ` when happiness is atleast ${pokeEvolutionChain[2].evolution_details.min_happiness}` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.min_level ? ` at level ${pokeEvolutionChain[2].evolution_details.min_level}` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.needs_overworld_rain ? ` when raining` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.party_species ? ` with ${pokeEvolutionChain[2].evolution_details.party_species.name} in party` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.party_type ? ` with ${pokeEvolutionChain[2].evolution_details.party_type.name} type pokemon in party` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.time_of_day ? ` at ${pokeEvolutionChain[2].evolution_details.time_of_day} ` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.trade_species ? ` with ${pokeEvolutionChain[2].evolution_details.trade_species.name} ` : null}\r\n                                </Typography></div>)\r\n                            }\r\n                              </Grid>\r\n                              <Grid container item xs={9} justify=\"center\">\r\n                                <Grid container item xs={9} justify=\"center\" key={22} onClick={() => pokeSelectorHandler(pokeEvolutionChain[2].species_name)}>\r\n                                    <Card className={classes.card}>\r\n                                        <CardActionArea className={classes.pokemonButton}>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            alt={pokeEvolutionChain[2].species_name}\r\n                                            height=\"140\"\r\n                                            image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[2].id}.png`}\r\n                                            title={pokeEvolutionChain[2].species_name}\r\n                                            className={classes.pokemonImg}\r\n                                        />\r\n                                        <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                                            <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                            {pokeEvolutionChain[2].species_name}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                        </CardActionArea>\r\n                                    </Card>\r\n                                </Grid>\r\n                              </Grid>\r\n                          </Grid>\r\n                          <Grid container xs={3}>\r\n                              <Grid container item xs={3} justify=\"center\">\r\n                              {\r\n                              (<div style={{ textAlign: 'center'}} key={31}><Arrow style={{marginTop: '13rem'}} /> <Typography>{pokeEvolutionChain[3].evolution_details.trigger.name} \r\n                              {(pokeEvolutionChain[3].evolution_details.gender === 1) ? ` female` : (pokeEvolutionChain[3].evolution_details.gender === 2) ? ` male` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.item ? `  ${pokeEvolutionChain[3].evolution_details.item.name}` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.held_item ? ` while holding ${pokeEvolutionChain[3].evolution_details.held_item.name}` : null}\r\n                              {(pokeEvolutionChain[3].evolution_details.known_move) ? ` while knowing ${pokeEvolutionChain[3].evolution_details.known_move.name}` : null}\r\n                              {(pokeEvolutionChain[3].evolution_details.known_move_type) ? ` while knowing a ${pokeEvolutionChain[3].evolution_details.known_move_type.name} type move` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.location ? ` at ${pokeEvolutionChain[3].evolution_details.location.name}` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.min_affection ? ` when affection is atleast ${pokeEvolutionChain[3].evolution_details.min_affection}` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.min_beauty ? ` when beauty is atleast ${pokeEvolutionChain[3].evolution_details.min_beauty}` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.min_happiness ? ` when happiness is atleast ${pokeEvolutionChain[3].evolution_details.min_happiness}` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.min_level ? ` at level ${pokeEvolutionChain[3].evolution_details.min_level}` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.needs_overworld_rain ? ` when raining` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.party_species ? ` with ${pokeEvolutionChain[3].evolution_details.party_species.name} in party` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.party_type ? ` with ${pokeEvolutionChain[3].evolution_details.party_type.name} type pokemon in party` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.time_of_day ? ` at ${pokeEvolutionChain[3].evolution_details.time_of_day} ` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.trade_species ? ` with ${pokeEvolutionChain[3].evolution_details.trade_species.name} ` : null}\r\n                                </Typography></div>)\r\n                            }\r\n                              </Grid>\r\n                              <Grid container item xs={9} justify=\"center\">\r\n                                <Grid container item xs={9} justify=\"center\" key={32} onClick={() => pokeSelectorHandler(pokeEvolutionChain[3].species_name)}>\r\n                                    <Card className={classes.card}>\r\n                                        <CardActionArea className={classes.pokemonButton}>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            alt={pokeEvolutionChain[3].species_name}\r\n                                            height=\"140\"\r\n                                            image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[3].id}.png`}\r\n                                            title={pokeEvolutionChain[3].species_name}\r\n                                            className={classes.pokemonImg}\r\n                                        />\r\n                                        <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                                            <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                            {pokeEvolutionChain[3].species_name}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                        </CardActionArea>\r\n                                    </Card>\r\n                                </Grid>\r\n                              </Grid>\r\n                              <Grid container item xs={3} justify=\"center\">\r\n                              {\r\n                              (<div style={{ textAlign: 'center'}} key={41}><Arrow style={{marginTop: '5rem'}} /> <Typography>{pokeEvolutionChain[4].evolution_details.trigger.name} \r\n                              {(pokeEvolutionChain[4].evolution_details.gender === 1) ? ` female` : (pokeEvolutionChain[4].evolution_details.gender === 3) ? ` male` : null}\r\n                              {pokeEvolutionChain[4].evolution_details.item ? ` ${pokeEvolutionChain[4].evolution_details.item.name}` : null}\r\n                              {pokeEvolutionChain[4].evolution_details.held_item ? ` while holding ${pokeEvolutionChain[4].evolution_details.held_item.name}` : null}\r\n                              {(pokeEvolutionChain[4].evolution_details.known_move) ? ` while knowing ${pokeEvolutionChain[4].evolution_details.known_move.name}` : null}\r\n                              {(pokeEvolutionChain[4].evolution_details.known_move_type) ? ` while knowing a ${pokeEvolutionChain[4].evolution_details.known_move_type.name} type move` : null}\r\n                              {pokeEvolutionChain[4].evolution_details.location ? ` at ${pokeEvolutionChain[4].evolution_details.location.name}` : null}\r\n                              {pokeEvolutionChain[4].evolution_details.min_affection ? ` when affection is atleast ${pokeEvolutionChain[4].evolution_details.min_affection}` : null}\r\n                              {pokeEvolutionChain[4].evolution_details.min_beauty ? ` when beauty is atleast ${pokeEvolutionChain[4].evolution_details.min_beauty}` : null}\r\n                              {pokeEvolutionChain[4].evolution_details.min_happiness ? ` when happiness is atleast ${pokeEvolutionChain[4].evolution_details.min_happiness}` : null}\r\n                              {pokeEvolutionChain[4].evolution_details.min_level ? ` at level ${pokeEvolutionChain[4].evolution_details.min_level}` : null}\r\n                              {pokeEvolutionChain[4].evolution_details.needs_overworld_rain ? ` when raining` : null}\r\n                              {pokeEvolutionChain[4].evolution_details.party_species ? ` with ${pokeEvolutionChain[4].evolution_details.party_species.name} in party` : null}\r\n                              {pokeEvolutionChain[4].evolution_details.party_type ? ` with ${pokeEvolutionChain[4].evolution_details.party_type.name} type pokemon in party` : null}\r\n                              {pokeEvolutionChain[4].evolution_details.time_of_day ? ` at ${pokeEvolutionChain[4].evolution_details.time_of_day} ` : null}\r\n                              {pokeEvolutionChain[4].evolution_details.trade_species ? ` with ${pokeEvolutionChain[4].evolution_details.trade_species.name} ` : null}\r\n                                </Typography></div>)\r\n                            }\r\n                              </Grid>\r\n                              <Grid container item xs={9} justify=\"center\">\r\n                                <Grid container item xs={9} justify=\"center\" key={42} onClick={() => pokeSelectorHandler(pokeEvolutionChain[4].species_name)}>\r\n                                    <Card className={classes.card}>\r\n                                        <CardActionArea className={classes.pokemonButton}>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            alt={pokeEvolutionChain[4].species_name}\r\n                                            height=\"140\"\r\n                                            image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[4].id}.png`}\r\n                                            title={pokeEvolutionChain[4].species_name}\r\n                                            className={classes.pokemonImg}\r\n                                        />\r\n                                        <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                                            <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                            {pokeEvolutionChain[4].species_name}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                        </CardActionArea>\r\n                                    </Card>\r\n                                </Grid>\r\n                              </Grid>\r\n                          </Grid>\r\n                          </React.Fragment>\r\n                      ) :\r\n                      (\r\n                          index === 0  ? (\r\n                        <React.Fragment>\r\n                        <Grid container item xs={2} justify=\"center\" key={evolution.id} onClick={() => pokeSelectorHandler(evolution.species_name)}>\r\n                          <Card className={classes.card}>\r\n                            <CardActionArea className={classes.pokemonButton}>\r\n                              <CardMedia\r\n                                component=\"img\"\r\n                                alt={evolution.species_name}\r\n                                height=\"140\"\r\n                                image={`https://pokeres.bastionbot.org/images/pokemon/${evolution.id}.png`}\r\n                                title={evolution.species_name}\r\n                                className={classes.pokemonImg}\r\n                              />\r\n                              <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                                <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                  {evolution.species_name}\r\n                                </Typography>\r\n                              </CardContent>\r\n                            </CardActionArea>\r\n                          </Card>\r\n                        </Grid>\r\n                        </React.Fragment>) : null\r\n                      )\r\n                  }\r\n              </React.Fragment>\r\n          );\r\n        })\r\n      }\r\n    </Grid>\r\n    </Hidden>\r\n    <Hidden mdUp> {/*Mobile layout*/}\r\n      <Grid container item  xs={12} justify=\"center\" >\r\n      {\r\n        pokeEvolutionChain.map((evolution, index) => {\r\n          return(\r\n              <React.Fragment>\r\n                  {\r\n                      index === 4 ? (\r\n                        <Grid container item xs={12} flexDirection='column'> {/* Starting of mobile layout */}\r\n                          <Grid container item xs={12} justify=\"center\">\r\n                            {/* First poke */}\r\n                              <Grid container item xs={6} justify=\"center\" key={\"mb11\"} onClick={() => pokeSelectorHandler(pokeEvolutionChain[0].species_name)}>\r\n                                    <Card className={classes.card}>\r\n                                        <CardActionArea className={classes.pokemonButton}>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            alt={pokeEvolutionChain[0].species_name}\r\n                                            height=\"140\"\r\n                                            image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[0].id}.png`}\r\n                                            title={pokeEvolutionChain[0].species_name}\r\n                                            className={classes.pokemonImg}\r\n                                        />\r\n                                        <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                                            <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                            {pokeEvolutionChain[0].species_name}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                        </CardActionArea>\r\n                                    </Card>\r\n                                </Grid>\r\n                          </Grid>\r\n                          <Grid container item xs={6} justify=\"center\">\r\n                            {/* First arrow  */}\r\n                              {\r\n                              (<div style={{ textAlign: 'center'}} key={11}><Arrow className={classes.arrowRotate} /> <Typography>{pokeEvolutionChain[1].evolution_details.trigger.name} \r\n                              {(pokeEvolutionChain[1].evolution_details.gender === 1) ? ` female` : (pokeEvolutionChain[1].evolution_details.gender === 2) ? ` male` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.item ? `  ${pokeEvolutionChain[1].evolution_details.item.name}` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.held_item ? ` while holding ${pokeEvolutionChain[1].evolution_details.held_item.name}` : null}\r\n                              {(pokeEvolutionChain[1].evolution_details.known_move) ? ` while knowing ${pokeEvolutionChain[1].evolution_details.known_move.name}` : null}\r\n                              {(pokeEvolutionChain[1].evolution_details.known_move_type) ? ` while knowing a ${pokeEvolutionChain[1].evolution_details.known_move_type.name} type move` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.location ? ` at ${pokeEvolutionChain[1].evolution_details.location.name}` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.min_affection ? ` when affection is atleast ${pokeEvolutionChain[1].evolution_details.min_affection}` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.min_beauty ? ` when beauty is atleast ${pokeEvolutionChain[1].evolution_details.min_beauty}` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.min_happiness ? ` when happiness is atleast ${pokeEvolutionChain[1].evolution_details.min_happiness}` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.min_level ? ` at level ${pokeEvolutionChain[1].evolution_details.min_level}` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.needs_overworld_rain ? ` when raining` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.party_species ? ` with ${pokeEvolutionChain[1].evolution_details.party_species.name} in party` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.party_type ? ` with ${pokeEvolutionChain[1].evolution_details.party_type.name} type pokemon in party` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.time_of_day ? ` at ${pokeEvolutionChain[1].evolution_details.time_of_day} ` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.trade_species ? ` with ${pokeEvolutionChain[1].evolution_details.trade_species.name} ` : null}\r\n                                </Typography></div>)\r\n                            }\r\n                          </Grid>\r\n                          <Grid container item xs={6} justify=\"center\">\r\n                            {/* Second Arrow */}\r\n                            {\r\n                              (<div style={{ textAlign: 'center'}} key={21}><Arrow className={classes.arrowRotate} /> <Typography>{pokeEvolutionChain[2].evolution_details.trigger.name} \r\n                              {(pokeEvolutionChain[2].evolution_details.gender === 1) ? ` female` : (pokeEvolutionChain[2].evolution_details.gender === 3) ? ` male` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.item ? ` ${pokeEvolutionChain[2].evolution_details.item.name}` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.held_item ? ` while holding ${pokeEvolutionChain[2].evolution_details.held_item.name}` : null}\r\n                              {(pokeEvolutionChain[2].evolution_details.known_move) ? ` while knowing ${pokeEvolutionChain[2].evolution_details.known_move.name}` : null}\r\n                              {(pokeEvolutionChain[2].evolution_details.known_move_type) ? ` while knowing a ${pokeEvolutionChain[2].evolution_details.known_move_type.name} type move` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.location ? ` at ${pokeEvolutionChain[2].evolution_details.location.name}` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.min_affection ? ` when affection is atleast ${pokeEvolutionChain[2].evolution_details.min_affection}` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.min_beauty ? ` when beauty is atleast ${pokeEvolutionChain[2].evolution_details.min_beauty}` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.min_happiness ? ` when happiness is atleast ${pokeEvolutionChain[2].evolution_details.min_happiness}` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.min_level ? ` at level ${pokeEvolutionChain[2].evolution_details.min_level}` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.needs_overworld_rain ? ` when raining` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.party_species ? ` with ${pokeEvolutionChain[2].evolution_details.party_species.name} in party` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.party_type ? ` with ${pokeEvolutionChain[2].evolution_details.party_type.name} type pokemon in party` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.time_of_day ? ` at ${pokeEvolutionChain[2].evolution_details.time_of_day} ` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.trade_species ? ` with ${pokeEvolutionChain[2].evolution_details.trade_species.name} ` : null}\r\n                                </Typography></div>)\r\n                            }\r\n                          </Grid>\r\n                          <Grid container item xs={6} justify=\"center\">\r\n                            {/* First evo */}\r\n                            <Grid container item xs={10} sm={6}  justify=\"center\" key={\"mb11\"} onClick={() => pokeSelectorHandler(pokeEvolutionChain[1].species_name)}>\r\n                                    <Card className={classes.card}>\r\n                                        <CardActionArea className={classes.pokemonButton}>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            alt={pokeEvolutionChain[1].species_name}\r\n                                            height=\"140\"\r\n                                            image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[1].id}.png`}\r\n                                            title={pokeEvolutionChain[1].species_name}\r\n                                            className={classes.pokemonImg}\r\n                                        />\r\n                                        <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                                            <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                            {pokeEvolutionChain[1].species_name}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                        </CardActionArea>\r\n                                    </Card>\r\n                                </Grid>\r\n                          </Grid>\r\n                          <Grid container item xs={6} justify=\"center\">\r\n                            {/* Second evo */}\r\n                              <Grid container item xs={10} sm={6} justify=\"center\" key={\"mb11\"} onClick={() => pokeSelectorHandler(pokeEvolutionChain[2].species_name)}>\r\n                                    <Card className={classes.card}>\r\n                                        <CardActionArea className={classes.pokemonButton}>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            alt={pokeEvolutionChain[2].species_name}\r\n                                            height=\"140\"\r\n                                            image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[2].id}.png`}\r\n                                            title={pokeEvolutionChain[2].species_name}\r\n                                            className={classes.pokemonImg}\r\n                                        />\r\n                                        <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                                            <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                            {pokeEvolutionChain[2].species_name}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                        </CardActionArea>\r\n                                    </Card>\r\n                                </Grid>\r\n                          </Grid>\r\n                          <Grid container item xs={6} justify=\"center\">\r\n                            {/* third arrow  */}\r\n                            {\r\n                              (<div style={{ textAlign: 'center'}} key={31}><Arrow className={classes.arrowRotate}  /> <Typography>{pokeEvolutionChain[3].evolution_details.trigger.name} \r\n                              {(pokeEvolutionChain[3].evolution_details.gender === 1) ? ` female` : (pokeEvolutionChain[3].evolution_details.gender === 2) ? ` male` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.item ? `  ${pokeEvolutionChain[3].evolution_details.item.name}` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.held_item ? ` while holding ${pokeEvolutionChain[3].evolution_details.held_item.name}` : null}\r\n                              {(pokeEvolutionChain[3].evolution_details.known_move) ? ` while knowing ${pokeEvolutionChain[3].evolution_details.known_move.name}` : null}\r\n                              {(pokeEvolutionChain[3].evolution_details.known_move_type) ? ` while knowing a ${pokeEvolutionChain[3].evolution_details.known_move_type.name} type move` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.location ? ` at ${pokeEvolutionChain[3].evolution_details.location.name}` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.min_affection ? ` when affection is atleast ${pokeEvolutionChain[3].evolution_details.min_affection}` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.min_beauty ? ` when beauty is atleast ${pokeEvolutionChain[3].evolution_details.min_beauty}` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.min_happiness ? ` when happiness is atleast ${pokeEvolutionChain[3].evolution_details.min_happiness}` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.min_level ? ` at level ${pokeEvolutionChain[3].evolution_details.min_level}` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.needs_overworld_rain ? ` when raining` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.party_species ? ` with ${pokeEvolutionChain[3].evolution_details.party_species.name} in party` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.party_type ? ` with ${pokeEvolutionChain[3].evolution_details.party_type.name} type pokemon in party` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.time_of_day ? ` at ${pokeEvolutionChain[3].evolution_details.time_of_day} ` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.trade_species ? ` with ${pokeEvolutionChain[3].evolution_details.trade_species.name} ` : null}\r\n                                </Typography></div>)\r\n                            }\r\n                          </Grid>\r\n                          <Grid container item xs={6} justify=\"center\">\r\n                            {/* fourth Arrow */}\r\n                            {\r\n                              (<div style={{ textAlign: 'center'}} key={41}><Arrow  className={classes.arrowRotate}/> <Typography>{pokeEvolutionChain[4].evolution_details.trigger.name} \r\n                              {(pokeEvolutionChain[4].evolution_details.gender === 1) ? ` female` : (pokeEvolutionChain[4].evolution_details.gender === 3) ? ` male` : null}\r\n                              {pokeEvolutionChain[4].evolution_details.item ? ` ${pokeEvolutionChain[4].evolution_details.item.name}` : null}\r\n                              {pokeEvolutionChain[4].evolution_details.held_item ? ` while holding ${pokeEvolutionChain[4].evolution_details.held_item.name}` : null}\r\n                              {(pokeEvolutionChain[4].evolution_details.known_move) ? ` while knowing ${pokeEvolutionChain[4].evolution_details.known_move.name}` : null}\r\n                              {(pokeEvolutionChain[4].evolution_details.known_move_type) ? ` while knowing a ${pokeEvolutionChain[4].evolution_details.known_move_type.name} type move` : null}\r\n                              {pokeEvolutionChain[4].evolution_details.location ? ` at ${pokeEvolutionChain[4].evolution_details.location.name}` : null}\r\n                              {pokeEvolutionChain[4].evolution_details.min_affection ? ` when affection is atleast ${pokeEvolutionChain[4].evolution_details.min_affection}` : null}\r\n                              {pokeEvolutionChain[4].evolution_details.min_beauty ? ` when beauty is atleast ${pokeEvolutionChain[4].evolution_details.min_beauty}` : null}\r\n                              {pokeEvolutionChain[4].evolution_details.min_happiness ? ` when happiness is atleast ${pokeEvolutionChain[4].evolution_details.min_happiness}` : null}\r\n                              {pokeEvolutionChain[4].evolution_details.min_level ? ` at level ${pokeEvolutionChain[4].evolution_details.min_level}` : null}\r\n                              {pokeEvolutionChain[4].evolution_details.needs_overworld_rain ? ` when raining` : null}\r\n                              {pokeEvolutionChain[4].evolution_details.party_species ? ` with ${pokeEvolutionChain[4].evolution_details.party_species.name} in party` : null}\r\n                              {pokeEvolutionChain[4].evolution_details.party_type ? ` with ${pokeEvolutionChain[4].evolution_details.party_type.name} type pokemon in party` : null}\r\n                              {pokeEvolutionChain[4].evolution_details.time_of_day ? ` at ${pokeEvolutionChain[4].evolution_details.time_of_day} ` : null}\r\n                              {pokeEvolutionChain[4].evolution_details.trade_species ? ` with ${pokeEvolutionChain[4].evolution_details.trade_species.name} ` : null}\r\n                                </Typography></div>)\r\n                            }\r\n                          </Grid>\r\n                          <Grid container item xs={6} justify=\"center\">\r\n                            {/* third evo */}\r\n                              <Grid container item xs={10} sm={6} justify=\"center\" key={\"mb11\"} onClick={() => pokeSelectorHandler(pokeEvolutionChain[3].species_name)}>\r\n                                    <Card className={classes.card}>\r\n                                        <CardActionArea className={classes.pokemonButton}>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            alt={pokeEvolutionChain[3].species_name}\r\n                                            height=\"140\"\r\n                                            image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[3].id}.png`}\r\n                                            title={pokeEvolutionChain[3].species_name}\r\n                                            className={classes.pokemonImg}\r\n                                        />\r\n                                        <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                                            <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                            {pokeEvolutionChain[3].species_name}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                        </CardActionArea>\r\n                                    </Card>\r\n                                </Grid>\r\n                          </Grid>\r\n                          <Grid container item xs={6} justify=\"center\">\r\n                            {/* fourth evo */}\r\n                              <Grid container item xs={10} sm={6} justify=\"center\" key={\"mb11\"} onClick={() => pokeSelectorHandler(pokeEvolutionChain[4].species_name)}>\r\n                                    <Card className={classes.card}>\r\n                                        <CardActionArea className={classes.pokemonButton}>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            alt={pokeEvolutionChain[4].species_name}\r\n                                            height=\"140\"\r\n                                            image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[4].id}.png`}\r\n                                            title={pokeEvolutionChain[4].species_name}\r\n                                            className={classes.pokemonImg}\r\n                                        />\r\n                                        <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                                            <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                            {pokeEvolutionChain[4].species_name}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                        </CardActionArea>\r\n                                    </Card>\r\n                                </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                      ) : null\r\n                  } \r\n              </React.Fragment>\r\n          );\r\n        })\r\n      }\r\n    </Grid>\r\n    </Hidden>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default PokeEvolutionExceptionType1;\r\n","import React from 'react';\r\nimport { Grid, Typography, Chip, Divider, Avatar, Hidden } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Arrow from '@material-ui/icons/ArrowRightAlt';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card:{\r\n    textAlign: 'center',\r\n    margin: '1rem',\r\n    [theme.breakpoints.down('sm')]: {\r\n      margin: '0.5rem',\r\n    },\r\n  },\r\n  text:{\r\n    textTransform: 'capitalize'\r\n  },\r\n  pokemonImg:{\r\n    objectFit: 'contain'\r\n  },\r\n  pokemonButton:{\r\n    padding: '2rem',\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: '0.3rem',\r\n    },\r\n  },\r\n  arrowRotate:{\r\n    [theme.breakpoints.down('sm')]: {\r\n      transform: 'rotateZ(90deg)'\r\n    },\r\n  },\r\n}));\r\n\r\n\r\n// evolutionChainExceptions4 = [\r\n//   'tyrogue'\r\n// ];\r\n\r\n\r\n\r\n\r\nconst PokeEvolutionExceptionType1 = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const pokeSelectorHandler = (search) => {\r\n    props.history.push({pathname: '/pokemon/' + search});\r\n  }\r\n  const dustox = {\r\n    species_name: 'dustox',\r\n    id: '269',\r\n    evolution_details:\r\n        {\r\n          gender: null,\r\n          held_item: null,\r\n          item: null,\r\n          known_move: null,\r\n          known_move_type: null,\r\n          location: null,\r\n          min_affection: null,\r\n          min_beauty: null,\r\n          min_happiness: null,\r\n          min_level: 10,\r\n          needs_overworld_rain: false,\r\n          party_species: null,\r\n          party_type: null,\r\n          relative_physical_stats: null,\r\n          time_of_day: '',\r\n          trade_species: null,\r\n          trigger: {\r\n            name: 'level-up',\r\n            url: 'https://pokeapi.co/api/v2/evolution-trigger/1/'\r\n          },\r\n          turn_upside_down: false\r\n        }\r\n    }\r\n\r\n  let pokeEvolutionChain = [...props.pokeEvolutionChain]; //cause initially props.pokeEvolutionChain is undefined and map wont work therefore assigning an array so for initial state array is empty and map works\r\n  if(pokeEvolutionChain.length !== 0 ){\r\n      pokeEvolutionChain.push(dustox);\r\n  }\r\n  const evolutionsNumber = pokeEvolutionChain.length;\r\n  return(\r\n    <React.Fragment>\r\n      <Hidden smDown>\r\n    <Grid container item xs={12} lg={9} justify=\"center\" style={{alignItems: 'center'}}>\r\n      {\r\n        pokeEvolutionChain.map((evolution, index) => {\r\n          return(\r\n              <React.Fragment>\r\n                  {\r\n                      index === 4 ? (\r\n                        <React.Fragment>\r\n                          <Grid container xs={5}>\r\n                              <Grid container item xs={3} justify=\"center\">\r\n                              {\r\n                              (<div style={{ textAlign: 'center'}} key={11}><Arrow style={{marginTop: '7rem'}} /> <Typography>{pokeEvolutionChain[1].evolution_details.trigger.name} \r\n                              {(pokeEvolutionChain[1].evolution_details.gender === 1) ? ` female` : (pokeEvolutionChain[1].evolution_details.gender === 2) ? ` male` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.item ? `  ${pokeEvolutionChain[1].evolution_details.item.name}` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.held_item ? ` while holding ${pokeEvolutionChain[1].evolution_details.held_item.name}` : null}\r\n                              {(pokeEvolutionChain[1].evolution_details.known_move) ? ` while knowing ${pokeEvolutionChain[1].evolution_details.known_move.name}` : null}\r\n                              {(pokeEvolutionChain[1].evolution_details.known_move_type) ? ` while knowing a ${pokeEvolutionChain[1].evolution_details.known_move_type.name} type move` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.location ? ` at ${pokeEvolutionChain[1].evolution_details.location.name}` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.min_affection ? ` when affection is atleast ${pokeEvolutionChain[1].evolution_details.min_affection}` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.min_beauty ? ` when beauty is atleast ${pokeEvolutionChain[1].evolution_details.min_beauty}` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.min_happiness ? ` when happiness is atleast ${pokeEvolutionChain[1].evolution_details.min_happiness}` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.min_level ? ` at level ${pokeEvolutionChain[1].evolution_details.min_level}` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.needs_overworld_rain ? ` when raining` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.party_species ? ` with ${pokeEvolutionChain[1].evolution_details.party_species.name} in party` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.party_type ? ` with ${pokeEvolutionChain[1].evolution_details.party_type.name} type pokemon in party` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.time_of_day ? ` at ${pokeEvolutionChain[1].evolution_details.time_of_day} ` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.trade_species ? ` with ${pokeEvolutionChain[1].evolution_details.trade_species.name} ` : null}\r\n                              {` when Defence is greater than Attack`}\r\n                                </Typography></div>)\r\n                            }\r\n                              </Grid>\r\n                              <Grid container item xs={7} justify=\"center\">\r\n                                <Grid container item xs={9} justify=\"center\" key={12} onClick={() => pokeSelectorHandler(pokeEvolutionChain[1].species_name)}>\r\n                                    <Card className={classes.card}>\r\n                                        <CardActionArea className={classes.pokemonButton}>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            alt={pokeEvolutionChain[1].species_name}\r\n                                            height=\"140\"\r\n                                            image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[1].id}.png`}\r\n                                            title={pokeEvolutionChain[1].species_name}\r\n                                            className={classes.pokemonImg}\r\n                                        />\r\n                                        <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                                            <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                            {pokeEvolutionChain[1].species_name}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                        </CardActionArea>\r\n                                    </Card>\r\n                                </Grid>\r\n                              </Grid>\r\n                              <Grid container item xs={3} justify=\"center\">\r\n                              {\r\n                              (<div style={{ textAlign: 'center'}} key={21}><Arrow style={{marginTop: '5rem'}} /> <Typography>{pokeEvolutionChain[2].evolution_details.trigger.name} \r\n                              {(pokeEvolutionChain[2].evolution_details.gender === 1) ? ` female` : (pokeEvolutionChain[2].evolution_details.gender === 3) ? ` male` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.item ? ` ${pokeEvolutionChain[2].evolution_details.item.name}` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.held_item ? ` while holding ${pokeEvolutionChain[2].evolution_details.held_item.name}` : null}\r\n                              {(pokeEvolutionChain[2].evolution_details.known_move) ? ` while knowing ${pokeEvolutionChain[2].evolution_details.known_move.name}` : null}\r\n                              {(pokeEvolutionChain[2].evolution_details.known_move_type) ? ` while knowing a ${pokeEvolutionChain[2].evolution_details.known_move_type.name} type move` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.location ? ` at ${pokeEvolutionChain[2].evolution_details.location.name}` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.min_affection ? ` when affection is atleast ${pokeEvolutionChain[2].evolution_details.min_affection}` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.min_beauty ? ` when beauty is atleast ${pokeEvolutionChain[2].evolution_details.min_beauty}` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.min_happiness ? ` when happiness is atleast ${pokeEvolutionChain[2].evolution_details.min_happiness}` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.min_level ? ` at level ${pokeEvolutionChain[2].evolution_details.min_level}` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.needs_overworld_rain ? ` when raining` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.party_species ? ` with ${pokeEvolutionChain[2].evolution_details.party_species.name} in party` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.party_type ? ` with ${pokeEvolutionChain[2].evolution_details.party_type.name} type pokemon in party` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.time_of_day ? ` at ${pokeEvolutionChain[2].evolution_details.time_of_day} ` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.trade_species ? ` with ${pokeEvolutionChain[2].evolution_details.trade_species.name} ` : null}\r\n                              {` when Defence is same as Attack`}\r\n                                </Typography></div>)\r\n                            }\r\n                              </Grid>\r\n                              <Grid container item xs={7} justify=\"center\">\r\n                                <Grid container item xs={9} justify=\"center\" key={22} onClick={() => pokeSelectorHandler(pokeEvolutionChain[2].species_name)}>\r\n                                    <Card className={classes.card}>\r\n                                        <CardActionArea className={classes.pokemonButton}>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            alt={pokeEvolutionChain[2].species_name}\r\n                                            height=\"140\"\r\n                                            image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[2].id}.png`}\r\n                                            title={pokeEvolutionChain[2].species_name}\r\n                                            className={classes.pokemonImg}\r\n                                        />\r\n                                        <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                                            <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                            {pokeEvolutionChain[2].species_name}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                        </CardActionArea>\r\n                                    </Card>\r\n                                </Grid>\r\n                              </Grid>\r\n                              <Grid container item xs={3} justify=\"center\">\r\n                              {\r\n                              (<div style={{ textAlign: 'center'}} key={31}><Arrow style={{marginTop: '5rem'}} /> <Typography>{pokeEvolutionChain[3].evolution_details.trigger.name} \r\n                              {(pokeEvolutionChain[3].evolution_details.gender === 1) ? ` female` : (pokeEvolutionChain[3].evolution_details.gender === 2) ? ` male` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.item ? `  ${pokeEvolutionChain[3].evolution_details.item.name}` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.held_item ? ` while holding ${pokeEvolutionChain[3].evolution_details.held_item.name}` : null}\r\n                              {(pokeEvolutionChain[3].evolution_details.known_move) ? ` while knowing ${pokeEvolutionChain[3].evolution_details.known_move.name}` : null}\r\n                              {(pokeEvolutionChain[3].evolution_details.known_move_type) ? ` while knowing a ${pokeEvolutionChain[3].evolution_details.known_move_type.name} type move` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.location ? ` at ${pokeEvolutionChain[3].evolution_details.location.name}` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.min_affection ? ` when affection is atleast ${pokeEvolutionChain[3].evolution_details.min_affection}` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.min_beauty ? ` when beauty is atleast ${pokeEvolutionChain[3].evolution_details.min_beauty}` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.min_happiness ? ` when happiness is atleast ${pokeEvolutionChain[3].evolution_details.min_happiness}` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.min_level ? ` at level ${pokeEvolutionChain[3].evolution_details.min_level}` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.needs_overworld_rain ? ` when raining` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.party_species ? ` with ${pokeEvolutionChain[3].evolution_details.party_species.name} in party` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.party_type ? ` with ${pokeEvolutionChain[3].evolution_details.party_type.name} type pokemon in party` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.time_of_day ? ` at ${pokeEvolutionChain[3].evolution_details.time_of_day} ` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.trade_species ? ` with ${pokeEvolutionChain[3].evolution_details.trade_species.name} ` : null}\r\n                              {` when Defence is less than Attack`}\r\n                                </Typography></div>)\r\n                            }\r\n                              </Grid>\r\n                              <Grid container item xs={7} justify=\"center\">\r\n                                <Grid container item xs={9} justify=\"center\" key={32} onClick={() => pokeSelectorHandler(pokeEvolutionChain[3].species_name)}>\r\n                                    <Card className={classes.card}>\r\n                                        <CardActionArea className={classes.pokemonButton}>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            alt={pokeEvolutionChain[3].species_name}\r\n                                            height=\"140\"\r\n                                            image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[3].id}.png`}\r\n                                            title={pokeEvolutionChain[3].species_name}\r\n                                            className={classes.pokemonImg}\r\n                                        />\r\n                                        <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                                            <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                            {pokeEvolutionChain[3].species_name}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                        </CardActionArea>\r\n                                    </Card>\r\n                                </Grid>\r\n                              </Grid>\r\n                          </Grid>\r\n                          </React.Fragment>\r\n                      ) :\r\n                      (\r\n                          index === 0  ? (\r\n                        <React.Fragment>\r\n                        <Grid container item xs={2} justify=\"center\" style={{marginRight: '5rem'}} key={evolution.id} onClick={() => pokeSelectorHandler(evolution.species_name)}>\r\n                          <Card className={classes.card}>\r\n                            <CardActionArea className={classes.pokemonButton}>\r\n                              <CardMedia\r\n                                component=\"img\"\r\n                                alt={evolution.species_name}\r\n                                height=\"140\"\r\n                                image={`https://pokeres.bastionbot.org/images/pokemon/${evolution.id}.png`}\r\n                                title={evolution.species_name}\r\n                                className={classes.pokemonImg}\r\n                              />\r\n                              <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                                <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                  {evolution.species_name}\r\n                                </Typography>\r\n                              </CardContent>\r\n                            </CardActionArea>\r\n                          </Card>\r\n                        </Grid>\r\n                        </React.Fragment>) : null\r\n                      )\r\n                  }\r\n              </React.Fragment>\r\n          );\r\n        })\r\n      }\r\n    </Grid>\r\n    </Hidden>\r\n    <Hidden mdUp>\r\n      <Grid container item xs={12} justify=\"center\">\r\n      {\r\n        pokeEvolutionChain.map((evolution, index) => {\r\n          return(\r\n              <React.Fragment>\r\n                  {\r\n                      index === 4 ? (\r\n                        <Grid container item xs={12} flexDirection=\"column\"> {/* Starting of mobile layout */}\r\n                          <Grid container item xs={12} justify=\"center\">\r\n                            {/* First Pokemon */}\r\n                              <Grid container item xs={6} justify=\"center\" key={\"mb11\"} onClick={() => pokeSelectorHandler(pokeEvolutionChain[0].species_name)}>\r\n                                    <Card className={classes.card}>\r\n                                        <CardActionArea className={classes.pokemonButton}>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            alt={pokeEvolutionChain[0].species_name}\r\n                                            height=\"140\"\r\n                                            image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[0].id}.png`}\r\n                                            title={pokeEvolutionChain[0].species_name}\r\n                                            className={classes.pokemonImg}\r\n                                        />\r\n                                        <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                                            <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                            {pokeEvolutionChain[0].species_name}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                        </CardActionArea>\r\n                                    </Card>\r\n                              </Grid>\r\n                          </Grid>\r\n                          <Grid container item xs={4} justify=\"center\">\r\n                            {/* first arrow */}\r\n                            {\r\n                              (<div style={{ textAlign: 'center'}} key={11}><Arrow className={classes.arrowRotate} /> <Typography>{pokeEvolutionChain[1].evolution_details.trigger.name} \r\n                              {(pokeEvolutionChain[1].evolution_details.gender === 1) ? ` female` : (pokeEvolutionChain[1].evolution_details.gender === 2) ? ` male` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.item ? `  ${pokeEvolutionChain[1].evolution_details.item.name}` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.held_item ? ` while holding ${pokeEvolutionChain[1].evolution_details.held_item.name}` : null}\r\n                              {(pokeEvolutionChain[1].evolution_details.known_move) ? ` while knowing ${pokeEvolutionChain[1].evolution_details.known_move.name}` : null}\r\n                              {(pokeEvolutionChain[1].evolution_details.known_move_type) ? ` while knowing a ${pokeEvolutionChain[1].evolution_details.known_move_type.name} type move` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.location ? ` at ${pokeEvolutionChain[1].evolution_details.location.name}` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.min_affection ? ` when affection is atleast ${pokeEvolutionChain[1].evolution_details.min_affection}` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.min_beauty ? ` when beauty is atleast ${pokeEvolutionChain[1].evolution_details.min_beauty}` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.min_happiness ? ` when happiness is atleast ${pokeEvolutionChain[1].evolution_details.min_happiness}` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.min_level ? ` at level ${pokeEvolutionChain[1].evolution_details.min_level}` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.needs_overworld_rain ? ` when raining` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.party_species ? ` with ${pokeEvolutionChain[1].evolution_details.party_species.name} in party` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.party_type ? ` with ${pokeEvolutionChain[1].evolution_details.party_type.name} type pokemon in party` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.time_of_day ? ` at ${pokeEvolutionChain[1].evolution_details.time_of_day} ` : null}\r\n                              {pokeEvolutionChain[1].evolution_details.trade_species ? ` with ${pokeEvolutionChain[1].evolution_details.trade_species.name} ` : null}\r\n                              {` when Defence is greater than Attack`}\r\n                                </Typography></div>)\r\n                            }\r\n                          </Grid>\r\n                          <Grid container item xs={4} justify=\"center\">\r\n                            {/* second arrow */}\r\n                            {\r\n                              (<div style={{ textAlign: 'center'}} key={21}><Arrow className={classes.arrowRotate} /> <Typography>{pokeEvolutionChain[2].evolution_details.trigger.name} \r\n                              {(pokeEvolutionChain[2].evolution_details.gender === 1) ? ` female` : (pokeEvolutionChain[2].evolution_details.gender === 3) ? ` male` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.item ? ` ${pokeEvolutionChain[2].evolution_details.item.name}` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.held_item ? ` while holding ${pokeEvolutionChain[2].evolution_details.held_item.name}` : null}\r\n                              {(pokeEvolutionChain[2].evolution_details.known_move) ? ` while knowing ${pokeEvolutionChain[2].evolution_details.known_move.name}` : null}\r\n                              {(pokeEvolutionChain[2].evolution_details.known_move_type) ? ` while knowing a ${pokeEvolutionChain[2].evolution_details.known_move_type.name} type move` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.location ? ` at ${pokeEvolutionChain[2].evolution_details.location.name}` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.min_affection ? ` when affection is atleast ${pokeEvolutionChain[2].evolution_details.min_affection}` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.min_beauty ? ` when beauty is atleast ${pokeEvolutionChain[2].evolution_details.min_beauty}` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.min_happiness ? ` when happiness is atleast ${pokeEvolutionChain[2].evolution_details.min_happiness}` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.min_level ? ` at level ${pokeEvolutionChain[2].evolution_details.min_level}` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.needs_overworld_rain ? ` when raining` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.party_species ? ` with ${pokeEvolutionChain[2].evolution_details.party_species.name} in party` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.party_type ? ` with ${pokeEvolutionChain[2].evolution_details.party_type.name} type pokemon in party` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.time_of_day ? ` at ${pokeEvolutionChain[2].evolution_details.time_of_day} ` : null}\r\n                              {pokeEvolutionChain[2].evolution_details.trade_species ? ` with ${pokeEvolutionChain[2].evolution_details.trade_species.name} ` : null}\r\n                              {` when Defence is same as Attack`}\r\n                                </Typography></div>)\r\n                            }\r\n                          </Grid>\r\n                          <Grid container item xs={4} justify=\"center\">\r\n                            {/* third arrow */}\r\n                            {\r\n                              (<div style={{ textAlign: 'center'}} key={31}><Arrow  className={classes.arrowRotate} /> <Typography>{pokeEvolutionChain[3].evolution_details.trigger.name} \r\n                              {(pokeEvolutionChain[3].evolution_details.gender === 1) ? ` female` : (pokeEvolutionChain[3].evolution_details.gender === 2) ? ` male` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.item ? `  ${pokeEvolutionChain[3].evolution_details.item.name}` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.held_item ? ` while holding ${pokeEvolutionChain[3].evolution_details.held_item.name}` : null}\r\n                              {(pokeEvolutionChain[3].evolution_details.known_move) ? ` while knowing ${pokeEvolutionChain[3].evolution_details.known_move.name}` : null}\r\n                              {(pokeEvolutionChain[3].evolution_details.known_move_type) ? ` while knowing a ${pokeEvolutionChain[3].evolution_details.known_move_type.name} type move` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.location ? ` at ${pokeEvolutionChain[3].evolution_details.location.name}` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.min_affection ? ` when affection is atleast ${pokeEvolutionChain[3].evolution_details.min_affection}` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.min_beauty ? ` when beauty is atleast ${pokeEvolutionChain[3].evolution_details.min_beauty}` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.min_happiness ? ` when happiness is atleast ${pokeEvolutionChain[3].evolution_details.min_happiness}` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.min_level ? ` at level ${pokeEvolutionChain[3].evolution_details.min_level}` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.needs_overworld_rain ? ` when raining` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.party_species ? ` with ${pokeEvolutionChain[3].evolution_details.party_species.name} in party` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.party_type ? ` with ${pokeEvolutionChain[3].evolution_details.party_type.name} type pokemon in party` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.time_of_day ? ` at ${pokeEvolutionChain[3].evolution_details.time_of_day} ` : null}\r\n                              {pokeEvolutionChain[3].evolution_details.trade_species ? ` with ${pokeEvolutionChain[3].evolution_details.trade_species.name} ` : null}\r\n                              {` when Defence is less than Attack`}\r\n                                </Typography></div>)\r\n                            }\r\n                          </Grid>\r\n                          <Grid container item xs={4} justify=\"center\">\r\n                            {/* first pokemon */}\r\n                              <Grid container item xs={12} sm={6}  justify=\"center\"  onClick={() => pokeSelectorHandler(pokeEvolutionChain[1].species_name)}>\r\n                                    <Card className={classes.card}>\r\n                                        <CardActionArea className={classes.pokemonButton}>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            alt={pokeEvolutionChain[1].species_name}\r\n                                            height=\"140\"\r\n                                            image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[1].id}.png`}\r\n                                            title={pokeEvolutionChain[1].species_name}\r\n                                            className={classes.pokemonImg}\r\n                                        />\r\n                                        <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                                            <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                            {pokeEvolutionChain[1].species_name}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                        </CardActionArea>\r\n                                    </Card>\r\n                              </Grid>\r\n                          </Grid>\r\n                          <Grid container item xs={4} justify=\"center\">\r\n                            {/* second pokemon */}\r\n                              <Grid container item xs={12} sm={6}  justify=\"center\"  onClick={() => pokeSelectorHandler(pokeEvolutionChain[2].species_name)}>\r\n                                    <Card className={classes.card}>\r\n                                        <CardActionArea className={classes.pokemonButton}>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            alt={pokeEvolutionChain[2].species_name}\r\n                                            height=\"140\"\r\n                                            image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[2].id}.png`}\r\n                                            title={pokeEvolutionChain[2].species_name}\r\n                                            className={classes.pokemonImg}\r\n                                        />\r\n                                        <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                                            <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                            {pokeEvolutionChain[2].species_name}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                        </CardActionArea>\r\n                                    </Card>\r\n                              </Grid>\r\n                          </Grid>\r\n                          <Grid container item xs={4} justify=\"center\">\r\n                            {/* third pokemon */}\r\n                            <Grid container item xs={12} sm={6}  justify=\"center\"  onClick={() => pokeSelectorHandler(pokeEvolutionChain[3].species_name)}>\r\n                                    <Card className={classes.card}>\r\n                                        <CardActionArea className={classes.pokemonButton}>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            alt={pokeEvolutionChain[3].species_name}\r\n                                            height=\"140\"\r\n                                            image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[3].id}.png`}\r\n                                            title={pokeEvolutionChain[3].species_name}\r\n                                            className={classes.pokemonImg}\r\n                                        />\r\n                                        <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                                            <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                            {pokeEvolutionChain[3].species_name}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                        </CardActionArea>\r\n                                    </Card>\r\n                              </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                      ) : null\r\n                  }\r\n              </React.Fragment>\r\n          );\r\n        })\r\n      }\r\n      </Grid>\r\n    </Hidden>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default PokeEvolutionExceptionType1;\r\n","import React from 'react';\r\nimport { Grid, Typography, Chip, Divider, Avatar, Hidden } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Arrow from '@material-ui/icons/ArrowRightAlt';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card:{\r\n    textAlign: 'center',\r\n    margin: '1rem',\r\n    [theme.breakpoints.down('sm')]: {\r\n        margin: '0.5rem',\r\n    },\r\n  },\r\n  text:{\r\n    textTransform: 'capitalize'\r\n  },\r\n  pokemonImg:{\r\n    objectFit: 'contain'\r\n  },\r\n  pokemonButton:{\r\n    padding: '2rem',\r\n    [theme.breakpoints.down('sm')]: {\r\n        padding: '0.6rem',\r\n    },\r\n  },\r\n  arrowGrid:{\r\n    '@media  (max-width: 525px)': {\r\n        marginTop: '5rem'\r\n      }, \r\n  }\r\n}));\r\n\r\n\r\n// evolutionChainExceptions5 = [\r\n//   'eevee'];\r\n\r\n\r\n\r\n\r\nconst PokeEvolutionExceptionType1 = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const pokeSelectorHandler = (search) => {\r\n    props.history.push({pathname: '/pokemon/' + search});\r\n  }\r\n\r\n  let pokeEvolutionChain = [...props.pokeEvolutionChain]; //cause initially props.pokeEvolutionChain is undefined and map wont work therefore assigning an array so for initial state array is empty and map works\r\n  const evolutionsNumber = pokeEvolutionChain.length;\r\n  return(\r\n      <React.Fragment>\r\n    <Hidden smDown>\r\n    <Grid container item xs={12} lg={9} justify=\"center\" style={{alignItems: 'center'}}>\r\n      {\r\n        pokeEvolutionChain.map((evolution, index) => {\r\n          return(\r\n              <React.Fragment>\r\n                  {\r\n                      index === 8 ? (\r\n                        <React.Fragment>\r\n                            <Grid container xs={9}> {/* Main Row */}\r\n                                    <Grid container item xs={4} justify=\"center\"> {/* first row element */}\r\n                                        <Grid container item xs={8} justify=\"center\" key={11} onClick={() => pokeSelectorHandler(pokeEvolutionChain[1].species_name)}>\r\n                                            <Card className={classes.card}>\r\n                                                <CardActionArea className={classes.pokemonButton}>\r\n                                                <CardMedia\r\n                                                    component=\"img\"\r\n                                                    alt={pokeEvolutionChain[1].species_name}\r\n                                                    height=\"140\"\r\n                                                    image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[1].id}.png`}\r\n                                                    title={pokeEvolutionChain[1].species_name}\r\n                                                    className={classes.pokemonImg}\r\n                                                />\r\n                                                <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                                                    <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                                    {pokeEvolutionChain[1].species_name}\r\n                                                    </Typography>\r\n                                                </CardContent>\r\n                                                </CardActionArea>\r\n                                            </Card>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container item xs={4} justify=\"center\"> {/* first row element */}\r\n                                        <Grid container item xs={8} justify=\"center\" key={12} onClick={() => pokeSelectorHandler(pokeEvolutionChain[2].species_name)}>\r\n                                            <Card className={classes.card}>\r\n                                                <CardActionArea className={classes.pokemonButton}>\r\n                                                <CardMedia\r\n                                                    component=\"img\"\r\n                                                    alt={pokeEvolutionChain[2].species_name}\r\n                                                    height=\"140\"\r\n                                                    image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[2].id}.png`}\r\n                                                    title={pokeEvolutionChain[2].species_name}\r\n                                                    className={classes.pokemonImg}\r\n                                                />\r\n                                                <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                                                    <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                                    {pokeEvolutionChain[2].species_name}\r\n                                                    </Typography>\r\n                                                </CardContent>\r\n                                                </CardActionArea>\r\n                                            </Card>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container item xs={4} justify=\"center\"> {/* first row element */}\r\n                                        <Grid container item xs={8} justify=\"center\" key={13} onClick={() => pokeSelectorHandler(pokeEvolutionChain[3].species_name)}>\r\n                                            <Card className={classes.card}>\r\n                                                <CardActionArea className={classes.pokemonButton}>\r\n                                                <CardMedia\r\n                                                    component=\"img\"\r\n                                                    alt={pokeEvolutionChain[3].species_name}\r\n                                                    height=\"140\"\r\n                                                    image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[3].id}.png`}\r\n                                                    title={pokeEvolutionChain[3].species_name}\r\n                                                    className={classes.pokemonImg}\r\n                                                />\r\n                                                <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                                                    <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                                    {pokeEvolutionChain[3].species_name}\r\n                                                    </Typography>\r\n                                                </CardContent>\r\n                                                </CardActionArea>\r\n                                            </Card>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                            </Grid>\r\n                            <Grid container xs={9} style={{alignItems: 'center'}} > {/* Main 2nd Row */ }\r\n                                    <Grid container item xs={3} justify=\"center\"> {/* second row element */}\r\n                                        <Grid container item xs={10} justify=\"center\" key={21} onClick={() => pokeSelectorHandler(pokeEvolutionChain[4].species_name)}>\r\n                                            <Card className={classes.card}>\r\n                                                <CardActionArea className={classes.pokemonButton}>\r\n                                                <CardMedia\r\n                                                    component=\"img\"\r\n                                                    alt={pokeEvolutionChain[4].species_name}\r\n                                                    height=\"140\"\r\n                                                    image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[4].id}.png`}\r\n                                                    title={pokeEvolutionChain[4].species_name}\r\n                                                    className={classes.pokemonImg}\r\n                                                />\r\n                                                <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                                                    <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                                    {pokeEvolutionChain[4].species_name}\r\n                                                    </Typography>\r\n                                                </CardContent>\r\n                                                </CardActionArea>\r\n                                            </Card>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container item xs={6} justify=\"center\" style={{alignItems: 'center'}} key={22} > {/* second row element */}\r\n                                        <Grid container item xs={4} justify=\"center\">\r\n                                        {\r\n                                            (<div style={{ textAlign: 'center'}}><Arrow style={{transform: 'rotateZ(-135deg)'}} /> <Typography>{pokeEvolutionChain[1].evolution_details.trigger.name} \r\n                                            {(pokeEvolutionChain[1].evolution_details.gender === 1) ? ` female` : (pokeEvolutionChain[1].evolution_details.gender === 2) ? ` male` : null}\r\n                                            {pokeEvolutionChain[1].evolution_details.item ? `  ${pokeEvolutionChain[1].evolution_details.item.name}` : null}\r\n                                            {pokeEvolutionChain[1].evolution_details.held_item ? ` while holding ${pokeEvolutionChain[1].evolution_details.held_item.name}` : null}\r\n                                            {(pokeEvolutionChain[1].evolution_details.known_move) ? ` while knowing ${pokeEvolutionChain[1].evolution_details.known_move.name}` : null}\r\n                                            {(pokeEvolutionChain[1].evolution_details.known_move_type) ? ` while knowing a ${pokeEvolutionChain[1].evolution_details.known_move_type.name} type move` : null}\r\n                                            {pokeEvolutionChain[1].evolution_details.location ? ` at ${pokeEvolutionChain[1].evolution_details.location.name}` : null}\r\n                                            {pokeEvolutionChain[1].evolution_details.min_affection ? ` when affection is atleast ${pokeEvolutionChain[1].evolution_details.min_affection}` : null}\r\n                                            {pokeEvolutionChain[1].evolution_details.min_beauty ? ` when beauty is atleast ${pokeEvolutionChain[1].evolution_details.min_beauty}` : null}\r\n                                            {pokeEvolutionChain[1].evolution_details.min_happiness ? ` when happiness is atleast ${pokeEvolutionChain[1].evolution_details.min_happiness}` : null}\r\n                                            {pokeEvolutionChain[1].evolution_details.min_level ? ` at level ${pokeEvolutionChain[1].evolution_details.min_level}` : null}\r\n                                            {pokeEvolutionChain[1].evolution_details.needs_overworld_rain ? ` when raining` : null}\r\n                                            {pokeEvolutionChain[1].evolution_details.party_species ? ` with ${pokeEvolutionChain[1].evolution_details.party_species.name} in party` : null}\r\n                                            {pokeEvolutionChain[1].evolution_details.party_type ? ` with ${pokeEvolutionChain[1].evolution_details.party_type.name} type pokemon in party` : null}\r\n                                            {pokeEvolutionChain[1].evolution_details.time_of_day ? ` at ${pokeEvolutionChain[1].evolution_details.time_of_day} ` : null}\r\n                                            {pokeEvolutionChain[1].evolution_details.trade_species ? ` with ${pokeEvolutionChain[1].evolution_details.trade_species.name} ` : null}\r\n                                            </Typography></div>)\r\n                                        }\r\n                                        </Grid>\r\n                                        <Grid container item xs={4} justify=\"center\">\r\n                                        {\r\n                                            (<div style={{ textAlign: 'center'}}><Arrow style={{transform: 'rotateZ(-90deg)'}} /> <Typography>{pokeEvolutionChain[2].evolution_details.trigger.name} \r\n                                            {(pokeEvolutionChain[2].evolution_details.gender === 1) ? ` female` : (pokeEvolutionChain[2].evolution_details.gender === 2) ? ` male` : null}\r\n                                            {pokeEvolutionChain[2].evolution_details.item ? `  ${pokeEvolutionChain[2].evolution_details.item.name}` : null}\r\n                                            {pokeEvolutionChain[2].evolution_details.held_item ? ` while holding ${pokeEvolutionChain[2].evolution_details.held_item.name}` : null}\r\n                                            {(pokeEvolutionChain[2].evolution_details.known_move) ? ` while knowing ${pokeEvolutionChain[2].evolution_details.known_move.name}` : null}\r\n                                            {(pokeEvolutionChain[2].evolution_details.known_move_type) ? ` while knowing a ${pokeEvolutionChain[2].evolution_details.known_move_type.name} type move` : null}\r\n                                            {pokeEvolutionChain[2].evolution_details.location ? ` at ${pokeEvolutionChain[2].evolution_details.location.name}` : null}\r\n                                            {pokeEvolutionChain[2].evolution_details.min_affection ? ` when affection is atleast ${pokeEvolutionChain[2].evolution_details.min_affection}` : null}\r\n                                            {pokeEvolutionChain[2].evolution_details.min_beauty ? ` when beauty is atleast ${pokeEvolutionChain[2].evolution_details.min_beauty}` : null}\r\n                                            {pokeEvolutionChain[2].evolution_details.min_happiness ? ` when happiness is atleast ${pokeEvolutionChain[2].evolution_details.min_happiness}` : null}\r\n                                            {pokeEvolutionChain[2].evolution_details.min_level ? ` at level ${pokeEvolutionChain[2].evolution_details.min_level}` : null}\r\n                                            {pokeEvolutionChain[2].evolution_details.needs_overworld_rain ? ` when raining` : null}\r\n                                            {pokeEvolutionChain[2].evolution_details.party_species ? ` with ${pokeEvolutionChain[2].evolution_details.party_species.name} in party` : null}\r\n                                            {pokeEvolutionChain[2].evolution_details.party_type ? ` with ${pokeEvolutionChain[2].evolution_details.party_type.name} type pokemon in party` : null}\r\n                                            {pokeEvolutionChain[2].evolution_details.time_of_day ? ` at ${pokeEvolutionChain[2].evolution_details.time_of_day} ` : null}\r\n                                            {pokeEvolutionChain[2].evolution_details.trade_species ? ` with ${pokeEvolutionChain[2].evolution_details.trade_species.name} ` : null}\r\n                                            </Typography></div>)\r\n                                        }\r\n                                        </Grid>\r\n                                        <Grid container item xs={4} justify=\"center\">\r\n                                        {\r\n                                            (<div style={{ textAlign: 'center'}}><Arrow style={{transform: 'rotateZ(-45deg)'}} /> <Typography>{pokeEvolutionChain[3].evolution_details.trigger.name} \r\n                                            {(pokeEvolutionChain[3].evolution_details.gender === 1) ? ` female` : (pokeEvolutionChain[3].evolution_details.gender === 2) ? ` male` : null}\r\n                                            {pokeEvolutionChain[3].evolution_details.item ? `  ${pokeEvolutionChain[3].evolution_details.item.name}` : null}\r\n                                            {pokeEvolutionChain[3].evolution_details.held_item ? ` while holding ${pokeEvolutionChain[3].evolution_details.held_item.name}` : null}\r\n                                            {(pokeEvolutionChain[3].evolution_details.known_move) ? ` while knowing ${pokeEvolutionChain[3].evolution_details.known_move.name}` : null}\r\n                                            {(pokeEvolutionChain[3].evolution_details.known_move_type) ? ` while knowing a ${pokeEvolutionChain[3].evolution_details.known_move_type.name} type move` : null}\r\n                                            {pokeEvolutionChain[3].evolution_details.location ? ` at ${pokeEvolutionChain[3].evolution_details.location.name}` : null}\r\n                                            {pokeEvolutionChain[3].evolution_details.min_affection ? ` when affection is atleast ${pokeEvolutionChain[3].evolution_details.min_affection}` : null}\r\n                                            {pokeEvolutionChain[3].evolution_details.min_beauty ? ` when beauty is atleast ${pokeEvolutionChain[3].evolution_details.min_beauty}` : null}\r\n                                            {pokeEvolutionChain[3].evolution_details.min_happiness ? ` when happiness is atleast ${pokeEvolutionChain[3].evolution_details.min_happiness}` : null}\r\n                                            {pokeEvolutionChain[3].evolution_details.min_level ? ` at level ${pokeEvolutionChain[3].evolution_details.min_level}` : null}\r\n                                            {pokeEvolutionChain[3].evolution_details.needs_overworld_rain ? ` when raining` : null}\r\n                                            {pokeEvolutionChain[3].evolution_details.party_species ? ` with ${pokeEvolutionChain[3].evolution_details.party_species.name} in party` : null}\r\n                                            {pokeEvolutionChain[3].evolution_details.party_type ? ` with ${pokeEvolutionChain[3].evolution_details.party_type.name} type pokemon in party` : null}\r\n                                            {pokeEvolutionChain[3].evolution_details.time_of_day ? ` at ${pokeEvolutionChain[3].evolution_details.time_of_day} ` : null}\r\n                                            {pokeEvolutionChain[3].evolution_details.trade_species ? ` with ${pokeEvolutionChain[3].evolution_details.trade_species.name} ` : null}\r\n                                            </Typography></div>)\r\n                                        }\r\n                                        </Grid>\r\n                                        <Grid container item xs={3} justify=\"center\">\r\n                                        {\r\n                                            (<div style={{ textAlign: 'center'}}><Arrow style={{transform: 'rotateZ(-180deg)'}} /> <Typography>{pokeEvolutionChain[4].evolution_details.trigger.name} \r\n                                            {(pokeEvolutionChain[4].evolution_details.gender === 1) ? ` female` : (pokeEvolutionChain[4].evolution_details.gender === 2) ? ` male` : null}\r\n                                            {pokeEvolutionChain[4].evolution_details.item ? `  ${pokeEvolutionChain[4].evolution_details.item.name}` : null}\r\n                                            {pokeEvolutionChain[4].evolution_details.held_item ? ` while holding ${pokeEvolutionChain[4].evolution_details.held_item.name}` : null}\r\n                                            {(pokeEvolutionChain[4].evolution_details.known_move) ? ` while knowing ${pokeEvolutionChain[4].evolution_details.known_move.name}` : null}\r\n                                            {(pokeEvolutionChain[4].evolution_details.known_move_type) ? ` while knowing a ${pokeEvolutionChain[4].evolution_details.known_move_type.name} type move` : null}\r\n                                            {pokeEvolutionChain[4].evolution_details.location ? ` at ${pokeEvolutionChain[4].evolution_details.location.name}` : null}\r\n                                            {pokeEvolutionChain[4].evolution_details.min_affection ? ` when affection is atleast ${pokeEvolutionChain[4].evolution_details.min_affection}` : null}\r\n                                            {pokeEvolutionChain[4].evolution_details.min_beauty ? ` when beauty is atleast ${pokeEvolutionChain[4].evolution_details.min_beauty}` : null}\r\n                                            {pokeEvolutionChain[4].evolution_details.min_happiness ? ` when happiness is atleast ${pokeEvolutionChain[4].evolution_details.min_happiness}` : null}\r\n                                            {pokeEvolutionChain[4].evolution_details.min_level ? ` at level ${pokeEvolutionChain[4].evolution_details.min_level}` : null}\r\n                                            {pokeEvolutionChain[4].evolution_details.needs_overworld_rain ? ` when raining` : null}\r\n                                            {pokeEvolutionChain[4].evolution_details.party_species ? ` with ${pokeEvolutionChain[4].evolution_details.party_species.name} in party` : null}\r\n                                            {pokeEvolutionChain[4].evolution_details.party_type ? ` with ${pokeEvolutionChain[4].evolution_details.party_type.name} type pokemon in party` : null}\r\n                                            {pokeEvolutionChain[4].evolution_details.time_of_day ? ` at ${pokeEvolutionChain[4].evolution_details.time_of_day} ` : null}\r\n                                            {pokeEvolutionChain[4].evolution_details.trade_species ? ` with ${pokeEvolutionChain[4].evolution_details.trade_species.name} ` : null}\r\n                                            </Typography></div>)\r\n                                        }\r\n                                        </Grid>\r\n                                        <Grid container item xs={6} justify=\"center\">\r\n                                            <Grid container item xs={12} justify=\"center\" key={props.key} onClick={() => pokeSelectorHandler(pokeEvolutionChain[0].species_name)}>\r\n                                                <Card className={classes.card}>\r\n                                                    <CardActionArea className={classes.pokemonButton}>\r\n                                                    <CardMedia\r\n                                                        component=\"img\"\r\n                                                        alt={pokeEvolutionChain[0].species_name}\r\n                                                        height=\"140\"\r\n                                                        image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[0].id}.png`}\r\n                                                        title={pokeEvolutionChain[0].species_name}\r\n                                                        className={classes.pokemonImg}\r\n                                                    />\r\n                                                    <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                                                        <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                                        {pokeEvolutionChain[0].species_name}\r\n                                                        </Typography>\r\n                                                    </CardContent>\r\n                                                    </CardActionArea>\r\n                                                </Card>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid container item xs={3} justify=\"center\">\r\n                                        {\r\n                                            (<div style={{ textAlign: 'center'}}><Arrow style={{transform: 'rotateZ(0deg)'}} /> <Typography>{pokeEvolutionChain[5].evolution_details.trigger.name} \r\n                                            {(pokeEvolutionChain[5].evolution_details.gender === 1) ? ` female` : (pokeEvolutionChain[5].evolution_details.gender === 2) ? ` male` : null}\r\n                                            {pokeEvolutionChain[5].evolution_details.item ? `  ${pokeEvolutionChain[5].evolution_details.item.name}` : null}\r\n                                            {pokeEvolutionChain[5].evolution_details.held_item ? ` while holding ${pokeEvolutionChain[5].evolution_details.held_item.name}` : null}\r\n                                            {(pokeEvolutionChain[5].evolution_details.known_move) ? ` while knowing ${pokeEvolutionChain[5].evolution_details.known_move.name}` : null}\r\n                                            {(pokeEvolutionChain[5].evolution_details.known_move_type) ? ` while knowing a ${pokeEvolutionChain[5].evolution_details.known_move_type.name} type move` : null}\r\n                                            {pokeEvolutionChain[5].evolution_details.location ? ` at ${pokeEvolutionChain[5].evolution_details.location.name}` : null}\r\n                                            {pokeEvolutionChain[5].evolution_details.min_affection ? ` when affection is atleast ${pokeEvolutionChain[5].evolution_details.min_affection}` : null}\r\n                                            {pokeEvolutionChain[5].evolution_details.min_beauty ? ` when beauty is atleast ${pokeEvolutionChain[5].evolution_details.min_beauty}` : null}\r\n                                            {pokeEvolutionChain[5].evolution_details.min_happiness ? ` when happiness is atleast ${pokeEvolutionChain[5].evolution_details.min_happiness}` : null}\r\n                                            {pokeEvolutionChain[5].evolution_details.min_level ? ` at level ${pokeEvolutionChain[5].evolution_details.min_level}` : null}\r\n                                            {pokeEvolutionChain[5].evolution_details.needs_overworld_rain ? ` when raining` : null}\r\n                                            {pokeEvolutionChain[5].evolution_details.party_species ? ` with ${pokeEvolutionChain[5].evolution_details.party_species.name} in party` : null}\r\n                                            {pokeEvolutionChain[5].evolution_details.party_type ? ` with ${pokeEvolutionChain[5].evolution_details.party_type.name} type pokemon in party` : null}\r\n                                            {pokeEvolutionChain[5].evolution_details.time_of_day ? ` at ${pokeEvolutionChain[5].evolution_details.time_of_day} ` : null}\r\n                                            {pokeEvolutionChain[5].evolution_details.trade_species ? ` with ${pokeEvolutionChain[5].evolution_details.trade_species.name} ` : null}\r\n                                            </Typography></div>)\r\n                                        }\r\n                                        </Grid>\r\n                                        <Grid container item xs={4} justify=\"center\">\r\n                                        {\r\n                                            (<div style={{ textAlign: 'center'}}><Arrow style={{transform: 'rotateZ(-225deg)'}} /> <Typography>{pokeEvolutionChain[6].evolution_details.trigger.name} \r\n                                            {(pokeEvolutionChain[6].evolution_details.gender === 1) ? ` female` : (pokeEvolutionChain[6].evolution_details.gender === 2) ? ` male` : null}\r\n                                            {pokeEvolutionChain[6].evolution_details.item ? `  ${pokeEvolutionChain[6].evolution_details.item.name}` : null}\r\n                                            {pokeEvolutionChain[6].evolution_details.held_item ? ` while holding ${pokeEvolutionChain[6].evolution_details.held_item.name}` : null}\r\n                                            {(pokeEvolutionChain[6].evolution_details.known_move) ? ` while knowing ${pokeEvolutionChain[6].evolution_details.known_move.name}` : null}\r\n                                            {(pokeEvolutionChain[6].evolution_details.known_move_type) ? ` while knowing a ${pokeEvolutionChain[6].evolution_details.known_move_type.name} type move` : null}\r\n                                            {pokeEvolutionChain[6].evolution_details.location ? ` at ${pokeEvolutionChain[6].evolution_details.location.name}` : null}\r\n                                            {pokeEvolutionChain[6].evolution_details.min_affection ? ` when affection is atleast ${pokeEvolutionChain[6].evolution_details.min_affection}` : null}\r\n                                            {pokeEvolutionChain[6].evolution_details.min_beauty ? ` when beauty is atleast ${pokeEvolutionChain[6].evolution_details.min_beauty}` : null}\r\n                                            {pokeEvolutionChain[6].evolution_details.min_happiness ? ` when happiness is atleast ${pokeEvolutionChain[6].evolution_details.min_happiness}` : null}\r\n                                            {pokeEvolutionChain[6].evolution_details.min_level ? ` at level ${pokeEvolutionChain[6].evolution_details.min_level}` : null}\r\n                                            {pokeEvolutionChain[6].evolution_details.needs_overworld_rain ? ` when raining` : null}\r\n                                            {pokeEvolutionChain[6].evolution_details.party_species ? ` with ${pokeEvolutionChain[6].evolution_details.party_species.name} in party` : null}\r\n                                            {pokeEvolutionChain[6].evolution_details.party_type ? ` with ${pokeEvolutionChain[6].evolution_details.party_type.name} type pokemon in party` : null}\r\n                                            {pokeEvolutionChain[6].evolution_details.time_of_day ? ` at ${pokeEvolutionChain[6].evolution_details.time_of_day} ` : null}\r\n                                            {pokeEvolutionChain[6].evolution_details.trade_species ? ` with ${pokeEvolutionChain[6].evolution_details.trade_species.name} ` : null}\r\n                                            </Typography></div>)\r\n                                        }\r\n                                        </Grid>\r\n                                        <Grid container item xs={4} justify=\"center\">\r\n                                        {\r\n                                            (<div style={{ textAlign: 'center'}}><Arrow style={{transform: 'rotateZ(-270deg)'}} /> <Typography>{pokeEvolutionChain[7].evolution_details.trigger.name} \r\n                                            {(pokeEvolutionChain[7].evolution_details.gender === 1) ? ` female` : (pokeEvolutionChain[7].evolution_details.gender === 2) ? ` male` : null}\r\n                                            {pokeEvolutionChain[7].evolution_details.item ? `  ${pokeEvolutionChain[7].evolution_details.item.name}` : null}\r\n                                            {pokeEvolutionChain[7].evolution_details.held_item ? ` while holding ${pokeEvolutionChain[7].evolution_details.held_item.name}` : null}\r\n                                            {(pokeEvolutionChain[7].evolution_details.known_move) ? ` while knowing ${pokeEvolutionChain[7].evolution_details.known_move.name}` : null}\r\n                                            {(pokeEvolutionChain[7].evolution_details.known_move_type) ? ` while knowing a ${pokeEvolutionChain[7].evolution_details.known_move_type.name} type move` : null}\r\n                                            {pokeEvolutionChain[7].evolution_details.location ? ` at ${pokeEvolutionChain[7].evolution_details.location.name}` : null}\r\n                                            {pokeEvolutionChain[7].evolution_details.min_affection ? ` when affection is atleast ${pokeEvolutionChain[7].evolution_details.min_affection}` : null}\r\n                                            {pokeEvolutionChain[7].evolution_details.min_beauty ? ` when beauty is atleast ${pokeEvolutionChain[7].evolution_details.min_beauty}` : null}\r\n                                            {pokeEvolutionChain[7].evolution_details.min_happiness ? ` when happiness is atleast ${pokeEvolutionChain[7].evolution_details.min_happiness}` : null}\r\n                                            {pokeEvolutionChain[7].evolution_details.min_level ? ` at level ${pokeEvolutionChain[7].evolution_details.min_level}` : null}\r\n                                            {pokeEvolutionChain[7].evolution_details.needs_overworld_rain ? ` when raining` : null}\r\n                                            {pokeEvolutionChain[7].evolution_details.party_species ? ` with ${pokeEvolutionChain[7].evolution_details.party_species.name} in party` : null}\r\n                                            {pokeEvolutionChain[7].evolution_details.party_type ? ` with ${pokeEvolutionChain[7].evolution_details.party_type.name} type pokemon in party` : null}\r\n                                            {pokeEvolutionChain[7].evolution_details.time_of_day ? ` at ${pokeEvolutionChain[7].evolution_details.time_of_day} ` : null}\r\n                                            {pokeEvolutionChain[7].evolution_details.trade_species ? ` with ${pokeEvolutionChain[7].evolution_details.trade_species.name} ` : null}\r\n                                            </Typography></div>)\r\n                                        }\r\n                                        </Grid>\r\n                                        <Grid container item xs={4} justify=\"center\">\r\n                                        {\r\n                                            (<div style={{ textAlign: 'center'}}><Arrow style={{transform: 'rotateZ(45deg)'}} /> <Typography>{pokeEvolutionChain[8].evolution_details.trigger.name} \r\n                                            {(pokeEvolutionChain[8].evolution_details.gender === 1) ? ` female` : (pokeEvolutionChain[8].evolution_details.gender === 2) ? ` male` : null}\r\n                                            {pokeEvolutionChain[8].evolution_details.item ? `  ${pokeEvolutionChain[8].evolution_details.item.name}` : null}\r\n                                            {pokeEvolutionChain[8].evolution_details.held_item ? ` while holding ${pokeEvolutionChain[8].evolution_details.held_item.name}` : null}\r\n                                            {(pokeEvolutionChain[8].evolution_details.known_move) ? ` while knowing ${pokeEvolutionChain[8].evolution_details.known_move.name}` : null}\r\n                                            {(pokeEvolutionChain[8].evolution_details.known_move_type) ? ` while knowing a ${pokeEvolutionChain[8].evolution_details.known_move_type.name} type move` : null}\r\n                                            {pokeEvolutionChain[8].evolution_details.location ? ` at ${pokeEvolutionChain[8].evolution_details.location.name}` : null}\r\n                                            {pokeEvolutionChain[8].evolution_details.min_affection ? ` when affection is atleast ${pokeEvolutionChain[8].evolution_details.min_affection}` : null}\r\n                                            {pokeEvolutionChain[8].evolution_details.min_beauty ? ` when beauty is atleast ${pokeEvolutionChain[8].evolution_details.min_beauty}` : null}\r\n                                            {pokeEvolutionChain[8].evolution_details.min_happiness ? ` when happiness is atleast ${pokeEvolutionChain[8].evolution_details.min_happiness}` : null}\r\n                                            {pokeEvolutionChain[8].evolution_details.min_level ? ` at level ${pokeEvolutionChain[8].evolution_details.min_level}` : null}\r\n                                            {pokeEvolutionChain[8].evolution_details.needs_overworld_rain ? ` when raining` : null}\r\n                                            {pokeEvolutionChain[8].evolution_details.party_species ? ` with ${pokeEvolutionChain[8].evolution_details.party_species.name} in party` : null}\r\n                                            {pokeEvolutionChain[8].evolution_details.party_type ? ` with ${pokeEvolutionChain[8].evolution_details.party_type.name} type pokemon in party` : null}\r\n                                            {pokeEvolutionChain[8].evolution_details.time_of_day ? ` at ${pokeEvolutionChain[8].evolution_details.time_of_day} ` : null}\r\n                                            {pokeEvolutionChain[8].evolution_details.trade_species ? ` with ${pokeEvolutionChain[8].evolution_details.trade_species.name} ` : null}\r\n                                            </Typography></div>)\r\n                                        }\r\n                                        </Grid>\r\n\r\n                                    </Grid>\r\n                                    <Grid container item xs={3} justify=\"center\"> {/* second row element */}\r\n                                        <Grid container item xs={10} justify=\"center\" key={23} onClick={() => pokeSelectorHandler(pokeEvolutionChain[5].species_name)}>\r\n                                            <Card className={classes.card}>\r\n                                                <CardActionArea className={classes.pokemonButton}>\r\n                                                <CardMedia\r\n                                                    component=\"img\"\r\n                                                    alt={pokeEvolutionChain[5].species_name}\r\n                                                    height=\"140\"\r\n                                                    image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[5].id}.png`}\r\n                                                    title={pokeEvolutionChain[5].species_name}\r\n                                                    className={classes.pokemonImg}\r\n                                                />\r\n                                                <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                                                    <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                                    {pokeEvolutionChain[5].species_name}\r\n                                                    </Typography>\r\n                                                </CardContent>\r\n                                                </CardActionArea>\r\n                                            </Card>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid container xs={9}> {/* Main 3rd Row */}\r\n                                    <Grid container item xs={4} justify=\"center\"> {/* third row element */}\r\n                                        <Grid container item xs={8} justify=\"center\" key={31} onClick={() => pokeSelectorHandler(pokeEvolutionChain[6].species_name)}>\r\n                                            <Card className={classes.card}>\r\n                                                <CardActionArea className={classes.pokemonButton}>\r\n                                                <CardMedia\r\n                                                    component=\"img\"\r\n                                                    alt={pokeEvolutionChain[6].species_name}\r\n                                                    height=\"140\"\r\n                                                    image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[6].id}.png`}\r\n                                                    title={pokeEvolutionChain[6].species_name}\r\n                                                    className={classes.pokemonImg}\r\n                                                />\r\n                                                <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                                                    <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                                    {pokeEvolutionChain[6].species_name}\r\n                                                    </Typography>\r\n                                                </CardContent>\r\n                                                </CardActionArea>\r\n                                            </Card>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container item xs={4} justify=\"center\"> {/* third row element */}\r\n                                        <Grid container item xs={8} justify=\"center\" key={32} onClick={() => pokeSelectorHandler(pokeEvolutionChain[7].species_name)}>\r\n                                            <Card className={classes.card}>\r\n                                                <CardActionArea className={classes.pokemonButton}>\r\n                                                <CardMedia\r\n                                                    component=\"img\"\r\n                                                    alt={pokeEvolutionChain[7].species_name}\r\n                                                    height=\"140\"\r\n                                                    image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[7].id}.png`}\r\n                                                    title={pokeEvolutionChain[7].species_name}\r\n                                                    className={classes.pokemonImg}\r\n                                                />\r\n                                                <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                                                    <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                                    {pokeEvolutionChain[7].species_name}\r\n                                                    </Typography>\r\n                                                </CardContent>\r\n                                                </CardActionArea>\r\n                                            </Card>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container item xs={4} justify=\"center\"> {/* third row element */}\r\n                                        <Grid container item xs={8} justify=\"center\" key={33} onClick={() => pokeSelectorHandler(pokeEvolutionChain[8].species_name)}>\r\n                                            <Card className={classes.card}>\r\n                                                <CardActionArea className={classes.pokemonButton}>\r\n                                                <CardMedia\r\n                                                    component=\"img\"\r\n                                                    alt={pokeEvolutionChain[8].species_name}\r\n                                                    height=\"140\"\r\n                                                    image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[8].id}.png`}\r\n                                                    title={pokeEvolutionChain[8].species_name}\r\n                                                    className={classes.pokemonImg}\r\n                                                />\r\n                                                <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                                                    <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                                    {pokeEvolutionChain[8].species_name}\r\n                                                    </Typography>\r\n                                                </CardContent>\r\n                                                </CardActionArea>\r\n                                            </Card>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                            </Grid>\r\n                            \r\n                          </React.Fragment>\r\n                      ) : null\r\n                  }\r\n              </React.Fragment>\r\n          );\r\n        })\r\n      }\r\n    </Grid>\r\n    </Hidden>\r\n    <Hidden mdUp>\r\n        <Grid container item xs={12} sm={10} justify=\"center\" flexDirection=\"column\"> {/* Starting of mobile layout */}\r\n            <Grid container item xs={4} justify=\"center\" style={{alignItems: 'center'}}>\r\n                {/* first column */}\r\n                <Grid container item xs={12} justify=\"center\" key={props.key}  onClick={() => pokeSelectorHandler(pokeEvolutionChain[0].species_name)}>\r\n                    <Card className={classes.card}>\r\n                        <CardActionArea className={classes.pokemonButton}>\r\n                            <CardMedia\r\n                                                        component=\"img\"\r\n                                                        alt={pokeEvolutionChain[0].species_name}\r\n                                                        height=\"140\"\r\n                                                        image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[0].id}.png`}\r\n                                                        title={pokeEvolutionChain[0].species_name}\r\n                                                        className={classes.pokemonImg}\r\n                                                    />\r\n                                                    <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                                                        <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                                                        {pokeEvolutionChain[0].species_name}\r\n                                                        </Typography>\r\n                                                    </CardContent>\r\n                                                    </CardActionArea>\r\n                                                </Card>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container item xs={4} justify=\"center\" style={{alignItems: 'center'}}>\r\n                {/* second column */}\r\n                <Grid container item xs={12} justify=\"center\" className={classes.arrowGrid}>\r\n                {\r\n                    (<div style={{ textAlign: 'center'}}><Arrow  /> <Typography>{pokeEvolutionChain[1].evolution_details.trigger.name} \r\n                    {(pokeEvolutionChain[1].evolution_details.gender === 1) ? ` female` : (pokeEvolutionChain[1].evolution_details.gender === 2) ? ` male` : null}\r\n                    {pokeEvolutionChain[1].evolution_details.item ? `  ${pokeEvolutionChain[1].evolution_details.item.name}` : null}\r\n                    {pokeEvolutionChain[1].evolution_details.held_item ? ` while holding ${pokeEvolutionChain[1].evolution_details.held_item.name}` : null}\r\n                    {(pokeEvolutionChain[1].evolution_details.known_move) ? ` while knowing ${pokeEvolutionChain[1].evolution_details.known_move.name}` : null}\r\n                    {(pokeEvolutionChain[1].evolution_details.known_move_type) ? ` while knowing a ${pokeEvolutionChain[1].evolution_details.known_move_type.name} type move` : null}\r\n                    {pokeEvolutionChain[1].evolution_details.location ? ` at ${pokeEvolutionChain[1].evolution_details.location.name}` : null}\r\n                    {pokeEvolutionChain[1].evolution_details.min_affection ? ` when affection is atleast ${pokeEvolutionChain[1].evolution_details.min_affection}` : null}\r\n                    {pokeEvolutionChain[1].evolution_details.min_beauty ? ` when beauty is atleast ${pokeEvolutionChain[1].evolution_details.min_beauty}` : null}\r\n                    {pokeEvolutionChain[1].evolution_details.min_happiness ? ` when happiness is atleast ${pokeEvolutionChain[1].evolution_details.min_happiness}` : null}\r\n                    {pokeEvolutionChain[1].evolution_details.min_level ? ` at level ${pokeEvolutionChain[1].evolution_details.min_level}` : null}\r\n                    {pokeEvolutionChain[1].evolution_details.needs_overworld_rain ? ` when raining` : null}\r\n                    {pokeEvolutionChain[1].evolution_details.party_species ? ` with ${pokeEvolutionChain[1].evolution_details.party_species.name} in party` : null}\r\n                    {pokeEvolutionChain[1].evolution_details.party_type ? ` with ${pokeEvolutionChain[1].evolution_details.party_type.name} type pokemon in party` : null}\r\n                    {pokeEvolutionChain[1].evolution_details.time_of_day ? ` at ${pokeEvolutionChain[1].evolution_details.time_of_day} ` : null}\r\n                    {pokeEvolutionChain[1].evolution_details.trade_species ? ` with ${pokeEvolutionChain[1].evolution_details.trade_species.name} ` : null}\r\n                    </Typography></div>)\r\n                }\r\n                </Grid>\r\n                <Grid container item xs={12} justify=\"center\" className={classes.arrowGrid}>\r\n                                        {\r\n                                            (<div style={{ textAlign: 'center'}}><Arrow  /> <Typography>{pokeEvolutionChain[2].evolution_details.trigger.name} \r\n                                            {(pokeEvolutionChain[2].evolution_details.gender === 1) ? ` female` : (pokeEvolutionChain[2].evolution_details.gender === 2) ? ` male` : null}\r\n                                            {pokeEvolutionChain[2].evolution_details.item ? `  ${pokeEvolutionChain[2].evolution_details.item.name}` : null}\r\n                                            {pokeEvolutionChain[2].evolution_details.held_item ? ` while holding ${pokeEvolutionChain[2].evolution_details.held_item.name}` : null}\r\n                                            {(pokeEvolutionChain[2].evolution_details.known_move) ? ` while knowing ${pokeEvolutionChain[2].evolution_details.known_move.name}` : null}\r\n                                            {(pokeEvolutionChain[2].evolution_details.known_move_type) ? ` while knowing a ${pokeEvolutionChain[2].evolution_details.known_move_type.name} type move` : null}\r\n                                            {pokeEvolutionChain[2].evolution_details.location ? ` at ${pokeEvolutionChain[2].evolution_details.location.name}` : null}\r\n                                            {pokeEvolutionChain[2].evolution_details.min_affection ? ` when affection is atleast ${pokeEvolutionChain[2].evolution_details.min_affection}` : null}\r\n                                            {pokeEvolutionChain[2].evolution_details.min_beauty ? ` when beauty is atleast ${pokeEvolutionChain[2].evolution_details.min_beauty}` : null}\r\n                                            {pokeEvolutionChain[2].evolution_details.min_happiness ? ` when happiness is atleast ${pokeEvolutionChain[2].evolution_details.min_happiness}` : null}\r\n                                            {pokeEvolutionChain[2].evolution_details.min_level ? ` at level ${pokeEvolutionChain[2].evolution_details.min_level}` : null}\r\n                                            {pokeEvolutionChain[2].evolution_details.needs_overworld_rain ? ` when raining` : null}\r\n                                            {pokeEvolutionChain[2].evolution_details.party_species ? ` with ${pokeEvolutionChain[2].evolution_details.party_species.name} in party` : null}\r\n                                            {pokeEvolutionChain[2].evolution_details.party_type ? ` with ${pokeEvolutionChain[2].evolution_details.party_type.name} type pokemon in party` : null}\r\n                                            {pokeEvolutionChain[2].evolution_details.time_of_day ? ` at ${pokeEvolutionChain[2].evolution_details.time_of_day} ` : null}\r\n                                            {pokeEvolutionChain[2].evolution_details.trade_species ? ` with ${pokeEvolutionChain[2].evolution_details.trade_species.name} ` : null}\r\n                                            </Typography></div>)\r\n                                        }\r\n                                        </Grid>\r\n                                        <Grid container item xs={12} justify=\"center\" className={classes.arrowGrid}>\r\n                                        {\r\n                                            (<div style={{ textAlign: 'center'}}><Arrow  /> <Typography>{pokeEvolutionChain[3].evolution_details.trigger.name} \r\n                                            {(pokeEvolutionChain[3].evolution_details.gender === 1) ? ` female` : (pokeEvolutionChain[3].evolution_details.gender === 2) ? ` male` : null}\r\n                                            {pokeEvolutionChain[3].evolution_details.item ? `  ${pokeEvolutionChain[3].evolution_details.item.name}` : null}\r\n                                            {pokeEvolutionChain[3].evolution_details.held_item ? ` while holding ${pokeEvolutionChain[3].evolution_details.held_item.name}` : null}\r\n                                            {(pokeEvolutionChain[3].evolution_details.known_move) ? ` while knowing ${pokeEvolutionChain[3].evolution_details.known_move.name}` : null}\r\n                                            {(pokeEvolutionChain[3].evolution_details.known_move_type) ? ` while knowing a ${pokeEvolutionChain[3].evolution_details.known_move_type.name} type move` : null}\r\n                                            {pokeEvolutionChain[3].evolution_details.location ? ` at ${pokeEvolutionChain[3].evolution_details.location.name}` : null}\r\n                                            {pokeEvolutionChain[3].evolution_details.min_affection ? ` when affection is atleast ${pokeEvolutionChain[3].evolution_details.min_affection}` : null}\r\n                                            {pokeEvolutionChain[3].evolution_details.min_beauty ? ` when beauty is atleast ${pokeEvolutionChain[3].evolution_details.min_beauty}` : null}\r\n                                            {pokeEvolutionChain[3].evolution_details.min_happiness ? ` when happiness is atleast ${pokeEvolutionChain[3].evolution_details.min_happiness}` : null}\r\n                                            {pokeEvolutionChain[3].evolution_details.min_level ? ` at level ${pokeEvolutionChain[3].evolution_details.min_level}` : null}\r\n                                            {pokeEvolutionChain[3].evolution_details.needs_overworld_rain ? ` when raining` : null}\r\n                                            {pokeEvolutionChain[3].evolution_details.party_species ? ` with ${pokeEvolutionChain[3].evolution_details.party_species.name} in party` : null}\r\n                                            {pokeEvolutionChain[3].evolution_details.party_type ? ` with ${pokeEvolutionChain[3].evolution_details.party_type.name} type pokemon in party` : null}\r\n                                            {pokeEvolutionChain[3].evolution_details.time_of_day ? ` at ${pokeEvolutionChain[3].evolution_details.time_of_day} ` : null}\r\n                                            {pokeEvolutionChain[3].evolution_details.trade_species ? ` with ${pokeEvolutionChain[3].evolution_details.trade_species.name} ` : null}\r\n                                            </Typography></div>)\r\n                                        }\r\n                                        </Grid>\r\n                                        <Grid container item xs={12} justify=\"center\" className={classes.arrowGrid}>\r\n                                        {\r\n                                            (<div style={{ textAlign: 'center'}}><Arrow  /> <Typography>{pokeEvolutionChain[4].evolution_details.trigger.name} \r\n                                            {(pokeEvolutionChain[4].evolution_details.gender === 1) ? ` female` : (pokeEvolutionChain[4].evolution_details.gender === 2) ? ` male` : null}\r\n                                            {pokeEvolutionChain[4].evolution_details.item ? `  ${pokeEvolutionChain[4].evolution_details.item.name}` : null}\r\n                                            {pokeEvolutionChain[4].evolution_details.held_item ? ` while holding ${pokeEvolutionChain[4].evolution_details.held_item.name}` : null}\r\n                                            {(pokeEvolutionChain[4].evolution_details.known_move) ? ` while knowing ${pokeEvolutionChain[4].evolution_details.known_move.name}` : null}\r\n                                            {(pokeEvolutionChain[4].evolution_details.known_move_type) ? ` while knowing a ${pokeEvolutionChain[4].evolution_details.known_move_type.name} type move` : null}\r\n                                            {pokeEvolutionChain[4].evolution_details.location ? ` at ${pokeEvolutionChain[4].evolution_details.location.name}` : null}\r\n                                            {pokeEvolutionChain[4].evolution_details.min_affection ? ` when affection is atleast ${pokeEvolutionChain[4].evolution_details.min_affection}` : null}\r\n                                            {pokeEvolutionChain[4].evolution_details.min_beauty ? ` when beauty is atleast ${pokeEvolutionChain[4].evolution_details.min_beauty}` : null}\r\n                                            {pokeEvolutionChain[4].evolution_details.min_happiness ? ` when happiness is atleast ${pokeEvolutionChain[4].evolution_details.min_happiness}` : null}\r\n                                            {pokeEvolutionChain[4].evolution_details.min_level ? ` at level ${pokeEvolutionChain[4].evolution_details.min_level}` : null}\r\n                                            {pokeEvolutionChain[4].evolution_details.needs_overworld_rain ? ` when raining` : null}\r\n                                            {pokeEvolutionChain[4].evolution_details.party_species ? ` with ${pokeEvolutionChain[4].evolution_details.party_species.name} in party` : null}\r\n                                            {pokeEvolutionChain[4].evolution_details.party_type ? ` with ${pokeEvolutionChain[4].evolution_details.party_type.name} type pokemon in party` : null}\r\n                                            {pokeEvolutionChain[4].evolution_details.time_of_day ? ` at ${pokeEvolutionChain[4].evolution_details.time_of_day} ` : null}\r\n                                            {pokeEvolutionChain[4].evolution_details.trade_species ? ` with ${pokeEvolutionChain[4].evolution_details.trade_species.name} ` : null}\r\n                                            </Typography></div>)\r\n                                        }\r\n                                        </Grid>\r\n                                        <Grid container item xs={12} justify=\"center\" className={classes.arrowGrid}>\r\n                                        {\r\n                                            (<div style={{ textAlign: 'center'}}><Arrow  /> <Typography>{pokeEvolutionChain[5].evolution_details.trigger.name} \r\n                                            {(pokeEvolutionChain[5].evolution_details.gender === 1) ? ` female` : (pokeEvolutionChain[5].evolution_details.gender === 2) ? ` male` : null}\r\n                                            {pokeEvolutionChain[5].evolution_details.item ? `  ${pokeEvolutionChain[5].evolution_details.item.name}` : null}\r\n                                            {pokeEvolutionChain[5].evolution_details.held_item ? ` while holding ${pokeEvolutionChain[5].evolution_details.held_item.name}` : null}\r\n                                            {(pokeEvolutionChain[5].evolution_details.known_move) ? ` while knowing ${pokeEvolutionChain[5].evolution_details.known_move.name}` : null}\r\n                                            {(pokeEvolutionChain[5].evolution_details.known_move_type) ? ` while knowing a ${pokeEvolutionChain[5].evolution_details.known_move_type.name} type move` : null}\r\n                                            {pokeEvolutionChain[5].evolution_details.location ? ` at ${pokeEvolutionChain[5].evolution_details.location.name}` : null}\r\n                                            {pokeEvolutionChain[5].evolution_details.min_affection ? ` when affection is atleast ${pokeEvolutionChain[5].evolution_details.min_affection}` : null}\r\n                                            {pokeEvolutionChain[5].evolution_details.min_beauty ? ` when beauty is atleast ${pokeEvolutionChain[5].evolution_details.min_beauty}` : null}\r\n                                            {pokeEvolutionChain[5].evolution_details.min_happiness ? ` when happiness is atleast ${pokeEvolutionChain[5].evolution_details.min_happiness}` : null}\r\n                                            {pokeEvolutionChain[5].evolution_details.min_level ? ` at level ${pokeEvolutionChain[5].evolution_details.min_level}` : null}\r\n                                            {pokeEvolutionChain[5].evolution_details.needs_overworld_rain ? ` when raining` : null}\r\n                                            {pokeEvolutionChain[5].evolution_details.party_species ? ` with ${pokeEvolutionChain[5].evolution_details.party_species.name} in party` : null}\r\n                                            {pokeEvolutionChain[5].evolution_details.party_type ? ` with ${pokeEvolutionChain[5].evolution_details.party_type.name} type pokemon in party` : null}\r\n                                            {pokeEvolutionChain[5].evolution_details.time_of_day ? ` at ${pokeEvolutionChain[5].evolution_details.time_of_day} ` : null}\r\n                                            {pokeEvolutionChain[5].evolution_details.trade_species ? ` with ${pokeEvolutionChain[5].evolution_details.trade_species.name} ` : null}\r\n                                            </Typography></div>)\r\n                                        }\r\n                                        </Grid>\r\n                                        <Grid container item xs={12} justify=\"center\" className={classes.arrowGrid}>\r\n                                        {\r\n                                            (<div style={{ textAlign: 'center'}}><Arrow /> <Typography>{pokeEvolutionChain[6].evolution_details.trigger.name} \r\n                                            {(pokeEvolutionChain[6].evolution_details.gender === 1) ? ` female` : (pokeEvolutionChain[6].evolution_details.gender === 2) ? ` male` : null}\r\n                                            {pokeEvolutionChain[6].evolution_details.item ? `  ${pokeEvolutionChain[6].evolution_details.item.name}` : null}\r\n                                            {pokeEvolutionChain[6].evolution_details.held_item ? ` while holding ${pokeEvolutionChain[6].evolution_details.held_item.name}` : null}\r\n                                            {(pokeEvolutionChain[6].evolution_details.known_move) ? ` while knowing ${pokeEvolutionChain[6].evolution_details.known_move.name}` : null}\r\n                                            {(pokeEvolutionChain[6].evolution_details.known_move_type) ? ` while knowing a ${pokeEvolutionChain[6].evolution_details.known_move_type.name} type move` : null}\r\n                                            {pokeEvolutionChain[6].evolution_details.location ? ` at ${pokeEvolutionChain[6].evolution_details.location.name}` : null}\r\n                                            {pokeEvolutionChain[6].evolution_details.min_affection ? ` when affection is atleast ${pokeEvolutionChain[6].evolution_details.min_affection}` : null}\r\n                                            {pokeEvolutionChain[6].evolution_details.min_beauty ? ` when beauty is atleast ${pokeEvolutionChain[6].evolution_details.min_beauty}` : null}\r\n                                            {pokeEvolutionChain[6].evolution_details.min_happiness ? ` when happiness is atleast ${pokeEvolutionChain[6].evolution_details.min_happiness}` : null}\r\n                                            {pokeEvolutionChain[6].evolution_details.min_level ? ` at level ${pokeEvolutionChain[6].evolution_details.min_level}` : null}\r\n                                            {pokeEvolutionChain[6].evolution_details.needs_overworld_rain ? ` when raining` : null}\r\n                                            {pokeEvolutionChain[6].evolution_details.party_species ? ` with ${pokeEvolutionChain[6].evolution_details.party_species.name} in party` : null}\r\n                                            {pokeEvolutionChain[6].evolution_details.party_type ? ` with ${pokeEvolutionChain[6].evolution_details.party_type.name} type pokemon in party` : null}\r\n                                            {pokeEvolutionChain[6].evolution_details.time_of_day ? ` at ${pokeEvolutionChain[6].evolution_details.time_of_day} ` : null}\r\n                                            {pokeEvolutionChain[6].evolution_details.trade_species ? ` with ${pokeEvolutionChain[6].evolution_details.trade_species.name} ` : null}\r\n                                            </Typography></div>)\r\n                                        }\r\n                                        </Grid>\r\n                                        <Grid container item xs={12} justify=\"center\" className={classes.arrowGrid}>\r\n                                        {\r\n                                            (<div style={{ textAlign: 'center'}}><Arrow  /> <Typography>{pokeEvolutionChain[7].evolution_details.trigger.name} \r\n                                            {(pokeEvolutionChain[7].evolution_details.gender === 1) ? ` female` : (pokeEvolutionChain[7].evolution_details.gender === 2) ? ` male` : null}\r\n                                            {pokeEvolutionChain[7].evolution_details.item ? `  ${pokeEvolutionChain[7].evolution_details.item.name}` : null}\r\n                                            {pokeEvolutionChain[7].evolution_details.held_item ? ` while holding ${pokeEvolutionChain[7].evolution_details.held_item.name}` : null}\r\n                                            {(pokeEvolutionChain[7].evolution_details.known_move) ? ` while knowing ${pokeEvolutionChain[7].evolution_details.known_move.name}` : null}\r\n                                            {(pokeEvolutionChain[7].evolution_details.known_move_type) ? ` while knowing a ${pokeEvolutionChain[7].evolution_details.known_move_type.name} type move` : null}\r\n                                            {pokeEvolutionChain[7].evolution_details.location ? ` at ${pokeEvolutionChain[7].evolution_details.location.name}` : null}\r\n                                            {pokeEvolutionChain[7].evolution_details.min_affection ? ` when affection is atleast ${pokeEvolutionChain[7].evolution_details.min_affection}` : null}\r\n                                            {pokeEvolutionChain[7].evolution_details.min_beauty ? ` when beauty is atleast ${pokeEvolutionChain[7].evolution_details.min_beauty}` : null}\r\n                                            {pokeEvolutionChain[7].evolution_details.min_happiness ? ` when happiness is atleast ${pokeEvolutionChain[7].evolution_details.min_happiness}` : null}\r\n                                            {pokeEvolutionChain[7].evolution_details.min_level ? ` at level ${pokeEvolutionChain[7].evolution_details.min_level}` : null}\r\n                                            {pokeEvolutionChain[7].evolution_details.needs_overworld_rain ? ` when raining` : null}\r\n                                            {pokeEvolutionChain[7].evolution_details.party_species ? ` with ${pokeEvolutionChain[7].evolution_details.party_species.name} in party` : null}\r\n                                            {pokeEvolutionChain[7].evolution_details.party_type ? ` with ${pokeEvolutionChain[7].evolution_details.party_type.name} type pokemon in party` : null}\r\n                                            {pokeEvolutionChain[7].evolution_details.time_of_day ? ` at ${pokeEvolutionChain[7].evolution_details.time_of_day} ` : null}\r\n                                            {pokeEvolutionChain[7].evolution_details.trade_species ? ` with ${pokeEvolutionChain[7].evolution_details.trade_species.name} ` : null}\r\n                                            </Typography></div>)\r\n                                        }\r\n                                        </Grid>\r\n                                        <Grid container item xs={12} justify=\"center\" className={classes.arrowGrid}>\r\n                                        {\r\n                                            (<div style={{ textAlign: 'center'}}><Arrow  /> <Typography>{pokeEvolutionChain[8].evolution_details.trigger.name} \r\n                                            {(pokeEvolutionChain[8].evolution_details.gender === 1) ? ` female` : (pokeEvolutionChain[8].evolution_details.gender === 2) ? ` male` : null}\r\n                                            {pokeEvolutionChain[8].evolution_details.item ? `  ${pokeEvolutionChain[8].evolution_details.item.name}` : null}\r\n                                            {pokeEvolutionChain[8].evolution_details.held_item ? ` while holding ${pokeEvolutionChain[8].evolution_details.held_item.name}` : null}\r\n                                            {(pokeEvolutionChain[8].evolution_details.known_move) ? ` while knowing ${pokeEvolutionChain[8].evolution_details.known_move.name}` : null}\r\n                                            {(pokeEvolutionChain[8].evolution_details.known_move_type) ? ` while knowing a ${pokeEvolutionChain[8].evolution_details.known_move_type.name} type move` : null}\r\n                                            {pokeEvolutionChain[8].evolution_details.location ? ` at ${pokeEvolutionChain[8].evolution_details.location.name}` : null}\r\n                                            {pokeEvolutionChain[8].evolution_details.min_affection ? ` when affection is atleast ${pokeEvolutionChain[8].evolution_details.min_affection}` : null}\r\n                                            {pokeEvolutionChain[8].evolution_details.min_beauty ? ` when beauty is atleast ${pokeEvolutionChain[8].evolution_details.min_beauty}` : null}\r\n                                            {pokeEvolutionChain[8].evolution_details.min_happiness ? ` when happiness is atleast ${pokeEvolutionChain[8].evolution_details.min_happiness}` : null}\r\n                                            {pokeEvolutionChain[8].evolution_details.min_level ? ` at level ${pokeEvolutionChain[8].evolution_details.min_level}` : null}\r\n                                            {pokeEvolutionChain[8].evolution_details.needs_overworld_rain ? ` when raining` : null}\r\n                                            {pokeEvolutionChain[8].evolution_details.party_species ? ` with ${pokeEvolutionChain[8].evolution_details.party_species.name} in party` : null}\r\n                                            {pokeEvolutionChain[8].evolution_details.party_type ? ` with ${pokeEvolutionChain[8].evolution_details.party_type.name} type pokemon in party` : null}\r\n                                            {pokeEvolutionChain[8].evolution_details.time_of_day ? ` at ${pokeEvolutionChain[8].evolution_details.time_of_day} ` : null}\r\n                                            {pokeEvolutionChain[8].evolution_details.trade_species ? ` with ${pokeEvolutionChain[8].evolution_details.trade_species.name} ` : null}\r\n                                            </Typography></div>)\r\n                                        }\r\n                                        </Grid>\r\n            </Grid> {/* second column end  */}\r\n            <Grid container item xs={4} justify=\"center\">\r\n                {/* third column  */}\r\n                <Grid container item xs={12} justify=\"center\"  onClick={() => pokeSelectorHandler(pokeEvolutionChain[1].species_name)}>\r\n                    <Card className={classes.card}>\r\n                        <CardActionArea className={classes.pokemonButton}>\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt={pokeEvolutionChain[1].species_name}\r\n                            height=\"140\"\r\n                            image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[1].id}.png`}\r\n                            title={pokeEvolutionChain[1].species_name}\r\n                            className={classes.pokemonImg}\r\n                        />\r\n                        <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                            <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                            {pokeEvolutionChain[1].species_name}\r\n                            </Typography>\r\n                        </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid container item xs={12} justify=\"center\"  onClick={() => pokeSelectorHandler(pokeEvolutionChain[2].species_name)}>\r\n                    <Card className={classes.card}>\r\n                        <CardActionArea className={classes.pokemonButton}>\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt={pokeEvolutionChain[2].species_name}\r\n                            height=\"140\"\r\n                            image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[2].id}.png`}\r\n                            title={pokeEvolutionChain[2].species_name}\r\n                            className={classes.pokemonImg}\r\n                        />\r\n                        <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                            <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                            {pokeEvolutionChain[2].species_name}\r\n                            </Typography>\r\n                        </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid container item xs={12} justify=\"center\"  onClick={() => pokeSelectorHandler(pokeEvolutionChain[3].species_name)}>\r\n                    <Card className={classes.card}>\r\n                        <CardActionArea className={classes.pokemonButton}>\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt={pokeEvolutionChain[3].species_name}\r\n                            height=\"140\"\r\n                            image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[3].id}.png`}\r\n                            title={pokeEvolutionChain[3].species_name}\r\n                            className={classes.pokemonImg}\r\n                        />\r\n                        <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                            <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                            {pokeEvolutionChain[3].species_name}\r\n                            </Typography>\r\n                        </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid container item xs={12} justify=\"center\"  onClick={() => pokeSelectorHandler(pokeEvolutionChain[4].species_name)}>\r\n                    <Card className={classes.card}>\r\n                        <CardActionArea className={classes.pokemonButton}>\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt={pokeEvolutionChain[4].species_name}\r\n                            height=\"140\"\r\n                            image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[4].id}.png`}\r\n                            title={pokeEvolutionChain[4].species_name}\r\n                            className={classes.pokemonImg}\r\n                        />\r\n                        <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                            <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                            {pokeEvolutionChain[4].species_name}\r\n                            </Typography>\r\n                        </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid container item xs={12} justify=\"center\"  onClick={() => pokeSelectorHandler(pokeEvolutionChain[5].species_name)}>\r\n                    <Card className={classes.card}>\r\n                        <CardActionArea className={classes.pokemonButton}>\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt={pokeEvolutionChain[5].species_name}\r\n                            height=\"140\"\r\n                            image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[5].id}.png`}\r\n                            title={pokeEvolutionChain[5].species_name}\r\n                            className={classes.pokemonImg}\r\n                        />\r\n                        <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                            <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                            {pokeEvolutionChain[5].species_name}\r\n                            </Typography>\r\n                        </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid container item xs={12} justify=\"center\"  onClick={() => pokeSelectorHandler(pokeEvolutionChain[6].species_name)}>\r\n                    <Card className={classes.card}>\r\n                        <CardActionArea className={classes.pokemonButton}>\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt={pokeEvolutionChain[6].species_name}\r\n                            height=\"140\"\r\n                            image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[6].id}.png`}\r\n                            title={pokeEvolutionChain[6].species_name}\r\n                            className={classes.pokemonImg}\r\n                        />\r\n                        <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                            <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                            {pokeEvolutionChain[6].species_name}\r\n                            </Typography>\r\n                        </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid container item xs={12} justify=\"center\"  onClick={() => pokeSelectorHandler(pokeEvolutionChain[7].species_name)}>\r\n                    <Card className={classes.card}>\r\n                        <CardActionArea className={classes.pokemonButton}>\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt={pokeEvolutionChain[7].species_name}\r\n                            height=\"140\"\r\n                            image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[7].id}.png`}\r\n                            title={pokeEvolutionChain[7].species_name}\r\n                            className={classes.pokemonImg}\r\n                        />\r\n                        <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                            <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                            {pokeEvolutionChain[7].species_name}\r\n                            </Typography>\r\n                        </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid container item xs={12} justify=\"center\"  onClick={() => pokeSelectorHandler(pokeEvolutionChain[8].species_name)}>\r\n                    <Card className={classes.card}>\r\n                        <CardActionArea className={classes.pokemonButton}>\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            alt={pokeEvolutionChain[8].species_name}\r\n                            height=\"140\"\r\n                            image={`https://pokeres.bastionbot.org/images/pokemon/${pokeEvolutionChain[8].id}.png`}\r\n                            title={pokeEvolutionChain[8].species_name}\r\n                            className={classes.pokemonImg}\r\n                        />\r\n                        <CardContent style={{padding: 0, marginTop: '0.5rem'}}>\r\n                            <Typography  variant=\"h5\" component=\"h2\" className={classes.text}>\r\n                            {pokeEvolutionChain[8].species_name}\r\n                            </Typography>\r\n                        </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>{/* third column end  */}\r\n        </Grid>\r\n    </Hidden>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default PokeEvolutionExceptionType1;","import React, {useEffect, useState} from 'react';\r\nimport FastAverageColor from 'fast-average-color';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PokeDetailed from './PokeDetailed';\r\nimport Color from 'color';\r\nimport PokeStats from './PokeStats';\r\nimport PokeEvolution from './PokeEvolution';\r\nimport PokeEvolutionExceptionType1 from './PokeEvolutionExceptionType1';\r\nimport PokeEvolutionExceptionType2 from './PokeEvolutionExceptionType2';\r\nimport PokeEvolutionExceptionType3 from './PokeEvolutionExceptionType3';\r\nimport PokeEvolutionExceptionType4 from './PokeEvolutionExceptionType4';\r\nimport PokeEvolutionExceptionType5 from './PokeEvolutionExceptionType5';\r\nimport {connect} from 'react-redux';\r\nimport * as actionCreators from '../../store/actions/actionCreators';\r\nimport Navbar from '../Navbar/Navbar';\r\nimport * as actionTypes from '../../store/actions/actionTypes';\r\nimport loading from '../../assests/images/loading.gif';\r\n\r\n\r\nconst useStyles = makeStyles((theme, props) => ({\r\n    parentContainer:{\r\n        minHeight: '100vh',\r\n        paddingTop: '9rem'\r\n    },\r\n    pokemon:{\r\n        alignSelf: 'center',\r\n        '@media  (min-width: 2500px)': {\r\n            maxWidth: '1300px'\r\n          },\r\n    },\r\n    pokeStats:{\r\n        alignSelf: 'center',\r\n        '@media  (min-width: 2500px)': {\r\n            maxWidth: '1100px'\r\n        },\r\n    },\r\n    mainDiv:{\r\n        zIndex: '10000',\r\n        background: 'rgb(151, 183, 255)', \r\n        margin: '0 auto',\r\n        width: '100vw',\r\n        height: '100vh',\r\n        textAlign: 'center',\r\n        position: 'fixed',\r\n        top: 0,\r\n        overflow: 'auto'\r\n    },\r\n    img:{\r\n          marginTop: '10vh',\r\n          height: 'auto',\r\n          [theme.breakpoints.down('md')]: {\r\n              marginTop: '5vh',\r\n          },\r\n          [theme.breakpoints.down('sm')]: {\r\n              marginTop: '30vh',\r\n              height: '300px'\r\n          },\r\n          [theme.breakpoints.down('xs')]: {\r\n              marginTop: '25vh',\r\n              height: '200px'\r\n          },\r\n    },\r\n}));\r\n\r\n\r\nconst PokemonPage = (props) => {\r\n    const [bgColorLoaded, bgColorHandler] = useState(false);\r\n    const GetColor = () => {\r\n        if(props.id !== null){\r\n            let imageURL = `https://pokeres.bastionbot.org/images/pokemon/${props.id}.png`;\r\n            const downloadedImg = new Image;\r\n            downloadedImg.crossOrigin = \"Anonymous\";\r\n            downloadedImg.src = imageURL;\r\n            const fac = new FastAverageColor();\r\n            fac.getColorAsync(downloadedImg)\r\n                .then((color) => {\r\n                    color = color;\r\n                    const rgb = color.rgb;\r\n                    const colorrgb = Color(rgb);\r\n                    let colorprop = colorrgb.saturate(1.5);\r\n                    props.bgIsDark(colorprop.isDark());\r\n                    if(colorprop.isDark()){\r\n                        colorprop = colorprop.lighten(0.3);\r\n                    }\r\n                    document.querySelector('#container').style.background = colorprop;\r\n                    setTimeout(() => {\r\n                        bgColorHandler(true);\r\n                    }, 1200);\r\n                    \r\n                });\r\n        }\r\n    }\r\n    \r\n    const classes = useStyles(props);\r\n    useEffect(() =>{\r\n        props.onDataLoad(props.match.params.search);        //it works when directly visiting this link because the app.js is loaded first then routed here and then props.match is accessible\r\n        return props.onDataUnload;\r\n    },[props.match.params.search]);\r\n    useEffect(() => {\r\n        bgColorHandler(false);\r\n        GetColor();\r\n    },[props.loaded, props.pokeEvolutionChain, props.match.params.search]) //added pokeEvolutionChain else causes a bug idk why\r\n    useEffect(() => {\r\n        if(props.error){\r\n            props.history.push({pathname: '/404/'});\r\n        }\r\n    },[props.error])\r\n\r\n    const getRandomPokeDesc = (flavourText) => {\r\n        if(flavourText){    //else wont work for first case when it's undefined\r\n            const size = flavourText.length;\r\n            const randomNumber = Math.floor(Math.random() * (size - 0)) + 0;\r\n            return flavourText[randomNumber].flavor_text;\r\n        }\r\n    }\r\n    return(\r\n        <Grid container className={classes.parentContainer} id=\"container\" justify=\"center\">\r\n        {bgColorLoaded && props.id ?\r\n        <React.Fragment>\r\n          <Navbar  history={props.history} hasBack={true} noLogo={true} homeBtn={true}/>\r\n            <Grid container item xs={12} md={7}  className={classes.pokemon} >\r\n                <PokeDetailed pokeImg={`https://pokeres.bastionbot.org/images/pokemon/${props.id}.png`}  \r\n                pokeName={props.pokeName}\r\n                pokejpName={props.pokejpName}\r\n                pokeHeight={props.pokeHeight}\r\n                pokeWeight={props.pokeWeight}\r\n                pokeDesc={getRandomPokeDesc(props.pokeDesc)}\r\n                />\r\n            </Grid>\r\n            <Grid container item xs={12} md={5} className={classes.pokeStats} >\r\n                <PokeStats pokeStats={props.pokeStats}  pokeTypes={props.pokeTypes}/>\r\n            </Grid>\r\n            <Grid container item xs={12} justify=\"center\" style={{ marginTop: '8rem'}}>\r\n                <Grid container item xs={12} justify=\"center\">\r\n                <Typography className={classes.textColor} variant=\"h3\">Evolution</Typography>\r\n                </Grid>\r\n                {\r\n                    ( props.pokeEvolutionChain[0] ? \r\n                    props.pokeEvolutionChain[0].species_name === 'oddish' \r\n                    || props.pokeEvolutionChain[0].species_name === 'poliwag'\r\n                    || props.pokeEvolutionChain[0].species_name === 'ralts'\r\n                    || props.pokeEvolutionChain[0].species_name === 'cosmog'\r\n                    ? \r\n                    <PokeEvolutionExceptionType1 pokeEvolutionChain={props.pokeEvolutionChain} history={props.history} /> :\r\n                    props.pokeEvolutionChain[0] ? \r\n                    props.pokeEvolutionChain[0].species_name === 'slowpoke' \r\n                    || props.pokeEvolutionChain[0].species_name === 'nincada'\r\n                    || props.pokeEvolutionChain[0].species_name === 'snorunt'\r\n                    || props.pokeEvolutionChain[0].species_name === 'clamperl'\r\n                    || props.pokeEvolutionChain[0].species_name === 'burmy'\r\n                    ? \r\n                    <PokeEvolutionExceptionType2 pokeEvolutionChain={props.pokeEvolutionChain} history={props.history} /> :\r\n                    props.pokeEvolutionChain[0] ? \r\n                    props.pokeEvolutionChain[0].species_name === 'wurmple'\r\n                    ? \r\n                    <PokeEvolutionExceptionType3 pokeEvolutionChain={props.pokeEvolutionChain} history={props.history} /> :\r\n                    props.pokeEvolutionChain[0] ? \r\n                    props.pokeEvolutionChain[0].species_name === 'tyrogue'\r\n                    ? \r\n                    <PokeEvolutionExceptionType4 pokeEvolutionChain={props.pokeEvolutionChain} history={props.history} /> :\r\n                    props.pokeEvolutionChain[0] ? \r\n                    props.pokeEvolutionChain[0].species_name === 'eevee'\r\n                    ? \r\n                    <PokeEvolutionExceptionType5 pokeEvolutionChain={props.pokeEvolutionChain} history={props.history} /> :\r\n                    <PokeEvolution pokeEvolutionChain={props.pokeEvolutionChain} history={props.history} /> :\r\n                    null : null : null : null : null\r\n                    )\r\n                }\r\n            </Grid>\r\n            </React.Fragment>\r\n            : <div className={classes.mainDiv}><img src={loading} className={classes.img}></img></div>\r\n            }\r\n        </Grid>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => { //when mapstatetoprops change it causes rerender\r\n    return({\r\n        id: state.currentPokemon? state.currentPokemon.id : null,   //cause for initial state there's no key value pairs in object\r\n        pokeName: state.currentPokemon? state.currentPokemon.name : '',\r\n        pokejpName: state.currentPokemon? state.currentPokemon.jpName : '',\r\n        pokeHeight: state.currentPokemon? state.currentPokemon.height: '',\r\n        pokeWeight: state.currentPokemon? state.currentPokemon.weight: '',\r\n        pokeStats: state.currentPokemon? state.currentPokemon.stats: '',\r\n        pokeDesc: state.currentPokemon? state.currentPokemon.flavourText: '',\r\n        pokeEvolutionChain: state.evolutionChain? state.evolutionChain : '',\r\n        pokeTypes: state.currentPokemon? state.currentPokemon.types : '',\r\n        loaded: state.loaded,\r\n        isDark: state.isDark,\r\n        error: state.error\r\n    });\r\n}\r\nconst mapDispatchToProps = (dispatch) => {  \r\n    return{\r\n        onDataLoad: (search) => dispatch(actionCreators.getPokemon(search)),\r\n        onDataUnload: () => dispatch({type: actionTypes.CLEANCURRENTPOKEMON}),\r\n        bgIsDark: (isDark) => dispatch({type: actionTypes.BGISDARK, isDark: isDark})\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PokemonPage);","import React, {useEffect, useState} from 'react';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {connect} from 'react-redux';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport * as actionCreators from '../../store/actions/actionCreators';\r\nimport * as actionTypes from '../../store/actions/actionTypes';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport Navbar from '../Navbar/Navbar';\r\nimport loading4 from '../../assests/images/loading4.gif';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  allPokemonGrid:{\r\n    margin: '8rem auto',\r\n    textAlign: 'center',\r\n  },\r\n  pokemonCard:{\r\n    margin: '1rem',\r\n    [theme.breakpoints.up('md')]: {\r\n      flexBasis: '16.666667%',\r\n      maxWidth: '16.666667%'\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      flexBasis: '14.666667%',\r\n      maxWidth: '14.666667%'\r\n    },\r\n    '@media  (max-width: 750px)': {\r\n      flexBasis: '20.666667%',\r\n      maxWidth: '20.666667%'\r\n    },\r\n    '@media  (max-width: 600px)': {\r\n      flexBasis: '27.666667%',\r\n      maxWidth: '27.666667%'\r\n    },\r\n    '@media  (max-width: 400px)': {\r\n      flexBasis: '50.666667%',\r\n      maxWidth: '50.666667%'\r\n    },\r\n  },\r\n  pokemonImg:{\r\n    objectFit: 'contain'\r\n  },\r\n  pokemonText: {\r\n    textTransform: 'capitalize'\r\n  },\r\n  pokemonButton:{\r\n    padding: '2rem',\r\n    [theme.breakpoints.down('md')]: {\r\n      padding: '1.2rem',\r\n    },\r\n  },\r\n  paginationBtn:{\r\n    '@media  (max-width: 400px)': {\r\n      minWidth: '24px',\r\n      height: '24px'\r\n    },\r\n  },\r\n  mainDiv:{\r\n    zIndex: '10000',\r\n    background: 'rgb(104, 34, 202)', \r\n    margin: '0 auto',\r\n    width: '100vw',\r\n    height: '100vh',\r\n    textAlign: 'center',\r\n    position: 'fixed',\r\n    top: 0,\r\n    overflow: 'auto'\r\n  },\r\n  img:{\r\n      marginTop: '10vh',\r\n      height: 'auto',\r\n      [theme.breakpoints.down('md')]: {\r\n          marginTop: '5vh',\r\n      },\r\n      [theme.breakpoints.down('sm')]: {\r\n        marginTop: '30vh',\r\n        height: '300px'\r\n      },\r\n      [theme.breakpoints.down('xs')]: {\r\n          marginTop: '25vh',\r\n          height: '200px'\r\n      },\r\n    },\r\n}));\r\n\r\n\r\nconst AllPokemons = (props) => {\r\n    const classes = useStyles();\r\n    const [minTime, setMinTime] = useState(false);\r\n    useEffect(() => {\r\n        setMinTime(false);\r\n        props.onDataLoad(props.match.params.pageno);\r\n        setTimeout(() => {\r\n          setMinTime(true);\r\n        },1000)\r\n        return props.onDataUnload;  //so that it wont get repopulated with same pokemons when back is pressed //cleanup\r\n    },[props.match.params.pageno]); //when page number changes => component did update\r\n    useEffect(() => {\r\n      if(props.error){\r\n          props.history.push({pathname: '/404/'});\r\n      }\r\n    },[props.error])\r\n    const pokeSelectorHandler = (search) => {\r\n        props.history.push({pathname: '/pokemon/' + search});\r\n    }\r\n    const pageSelectorHandler = (pageno) => {\r\n        props.history.push({pathname: '/allPokemons/' + pageno});\r\n    }  \r\n    return(\r\n        <React.Fragment>\r\n           {props.allPokemon.length && minTime ? \r\n          <React.Fragment>\r\n          <Navbar elevation={1} color={'primary'} history={props.history} padding={false}/>\r\n          <Grid container xs={12} md={10} lg={8} justify=\"center\" className={classes.allPokemonGrid}>\r\n                {props.allPokemon.map((pokemon) => {\r\n                    const id = pokemon.url.split('/')[6];\r\n                    return(\r\n                        <Grid container item xs={12} className={classes.pokemonCard} key={id} onClick={() => pokeSelectorHandler(pokemon.name)}>\r\n                        <Card >\r\n                          <CardActionArea className={classes.pokemonButton}>\r\n                            <CardMedia\r\n                              component=\"img\"\r\n                              alt={pokemon.name}\r\n                              height=\"140\"\r\n                              image={`https://pokeres.bastionbot.org/images/pokemon/${id}.png`}\r\n                              title={pokemon.name}\r\n                              className={classes.pokemonImg}\r\n                            />\r\n                            <CardContent style={{padding: 0, paddingTop: '10px'}}>\r\n                              <Typography  variant=\"h5\" component=\"h2\" className={classes.pokemonText}>\r\n                                {pokemon.name}\r\n                              </Typography>\r\n                            </CardContent>\r\n                          </CardActionArea>\r\n                        </Card>\r\n                      </Grid>\r\n                    )\r\n                })}\r\n          <Pagination count={23} color=\"primary\" page={+props.match.params.pageno} onChange={(_, page) => pageSelectorHandler(page)  } siblingCount={0} /> {/*adding '+' in page to convert string to number*/}\r\n          </Grid>\r\n          </React.Fragment>\r\n          : <div className={classes.mainDiv}><img src={loading4} className={classes.img}></img></div>\r\n          }\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => { //when mapstatetoprops change it causes rerender\r\n    return({\r\n        allPokemon: state.allPokemons? state.allPokemons: [],\r\n        error: state.error\r\n    });\r\n}\r\nconst mapDispatchToProps = (dispatch) => {  \r\n    return{\r\n        onDataLoad: (pageno) => dispatch(actionCreators.getAllPokemon(pageno)),\r\n        onDataUnload: () => dispatch({type: actionTypes.CLEANALLPOKEMONS})\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AllPokemons);","import React from 'react';\r\nimport loading2 from '../../assests/images/loading2.gif';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    mainDiv:{\r\n        zIndex: '10000',\r\n        background: 'rgb(254, 181, 174)', \r\n        margin: '0 auto',\r\n        width: '100vw',\r\n        height: '100vh',\r\n        textAlign: 'center',\r\n        position: 'fixed',\r\n        top: 0,\r\n        overflow: 'auto'\r\n    },\r\n    img:{\r\n        marginTop: '10vh',\r\n        height: 'auto',\r\n        [theme.breakpoints.down('md')]: {\r\n            marginTop: '5vh',\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginTop: '0',\r\n            height: '300px'\r\n        },\r\n        [theme.breakpoints.down('xs')]: {\r\n            marginTop: '0',\r\n            height: '200px'\r\n        },\r\n    },\r\n    text:{\r\n        fontSize: '4rem',\r\n        [theme.breakpoints.down('md')]: {\r\n            fontSize: '3rem',\r\n        },\r\n        [theme.breakpoints.down('xs')]: {\r\n            fontSize: '2rem',\r\n        },\r\n    }\r\n}));\r\n\r\nconst Page404 = (props) => {\r\n    const homeBtnHandler = () => {\r\n        props.history.push({pathname: '/'});\r\n    }\r\n    const classes = useStyles();\r\n    return(\r\n        <div className={classes.mainDiv}>\r\n            <img src={loading2} className={classes.img}></img>\r\n            <Typography className={classes.text}>\r\n                Page/Pokemon not found!!\r\n            </Typography>\r\n            <IconButton onClick={homeBtnHandler}>\r\n            Home<HomeOutlinedIcon  /> \r\n            </IconButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Page404;","import React from 'react';\nimport Navbar from './components/Navbar/Navbar';\nimport LandingPage from './components/LandingPage/LandingPage';\nimport PokemonPage from './components/PokemonPage/PokemonPage';\nimport AllPokemons from './components/AllPokemons/AllPokemons';\nimport page404 from './components/page404/page404';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\n\n\nfunction App() {\n  return (\n      <BrowserRouter basename=\"/pokedex\"> {/*just for github pages */}\n        <div className=\"App\">\n            <Route path=\"/\" exact component={Navbar}></Route> {/*it's outside so that for landing page both navbar and landigpage get rendered and not just navbar and as it's exact it wont get rendered for any other route */}\n            <Switch>\n            <Route path=\"/\" exact component={LandingPage}></Route>\n            <Route path=\"/pokemon/:search\" component={PokemonPage}></Route>\n            <Route path=\"/AllPokemons/:pageno\" component={AllPokemons}></Route>\n            <Route component={page404}></Route>\n            </Switch>\n        </div>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n    typography: {\r\n      // Tell Material-UI what's the font-size on the html element is.\r\n      htmlFontSize: 10,\r\n      '@media (min-width:2500px)': {\r\n        htmlFontSize: 16\r\n      },\r\n      h1:{\r\n          fontWeight: 400,\r\n      },\r\n    },\r\n});\r\n\r\ntheme.typography.h1 = {\r\n  fontSize: '9.6rem',\r\n  fontWeight: 400,\r\n  '@media (min-width: 1280px) and (max-width: 1650px)': {\r\n    fontSize: '6.6rem',\r\n  },\r\n  '@media  (max-width: 1280px)': {\r\n    fontSize: '5.6rem',\r\n  },\r\n  '@media  (max-width: 600px)': {\r\n    fontSize: '4.6rem',\r\n  },\r\n};\r\n\r\ntheme.typography.h3 = {\r\n  fontSize: '4.8rem',\r\n  fontWeight: 400,\r\n  '@media (min-width: 1280px) and (max-width: 1650px)': {\r\n    fontSize: '3.8rem',\r\n  },\r\n  '@media  (max-width: 1280px)': {\r\n    fontSize: '2.8rem',\r\n  },\r\n}\r\n\r\n\r\ntheme.typography.h5 = {\r\n  fontSize: '2rem',\r\n  fontWeight: 400,\r\n  '@media  (max-width: 1180px)': {\r\n    fontSize: '1.6rem',\r\n  },\r\n}\r\n\r\n\r\nexport default theme;\r\n","import * as actionTypes from '../actions/actionTypes';\r\nconst initialState = {\r\n    loaded: false,\r\n    landingPokemon: null,\r\n    search: null,\r\n    allPokemons: [],\r\n    currentPokemon: null,\r\n    evolutionChain: null,\r\n    isDark: false,\r\n    error: false\r\n}\r\nconst reducer = (state = initialState, action) => {\r\n    if(action.type === actionTypes.LOADPOKEMON){\r\n        return{\r\n            ...state,\r\n            search: action.search,\r\n            loaded: false,\r\n            currentPokemon: action.currentPokemon,\r\n            error: action.error\r\n        }\r\n    }\r\n    if(action.type === actionTypes.LOADEVOLUTIONCHAIN){\r\n        return{\r\n            ...state,\r\n            evolutionChain: action.evolutionChain\r\n        }\r\n    }\r\n    if(action.type === actionTypes.LOADJPNAMEANDTEXT){\r\n        return{\r\n            ...state,\r\n            currentPokemon: {               //https://redux.js.org/recipes/structuring-reducers/immutable-update-patterns\r\n                ...state.currentPokemon,    \r\n                jpName: action.currentPokemon.jpName,\r\n                flavourText: action.currentPokemon.flavourText\r\n            }\r\n        }\r\n    }\r\n    if(action.type === actionTypes.VIEWALLPOKEMONS){\r\n        return{\r\n            ...state,\r\n            allPokemons: [...state.allPokemons, ...action.allPokemons],  //@ https://stackoverflow.com/questions/41209675/how-to-concat-arrays-immutable-way-js\r\n            loaded: false,\r\n            error: action.error\r\n        }\r\n    }\r\n    if(action.type === actionTypes.CLEANALLPOKEMONS){\r\n        return{\r\n            ...state,\r\n            allPokemons: [],\r\n            loaded: false\r\n        }\r\n    }\r\n    if(action.type === actionTypes.CLEANCURRENTPOKEMON){\r\n        return{\r\n            ...state,\r\n            currentPokemon: null,\r\n            evolutionChain: null,\r\n            loaded: false\r\n        }\r\n    }\r\n    if(action.type === actionTypes.LANDINGPOKEMON){\r\n        return{\r\n            ...state,\r\n            landingPokemon: action.landingPokemon,\r\n            loaded: false,\r\n        }\r\n    }\r\n    if(action.type === actionTypes.LOADJPNAMEANDTEXTLANDINGPOKEMON){\r\n        return{\r\n            ...state,\r\n            landingPokemon: {\r\n                ...state.landingPokemon,\r\n                jpName: action.landingPokemon.jpName,\r\n                flavourText: action.landingPokemon.flavourText\r\n            }\r\n        }\r\n    }\r\n    if(action.type === actionTypes.CLEANLANDINGPOKEMON){\r\n        return{\r\n            ...state,\r\n            landingPokemon: null,\r\n            loaded: false,\r\n        }\r\n    }\r\n    if(action.type === actionTypes.BGISDARK){\r\n        return{\r\n            ...state,\r\n            isDark: action.isDark\r\n        }\r\n    }\r\n    if(action.type === actionTypes.DATALOADED){\r\n        return{\r\n            ...state,\r\n            loaded: true\r\n        }\r\n    }\r\n    if(action.type === actionTypes.ERROR){\r\n        return{\r\n            ...state,\r\n            error: action.error\r\n        }\r\n    }\r\n    return state;   //very important\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from './store/reducers/reducer';\nimport thunk from 'redux-thunk';\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.da060263.png\";","module.exports = __webpack_public_path__ + \"static/media/landing.3c5efcde.gif\";","module.exports = __webpack_public_path__ + \"static/media/landing2.bda662ac.gif\";","module.exports = __webpack_public_path__ + \"static/media/landing3.f8561031.gif\";","module.exports = __webpack_public_path__ + \"static/media/landing4.f615900e.gif\";","module.exports = __webpack_public_path__ + \"static/media/landing5.cde9e2b5.gif\";","module.exports = __webpack_public_path__ + \"static/media/landing6.f096658a.gif\";","module.exports = __webpack_public_path__ + \"static/media/landing7.57c8e5af.gif\";","module.exports = __webpack_public_path__ + \"static/media/loading3.65aacb01.gif\";","module.exports = __webpack_public_path__ + \"static/media/hp.679df417.svg\";"],"sourceRoot":""}